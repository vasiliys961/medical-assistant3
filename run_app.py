#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ò–ò

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
"""

import os
import sys
import subprocess
import importlib.util
from pathlib import Path

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 8):
        print("‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –Ω–æ–≤–µ–µ")
        print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        sys.exit(1)
    else:
        print(f"‚úÖ Python –≤–µ—Ä—Å–∏—è: {sys.version.split()[0]}")

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    requirements_file = Path("requirements.txt")
    
    if not requirements_file.exists():
        print("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    missing_packages = []
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    required_packages = [
        "streamlit",
        "pandas", 
        "numpy",
        "plotly",
        "PIL",
        "anthropic"
    ]
    
    for package in required_packages:
        try:
            if package == "PIL":
                importlib.import_module("PIL")
            else:
                importlib.import_module(package)
            print(f"‚úÖ {package}")
        except ImportError:
            print(f"‚ùå {package}")
            missing_packages.append(package)
    
    if missing_packages:
        print(f"\n‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    return True

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ .env
    env_file = Path(".env")
    env_example = Path(".env.example")
    
    if not env_file.exists():
        if env_example.exists():
            print("‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("üìÑ –°–æ–∑–¥–∞–π—Ç–µ .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example")
        else:
            print("‚ÑπÔ∏è  –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("ü§ñ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return False
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    try:
        from dotenv import load_dotenv
        load_dotenv()
        
        api_key = os.getenv('ANTHROPIC_API_KEY')
        if api_key:
            print("‚úÖ API –∫–ª—é—á Anthropic –Ω–∞–π–¥–µ–Ω")
            return True
        else:
            print("‚ö†Ô∏è  API –∫–ª—é—á Anthropic –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            print("ü§ñ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
            return False
            
    except ImportError:
        print("‚ö†Ô∏è  python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install python-dotenv")
        return False

def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    directories = [
        "data",
        "uploads", 
        "temp",
        "backups",
        "logs",
        ".streamlit"
    ]
    
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    
    for directory in directories:
        path = Path(directory)
        if not path.exists():
            path.mkdir(parents=True, exist_ok=True)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞: {directory}")
        else:
            print(f"‚ÑπÔ∏è  –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {directory}")

def check_streamlit_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Streamlit"""
    config_file = Path(".streamlit/config.toml")
    
    if not config_file.exists():
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Streamlit...")
        
        config_content = """[global]
dataFrameSerialization = "legacy"

[server]
runOnSave = true
port = 8501
maxUploadSize = 200

[browser]
gatherUsageStats = false

[theme]
primaryColor = "#FF6B6B"
backgroundColor = "#FFFFFF"
secondaryBackgroundColor = "#F0F2F6"
textColor = "#262730"
"""
        
        with open(config_file, 'w', encoding='utf-8') as f:
            f.write(config_content)
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Streamlit —Å–æ–∑–¥–∞–Ω–∞")
    else:
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Streamlit –Ω–∞–π–¥–µ–Ω–∞")

def install_requirements():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
        ])
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return False

def run_application():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")
    print("üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8501")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        subprocess.run([
            sys.executable, "-m", "streamlit", "run", "app.py",
            "--server.headless", "true",
            "--server.fileWatcherType", "auto"
        ])
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except FileNotFoundError:
        print("‚ùå Streamlit –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install streamlit")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    help_text = """
üè• –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –ê–°–°–ò–°–¢–ï–ù–¢ –° –ò–ò

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python run_app.py [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
    --help, -h          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
    --check             –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    --install           –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    --setup             –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    --dev               –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    --port PORT         –£–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8501)

–ü—Ä–∏–º–µ—Ä—ã:
    python run_app.py                # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫
    python run_app.py --check        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    python run_app.py --setup        # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    python run_app.py --port 8080    # –ó–∞–ø—É—Å–∫ –Ω–∞ –ø–æ—Ä—Ç—É 8080

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - Python 3.8+
    - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
    - API –∫–ª—é—á Anthropic (–¥–ª—è –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π)

–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:
    1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env
    2. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à API –∫–ª—é—á Anthropic
    3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

–ü–æ–¥–¥–µ—Ä–∂–∫–∞:
    GitHub: https://github.com/vasiliys961/medical-assistant
    Email: vasiliys961@example.com
"""
    print(help_text)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import argparse
    
    parser = argparse.ArgumentParser(description="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –ò–ò", add_help=False)
    parser.add_argument("--help", "-h", action="store_true", help="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
    parser.add_argument("--check", action="store_true", help="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    parser.add_argument("--install", action="store_true", help="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    parser.add_argument("--setup", action="store_true", help="–ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    parser.add_argument("--dev", action="store_true", help="–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
    parser.add_argument("--port", type=int, default=8501, help="–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞")
    
    args = parser.parse_args()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    print("=" * 60)
    print("üè• –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –ê–°–°–ò–°–¢–ï–ù–¢ –° –ò–°–ö–£–°–°–¢–í–ï–ù–ù–´–ú –ò–ù–¢–ï–õ–õ–ï–ö–¢–û–ú")
    print("=" * 60)
    
    if args.help:
        show_help()
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    check_python_version()
    
    if args.check:
        print("\nüîç –†–ï–ñ–ò–ú –ü–†–û–í–ï–†–ö–ò")
        check_requirements()
        check_environment()
        return
    
    if args.install:
        print("\nüì¶ –†–ï–ñ–ò–ú –£–°–¢–ê–ù–û–í–ö–ò")
        install_requirements()
        return
    
    if args.setup:
        print("\n‚öôÔ∏è –†–ï–ñ–ò–ú –ù–ê–°–¢–†–û–ô–ö–ò")
        create_directories()
        check_streamlit_config()
        
        if not check_requirements():
            print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
            if not install_requirements():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
                return
        
        check_environment()
        print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        if input("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ? (y/n): ").lower() == 'y':
            run_application()
        return
    
    # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫
    print("\nüîß –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    create_directories()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Streamlit
    check_streamlit_config()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not check_requirements():
        if input("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏? (y/n): ").lower() == 'y':
            if not install_requirements():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
                return
        else:
            print("‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = check_environment()
    if not env_ok:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ò–ò –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        if input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø—É—Å–∫? (y/n): ").lower() != 'y':
            return
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if args.dev:
        print("\nüîß –†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ö–ò")
        os.environ['STREAMLIT_DEV_MODE'] = 'true'
    
    if args.port != 8501:
        os.environ['STREAMLIT_SERVER_PORT'] = str(args.port)
    
    run_application()

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("üìß –°–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ: vasiliys961@example.com")