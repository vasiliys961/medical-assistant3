{
  "tree_structure": {
    "type": "directory",
    "name": "",
    "path": ".",
    "children": {
      ".streamlit": {
        "type": "directory",
        "name": ".streamlit",
        "path": ".streamlit",
        "children": {
          "secrets.toml": {
            "type": "file",
            "name": "secrets.toml",
            "path": ".streamlit/secrets.toml",
            "size": 426,
            "category": "config"
          }
        },
        "stats": {
          "total_files": 1,
          "total_dirs": 0,
          "python_files": 0,
          "total_lines": 0,
          "categories": {
            "config": 1
          }
        }
      },
      "README.md": {
        "type": "file",
        "name": "README.md",
        "path": "README.md",
        "size": 11735,
        "category": "docs"
      },
      "advanced_ecg_processor.py": {
        "type": "file",
        "name": "advanced_ecg_processor.py",
        "path": "advanced_ecg_processor.py",
        "size": 21959,
        "category": "python",
        "analysis": {
          "lines": 467,
          "imports": [
            "import numpy as np",
            "import pandas as pd",
            "from scipy import signal",
            "from scipy.stats import kurtosis, skew",
            "import matplotlib.pyplot as plt",
            "from datetime import datetime",
            "import json"
          ],
          "classes": [
            "AdvancedECGProcessor"
          ],
          "functions": [
            "__init__",
            "load_multi_lead_ecg",
            "preprocess_signal",
            "remove_baseline_drift",
            "apply_bandpass_filter",
            "remove_powerline_interference",
            "detect_r_peaks",
            "calculate_rr_intervals",
            "calculate_heart_rate_variability",
            "calculate_triangular_index",
            "detect_arrhythmias",
            "analyze_morphology",
            "calculate_qt_interval",
            "generate_comprehensive_report",
            "assess_signal_quality",
            "assess_rhythm_regularity",
            "generate_clinical_interpretation",
            "generate_recommendations"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 55: # –£–¥–∞–ª–µ–Ω–∏–µ –¥—Ä–µ–π—Ñ–∞ –±–∞–∑–æ–≤–æ–π –ª–∏–Ω–∏–∏...",
            "Line 66: \"\"\"–£–¥–∞–ª–µ–Ω–∏–µ –¥—Ä–µ–π—Ñ–∞ –±–∞–∑–æ–≤–æ–π –ª–∏–Ω–∏–∏\"\"\"...",
            "Line 202: cv_rr = std_rr / mean_rr  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏...",
            "Line 203: if cv_rr > 0.15:  # –ï—Å–ª–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏ > 15...",
            "Line 206: 'description': f'–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏ RR: {cv_rr:....",
            "Line 225: \"\"\"–ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏ –≠–ö–ì –∫–æ–º–ø–ª–µ–∫—Å–æ–≤\"\"\"...",
            "Line 273: # –í–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
            "Line 293: # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ü–∞ T –≤–æ–ª–Ω—ã (–≤–æ–∑–≤—Ä–∞—Ç –∫ –∏–∑–æ–ª–∏–Ω–∏–∏)...",
            "Line 346: # –ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
            "Line 411: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏\"\"\"...",
            "Line 432: # –ê—Ä–∏—Ç–º–∏–∏...",
            "Line 451: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞—Ä–∏—Ç–º–∏—è–º...",
            "Line 456: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ QT...",
            "Line 458: recommendations.append(\"–£–¥–ª–∏–Ω–µ–Ω–∏–µ QTc —Ç—Ä–µ–±—É–µ—Ç –º–æ–Ω–∏...",
            "Line 460: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –í–°–†...",
            "Line 462: recommendations.append(\"–°–Ω–∏–∂–µ–Ω–Ω–∞—è –í–°–† –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤..."
          ],
          "medical_terms": [
            "Line 9: class AdvancedECGProcessor:...",
            "Line 10: \"\"\"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –¥...",
            "Line 16: def load_multi_lead_ecg(self, data, format_type='c...",
            "Line 24: if isinstance(data, dict):...",
            "Line 81: quality_factor = 30...",
            "Line 82: sos = signal.iirnotch(notch_freq, quality_factor, ...",
            "Line 86: def detect_r_peaks(self, signal_data, min_distance...",
            "Line 110: corrected_peaks = []...",
            "Line 118: corrected_peaks.append(local_max_idx)...",
            "Line 120: return np.array(corrected_peaks)...",
            "Line 173: def detect_arrhythmias(self, rr_intervals, signal_...",
            "Line 180: # –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 225: \"\"\"–ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏ –≠–ö–ì –∫–æ–º–ø–ª–µ–∫—Å–æ–≤\"\"\"...",
            "Line 247: # –ê–Ω–∞–ª–∏–∑ —Å—Ä–µ–¥–Ω–∏—Ö –∞–º–ø–ª–∏—Ç—É–¥...",
            "Line 335: r_peaks = self.detect_r_peaks(processed_signal)...",
            "Line 340: # –ê–Ω–∞–ª–∏–∑ –í–°–†...",
            "Line 344: arrhythmias = self.detect_arrhythmias(rr_intervals...",
            "Line 346: # –ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
            "Line 349: # –ê–Ω–∞–ª–∏–∑ QT –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞...",
            "Line 358: 'r_peaks_detected': len(r_peaks),...",
            "Line 368: 'clinical_interpretation': self.generate_clinical_...",
            "Line 386: expected_peaks = len(signal_data) / self.sampling_...",
            "Line 387: peak_detection_ratio = len(r_peaks) / expected_pea...",
            "Line 390: quality_score = min(100, (np.log(snr) * 10 + peak_...",
            "Line 410: def generate_clinical_interpretation(self, hrv_met...",
            "Line 414: # –ê–Ω–∞–ª–∏–∑ –ß–°–°...",
            "Line 424: # –ê–Ω–∞–ª–∏–∑ –í–°–†...",
            "Line 437: # QT –∞–Ω–∞–ª–∏–∑..."
          ]
        }
      },
      "app.py": {
        "type": "file",
        "name": "app.py",
        "path": "app.py",
        "size": 32618,
        "category": "python",
        "analysis": {
          "lines": 710,
          "imports": [
            "from claude_assistant import OpenRouterAssistant",
            "import streamlit as st",
            "import io",
            "import base64",
            "import sqlite3",
            "import pandas as pd",
            "import numpy as np",
            "from PIL import Image",
            "import requests",
            "import tempfile",
            "import os",
            "from io import BytesIO",
            "import librosa",
            "from modules.medical_ai_analyzer import EnhancedMedicalAIAnalyzer, ImageType",
            "from modules.streamlit_enhanced_pages import (",
            "from modules.advanced_lab_processor import AdvancedLabProcessor",
            "import datetime",
            "from claude_assistant import OpenRouterAssistant",
            "from assemblyai_transcriber import transcribe_audio_assemblyai",
            "from local_docs import create_local_doc"
          ],
          "classes": [],
          "functions": [
            "transcribe_audio",
            "init_db",
            "show_home_page",
            "show_ecg_analysis",
            "show_xray_analysis",
            "show_mri_analysis",
            "show_consultation_protocol",
            "show_patient_database",
            "show_ai_chat",
            "show_clinical_recommendations",
            "show_lab_analysis",
            "style_status",
            "show_genetic_analysis_page",
            "main"
          ],
          "streamlit_pages": [
            "Line 92: st.subheader(\"üìà –≠–ö–ì\")...",
            "Line 95: st.subheader(\"ü©ª –†–µ–Ω—Ç–≥–µ–Ω\")...",
            "Line 98: st.subheader(\"üß† –ú–†–¢\")...",
            "Line 106: st.header(\"üìà –ê–Ω–∞–ª–∏–∑ –≠–ö–ì\")...",
            "Line 125: st.subheader(\"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞\")...",
            "Line 150: st.header(\"ü©ª –ê–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–∞\")...",
            "Line 167: st.subheader(\"üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞\")...",
            "Line 191: st.header(\"üß† –ê–Ω–∞–ª–∏–∑ –ú–†–¢\")...",
            "Line 210: st.subheader(\"üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ú–†–¢\")...",
            "Line 240: st.header(\"üìù –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏—ë–º–∞\")...",
            "Line 254: st.subheader(\"üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ —á–µ—Ä–µ–∑ AssemblyAI\")...",
            "Line 274: st.subheader(\"üìù –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\")...",
            "Line 333: st.subheader(\"üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª\")...",
            "Line 337: st.header(\"üë§ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\")...",
            "Line 343: st.subheader(\"–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞\")...",
            "Line 364: st.subheader(\"–ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\")...",
            "Line 379: st.header(\"ü§ñ –ò–ò-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç\")...",
            "Line 460: st.header(\"üî¨ –ê–Ω–∞–ª–∏–∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\")...",
            "Line 524: st.subheader(\"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤\")...",
            "Line 542: st.subheader(\"üìã –ê–Ω–∞–ª–∏–∑ –ø–æ —Å–∏—Å—Ç–µ–º–∞–º\")...",
            "Line 546: with st.expander(f\"üìÅ {category.title()} ({len(para...",
            "Line 583: st.subheader(\"üß† –ò–ò-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è\")...",
            "Line 591: st.subheader(\"üìÑ –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\")...",
            "Line 619: st.header(\"üß¨ –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\")...",
            "Line 662: st.sidebar.title(\"üß† –ú–µ–Ω—é\")..."
          ],
          "ai_models": [
            "Line 1: # app.py (–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ—Å–ª–µ –∞–≤–∞—Ä–∏–∏)...",
            "Line 2: from claude_assistant import OpenRouterAssistant...",
            "Line 15: from modules.medical_ai_analyzer import EnhancedMe...",
            "Line 19: #show_ai_training_page,...",
            "Line 25: # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ò–ò ---...",
            "Line 27: from claude_assistant import OpenRouterAssistant...",
            "Line 28: AI_AVAILABLE = True...",
            "Line 31: AI_AVAILABLE = False...",
            "Line 33: # --- AssemblyAI –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ ---...",
            "Line 35: from assemblyai_transcriber import transcribe_audi...",
            "Line 36: ASSEMBLYAI_AVAILABLE = True...",
            "Line 38: ASSEMBLYAI_AVAILABLE = False...",
            "Line 41: \"\"\"–ó–∞–≥–ª—É—à–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ AssemblyAI\"\"\"...",
            "Line 42: return \"‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ AssemblyAI –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏\"...",
            "Line 86: st.markdown(\"# üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ò–ò-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç v5.1\")...",
            "Line 87: st.write(\"AssemblyAI + Vision + –ò–ò-–∞–Ω–∞–ª–∏–∑ + –ø—Ä–æ—Ç–æ–∫...",
            "Line 88: st.info(\"‚úÖ –ì–æ—Ç–æ–≤ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –≤–≤–æ–¥—É —á–µ—Ä–µ–∑ Assembly...",
            "Line 93: st.write(\"- –ß–°–°, —Ä–∏—Ç–º, –∞—Ä–∏—Ç–º–∏–∏\")...",
            "Line 102: if not AI_AVAILABLE:...",
            "Line 103: st.error(\"‚ùå –ò–ò-–º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `...",
            "Line 123: st.image(image_array, caption=\"–≠–ö–ì\", use_container...",
            "Line 134: assistant = OpenRouterAssistant()...",
            "Line 135: if st.button(\"üîç –ò–ò-–∞–Ω–∞–ª–∏–∑ –≠–ö–ì (—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º)\"):...",
            "Line 136: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≠–ö–ì...\"):...",
            "Line 137: prompt = \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≠–ö–ì –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏. –û—Ü–µ–Ω...",
            "Line 138: result = assistant.send_vision_request(prompt, ima...",
            "Line 139: st.markdown(\"### üß† –û—Ç–≤–µ—Ç –ò–ò:\")...",
            "Line 146: if not AI_AVAILABLE:...",
            "Line 147: st.error(\"‚ùå –ò–ò-–º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `...",
            "Line 165: st.image(image_array, caption=\"–†–µ–Ω—Ç–≥–µ–Ω\", use_conta...",
            "Line 175: assistant = OpenRouterAssistant()...",
            "Line 176: if st.button(\"ü©∫ –ò–ò-–∞–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–∞\"):...",
            "Line 177: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–Ω–∏–º–æ–∫...\"):...",
            "Line 178: prompt = \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–Ω—Ç–≥–µ–Ω –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏. ...",
            "Line 179: result = assistant.send_vision_request(prompt, ima...",
            "Line 187: if not AI_AVAILABLE:...",
            "Line 188: st.error(\"‚ùå –ò–ò-–º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `...",
            "Line 208: st.image(image_array, caption=\"–ú–†–¢-—Å—Ä–µ–∑\", use_cont...",
            "Line 221: assistant = OpenRouterAssistant()...",
            "Line 222: if st.button(\"üß† –ò–ò-–∞–Ω–∞–ª–∏–∑ –ú–†–¢ (—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º)\"):...",
            "Line 223: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ú–†–¢...\"):...",
            "Line 224: prompt = \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ú–†–¢-—Å—Ä–µ–∑ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏....",
            "Line 225: result = assistant.send_vision_request(prompt, ima...",
            "Line 226: st.markdown(\"### üß† –ù–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ...",
            "Line 236: if not AI_AVAILABLE:...",
            "Line 237: st.error(\"‚ùå –ò–ò-–º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `...",
            "Line 254: st.subheader(\"üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ —á–µ—Ä–µ–∑ AssemblyAI\")...",
            "Line 257: if not ASSEMBLYAI_AVAILABLE:...",
            "Line 258: st.error(\"‚ùå AssemblyAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª ...",
            "Line 261: if ASSEMBLYAI_AVAILABLE:...",
            "Line 262: with st.spinner(\"üîÑ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ AssemblyAI......",
            "Line 264: api_key = st.secrets[\"ASSEMBLYAI_API_KEY\"]...",
            "Line 265: raw_text = transcribe_audio_assemblyai(audio, api_...",
            "Line 268: st.error(f\"‚ùå –û—à–∏–±–∫–∞ AssemblyAI: {e}\")...",
            "Line 271: st.error(\"‚ùå AssemblyAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\")...",
            "Line 278: assistant = OpenRouterAssistant()...",
            "Line 299: - –ù–µ–≤—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å: (–æ—Å—Ç–∞–≤—å—Ç–µ \"–±–µ–∑ –ø–∞—Ç–æ–ª–æ–≥–∏–∏...",
            "Line 308: - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ–∂–∏–º—É, –¥–∏–µ—Ç–µ...",
            "Line 316: - –ï—Å–ª–∏ –ø—É–Ω–∫—Ç –Ω–µ —É–ø–æ–º—è–Ω—É—Ç ‚Äî –ø–æ—Å—Ç–∞–≤—å—Ç–µ \"–±–µ–∑ –ø–∞—Ç–æ–ª–æ–≥–∏...",
            "Line 319: structured_note = assistant.get_response(prompt)...",
            "Line 370: st.dataframe(df, use_container_width=True)...",
            "Line 374: def show_ai_chat():...",
            "Line 375: if not AI_AVAILABLE:...",
            "Line 376: st.error(\"‚ùå –ò–ò-–º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª `...",
            "Line 379: st.header(\"ü§ñ –ò–ò-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç\")...",
            "Line 382: assistant = OpenRouterAssistant()...",
            "Line 387: success, msg = assistant.test_connection()...",
            "Line 393: st.info(\"üí° –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Claude 3.5 Sonnet\")...",
            "Line 395: if 'chat_history' not in st.session_state:...",
            "Line 396: st.session_state.chat_history = []...",
            "Line 398: for msg in st.session_state.chat_history:...",
            "Line 399: st.chat_message(\"user\").write(msg['user'])...",
            "Line 400: st.chat_message(\"assistant\").write(msg['assistant'...",
            "Line 402: user_input = st.chat_input(\"–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å...\")...",
            "Line 404: st.chat_message(\"user\").write(user_input)...",
            "Line 405: with st.spinner(\"–ò–ò –¥—É–º–∞–µ—Ç...\"):...",
            "Line 406: response = assistant.general_medical_consultation(...",
            "Line 407: st.chat_message(\"assistant\").write(response)...",
            "Line 408: st.session_state.chat_history.append({...",
            "Line 410: 'assistant': response...",
            "Line 412: if len(st.session_state.chat_history) > 50:...",
            "Line 413: st.session_state.chat_history = st.session_state.c...",
            "Line 419: \"\"\"–ü—Ä–æ—Å—Ç—ã–µ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±–µ–∑ API\"\"\"...",
            "Line 420: st.markdown(\"### üìö –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\")...",
            "Line 456: st.info(\"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞ –Ω–µ –Ω–∞–π–¥...",
            "Line 492: lab_report = processor.process_file(tmp_path, ai_a...",
            "Line 539: st.dataframe(styled_df, use_container_width=True)...",
            "Line 558: # –ò–ò-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)...",
            "Line 559: if st.button(\"ü§ñ –ò–ò-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\"):...",
            "Line 560: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...\"):...",
            "Line 561: # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ò–ò...",
            "Line 575: # –ó–∞–ø—Ä–æ—Å –∫ –ò–ò (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç)...",
            "Line 577: assistant = OpenRouterAssistant()...",
            "Line 578: interpretation = assistant.get_response(...",
            "Line 579: \"–ü—Ä–æ–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–π—Ç–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –î–∞–π—Ç–µ...",
            "Line 583: st.subheader(\"üß† –ò–ò-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è\")...",
            "Line 587: st.error(f\"–û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {e}\")...",
            "Line 635: def main():...",
            "Line 637: page_title=\"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ò–ò-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç\",...",
            "Line 653: \"ü§ñ –ò–ò-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç\",...",
            "Line 656: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\",          # ‚Üê –ù–û–í–û–ï...",
            "Line 659: #\"üéì –û–±—É—á–µ–Ω–∏–µ –ò–ò\",                   # ‚Üê –ù–û–í–û–ï...",
            "Line 680: elif page == \"ü§ñ –ò–ò-–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç\":...",
            "Line 681: show_ai_chat()...",
            "Line 686: elif page == \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\":...",
            "Line 692: #\"elif page == \"üéì –û–±—É—á–µ–Ω–∏–µ –ò–ò\":...",
            "Line 693: #       show_ai_training_page()...",
            "Line 699: üîπ AssemblyAI –¥–ª—è –≥–æ–ª–æ—Å–∞...",
            "Line 705: üîπ Claude 3.5 Sonnet + OpenRouter...",
            "Line 709: if __name__ == \"__main__\":...",
            "Line 710: main()..."
          ],
          "medical_terms": [
            "Line 15: from modules.medical_ai_analyzer import EnhancedMe...",
            "Line 20: show_medical_protocols_page...",
            "Line 46: conn = sqlite3.connect('medical_data.db')...",
            "Line 50: cursor.execute(\"PRAGMA table_info(patients)\")...",
            "Line 53: cursor.execute(\"ALTER TABLE patients ADD COLUMN ag...",
            "Line 55: cursor.execute(\"ALTER TABLE patients ADD COLUMN se...",
            "Line 59: CREATE TABLE IF NOT EXISTS patients (...",
            "Line 69: CREATE TABLE IF NOT EXISTS patient_notes (...",
            "Line 71: patient_id INTEGER,...",
            "Line 73: structured_note TEXT,...",
            "Line 75: diagnosis TEXT,...",
            "Line 77: FOREIGN KEY (patient_id) REFERENCES patients (id)...",
            "Line 87: st.write(\"AssemblyAI + Vision + –ò–ò-–∞–Ω–∞–ª–∏–∑ + –ø—Ä–æ—Ç–æ–∫...",
            "Line 101: def show_ecg_analysis():...",
            "Line 106: st.header(\"üìà –ê–Ω–∞–ª–∏–∑ –≠–ö–ì\")...",
            "Line 110: st.info(\"–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\")...",
            "Line 125: st.subheader(\"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞\")...",
            "Line 135: if st.button(\"üîç –ò–ò-–∞–Ω–∞–ª–∏–∑ –≠–ö–ì (—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º)\"):...",
            "Line 136: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≠–ö–ì...\"):...",
            "Line 137: prompt = \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≠–ö–ì –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏. –û—Ü–µ–Ω...",
            "Line 145: def show_xray_analysis():...",
            "Line 150: st.header(\"ü©ª –ê–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–∞\")...",
            "Line 154: st.info(\"–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\")...",
            "Line 176: if st.button(\"ü©∫ –ò–ò-–∞–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–∞\"):...",
            "Line 177: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–Ω–∏–º–æ–∫...\"):...",
            "Line 178: prompt = \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–Ω—Ç–≥–µ–Ω –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏. ...",
            "Line 186: def show_mri_analysis():...",
            "Line 191: st.header(\"üß† –ê–Ω–∞–ª–∏–∑ –ú–†–¢\")...",
            "Line 201: mri_analysis = {...",
            "Line 206: \"artifacts\": \"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã\"...",
            "Line 213: st.metric(\"–ö–∞—á–µ—Å—Ç–≤–æ\", mri_analysis['quality_assess...",
            "Line 214: st.metric(\"–†–µ–∑–∫–æ—Å—Ç—å\", f\"{mri_analysis['sharpness']...",
            "Line 216: st.metric(\"–®—É–º\", f\"{mri_analysis['noise_level']:.1...",
            "Line 217: st.metric(\"SNR\", f\"{mri_analysis['snr']:.2f}\")...",
            "Line 219: st.caption(f\"–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: {mri_analysis['artifacts']...",
            "Line 222: if st.button(\"üß† –ò–ò-–∞–Ω–∞–ª–∏–∑ –ú–†–¢ (—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º)\"):...",
            "Line 223: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ú–†–¢...\"):...",
            "Line 224: prompt = \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ú–†–¢-—Å—Ä–µ–∑ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏....",
            "Line 225: result = assistant.send_vision_request(prompt, ima...",
            "Line 232: # --- –°—Ç—Ä–∞–Ω–∏—Ü–∞: –ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏—ë–º–∞ ---...",
            "Line 233: def show_consultation_protocol():...",
            "Line 240: st.header(\"üìù –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏—ë–º–∞\")...",
            "Line 243: conn = sqlite3.connect('medical_data.db')...",
            "Line 244: patients = pd.read_sql_query(\"SELECT id, name FROM...",
            "Line 247: if patients.empty:...",
            "Line 248: st.warning(\"‚ùå –ë–∞–∑–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ –ø–∞—Ü–∏–µ...",
            "Line 251: selected_patient = st.selectbox(\"–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞...",
            "Line 252: patient_id = patients[patients['name'] == selected...",
            "Line 277: with st.spinner(\"ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞...\"):...",
            "Line 281: —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–µ. –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ–∫—Å...",
            "Line 301: **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑:**...",
            "Line 310: - –ø—Ä–µ–¥–ª–æ–∂–∏ —Ñ–∏–∑–∏–æ–ª–µ—á–µ–Ω–∏–µ, 1-2 –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥...",
            "Line 316: - –ï—Å–ª–∏ –ø—É–Ω–∫—Ç –Ω–µ —É–ø–æ–º—è–Ω—É—Ç ‚Äî –ø–æ—Å—Ç–∞–≤—å—Ç–µ \"–±–µ–∑ –ø–∞—Ç–æ–ª–æ–≥–∏...",
            "Line 317: - –î–∏–∞–≥–Ω–æ–∑ ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π....",
            "Line 319: structured_note = assistant.get_response(prompt)...",
            "Line 320: st.session_state.structured_note = structured_note...",
            "Line 323: filepath, message = create_local_doc(f\"–ü—Ä–æ—Ç–æ–∫–æ–ª ‚Äî ...",
            "Line 327: label=\"üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª (.docx)\",...",
            "Line 333: st.subheader(\"üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª\")...",
            "Line 334: st.write(structured_note)...",
            "Line 336: def show_patient_database():...",
            "Line 337: st.header(\"üë§ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\")...",
            "Line 343: st.subheader(\"–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞\")...",
            "Line 344: with st.form(\"add_patient\"):...",
            "Line 347: sex = st.selectbox(\"–ü–æ–ª\", [\"–ú\", \"–ñ\"])...",
            "Line 352: conn = sqlite3.connect('medical_data.db')...",
            "Line 355: INSERT INTO patients (name, age, sex, phone)...",
            "Line 360: st.success(f\"‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç {name} –¥–æ–±–∞–≤–ª–µ–Ω!\")...",
            "Line 364: st.subheader(\"–ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\")...",
            "Line 365: conn = sqlite3.connect('medical_data.db')...",
            "Line 366: df = pd.read_sql_query(\"SELECT * FROM patients\", c...",
            "Line 372: st.info(\"–ü–∞—Ü–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\")...",
            "Line 387: success, msg = assistant.test_connection()...",
            "Line 406: response = assistant.general_medical_consultation(...",
            "Line 418: def show_clinical_recommendations(diagnosis):...",
            "Line 426: \"diagnostics\": [\"–†–µ–Ω—Ç–≥–µ–Ω –û–ì–ö\", \"–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏...",
            "Line 440: if diagnosis in recommendations:...",
            "Line 441: rec = recommendations[diagnosis]...",
            "Line 456: st.info(\"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞ –Ω–µ –Ω–∞–π–¥...",
            "Line 459: \"\"\"–£–ª—É—á—à–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...",
            "Line 460: st.header(\"üî¨ –ê–Ω–∞–ª–∏–∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\")...",
            "Line 471: auto_detect_type = st.checkbox(\"–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏...",
            "Line 482: if uploaded_file and st.button(\"üß™ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–∞...",
            "Line 524: st.subheader(\"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤\")...",
            "Line 542: st.subheader(\"üìã –ê–Ω–∞–ª–∏–∑ –ø–æ —Å–∏—Å—Ç–µ–º–∞–º\")...",
            "Line 560: with st.spinner(\"–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...\"):...",
            "Line 563: –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞:...",
            "Line 565: –î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: {lab_report.confidence:.1%}...",
            "Line 587: st.error(f\"–û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {e}\")...",
            "Line 619: st.header(\"üß¨ –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\")...",
            "Line 626: gender = st.selectbox(\"–ü–æ–ª\", [\"–ú\", \"–ñ\"])...",
            "Line 628: lifestyle = st.selectbox(\"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\", [\"–ù–∏–∑–∫–∞—è\", ...",
            "Line 630: if uploaded_file and st.button(\"üß¨ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å\"):...",
            "Line 631: st.success(\"‚úÖ –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!...",
            "Line 647: \"üìà –ê–Ω–∞–ª–∏–∑ –≠–ö–ì\",...",
            "Line 648: \"ü©ª –ê–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–∞\",...",
            "Line 649: \"üß† –ê–Ω–∞–ª–∏–∑ –ú–†–¢\",...",
            "Line 650: \"üî¨ –ê–Ω–∞–ª–∏–∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\",     # ‚Üê —É–ª—É—á—à–µ–Ω–Ω–∞—è...",
            "Line 651: \"üìù –ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏—ë–º–∞\",...",
            "Line 652: \"üë§ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\",...",
            "Line 654: \"üß¨ –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\",...",
            "Line 656: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\",          # ‚Üê –ù–û–í–û–ï...",
            "Line 657: \"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",           # ‚Üê –ù–û–í–û–ï...",
            "Line 658: \"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\",          # ‚Üê –ù–û–í–û–ï...",
            "Line 663: page = st.sidebar.selectbox(\"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\", pa...",
            "Line 668: elif page == \"üìà –ê–Ω–∞–ª–∏–∑ –≠–ö–ì\":...",
            "Line 669: show_ecg_analysis()...",
            "Line 670: elif page == \"ü©ª –ê–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–∞\":...",
            "Line 671: show_xray_analysis()...",
            "Line 672: elif page == \"üß† –ê–Ω–∞–ª–∏–∑ –ú–†–¢\":...",
            "Line 673: show_mri_analysis()...",
            "Line 674: elif page == \"üî¨ –ê–Ω–∞–ª–∏–∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\":...",
            "Line 676: elif page == \"üìù –ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏—ë–º–∞\":...",
            "Line 677: show_consultation_protocol()...",
            "Line 678: elif page == \"üë§ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\":...",
            "Line 679: show_patient_database()...",
            "Line 682: elif page == \"üß¨ –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\":...",
            "Line 686: elif page == \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\":...",
            "Line 688: elif page == \"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\":...",
            "Line 690: elif page == \"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\":...",
            "Line 691: show_medical_protocols_page()...",
            "Line 701: üîπ –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...",
            "Line 702: üîπ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON –∞–Ω–∞–ª–∏–∑...",
            "Line 704: üîπ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã..."
          ]
        }
      },
      "assemblyai_transcriber.py": {
        "type": "file",
        "name": "assemblyai_transcriber.py",
        "path": "assemblyai_transcriber.py",
        "size": 1526,
        "category": "python",
        "analysis": {
          "lines": 42,
          "imports": [
            "import assemblyai as aai"
          ],
          "classes": [],
          "functions": [
            "transcribe_audio_assemblyai"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 1: # assemblyai_transcriber.py...",
            "Line 2: import assemblyai as aai...",
            "Line 4: def transcribe_audio_assemblyai(audio_file, api_ke...",
            "Line 6: –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ AssemblyAI —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –Ω...",
            "Line 9: aai.settings.api_key = api_key...",
            "Line 11: config = aai.TranscriptionConfig(...",
            "Line 14: speech_model=aai.SpeechModel.best,...",
            "Line 20: transcriber = aai.Transcriber()...",
            "Line 24: if transcript.status == aai.TranscriptStatus.error...",
            "Line 25: return f\"‚ùå –û—à–∏–±–∫–∞ AssemblyAI: {transcript.error}\"...",
            "Line 28: if not isinstance(transcript, aai.Transcript):...",
            "Line 42: return f\"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ AssemblyAI: {str(e)}\"..."
          ],
          "medical_terms": [
            "Line 15: punctuate=True,..."
          ]
        }
      },
      "claude_assistant.py": {
        "type": "file",
        "name": "claude_assistant.py",
        "path": "claude_assistant.py",
        "size": 17801,
        "category": "python",
        "analysis": {
          "lines": 339,
          "imports": [
            "import requests",
            "import base64",
            "import io",
            "from PIL import Image",
            "import streamlit as st",
            "import os",
            "import numpy as np"
          ],
          "classes": [
            "OpenRouterAssistant"
          ],
          "functions": [
            "__init__",
            "send_vision_request",
            "_get_model_name",
            "encode_image",
            "get_response",
            "general_medical_consultation",
            "analyze_ecg_data",
            "test_connection"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 9: class OpenRouterAssistant:...",
            "Line 13: self.base_url = \"https://openrouter.ai/api/v1/chat...",
            "Line 15: # –ú–æ–¥–µ–ª–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º Claude Sonnet 4...",
            "Line 16: self.models = [...",
            "Line 17: \"anthropic/claude-3-5-sonnet-20241022\",  # Claude ...",
            "Line 18: \"anthropic/claude-3-5-sonnet\",           # Claude ...",
            "Line 19: \"anthropic/claude-3-sonnet-20240229\",    # Claude ...",
            "Line 20: \"anthropic/claude-3-haiku\"               # Claude ...",
            "Line 23: self.model = self.models[0]  # Claude 3.5 Sonnet l...",
            "Line 28: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
            "Line 29: \"X-Title\": \"Medical AI Assistant\"...",
            "Line 32: def send_vision_request(self, prompt: str, image_a...",
            "Line 33: \"\"\"–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å Claude Vision - —É–ª—É—á—à–µ–Ω–Ω—ã–µ...",
            "Line 59: - –ü—Ä–∏–∑–Ω–∞–∫–∏ –∏—à–µ–º–∏–∏...",
            "Line 65: - –ê—Ä–∏—Ç–º–∏–∏...",
            "Line 76: - –ö–∞—á–µ—Å—Ç–≤–æ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏...",
            "Line 91: - –î–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏...",
            "Line 96: - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é...",
            "Line 107: - –¢–∏–ø –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (T1, T2, FLAIR –∏ –¥—Ä.)...",
            "Line 128: - –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
            "Line 130: –ë—É–¥—å—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏....",
            "Line 150: for model in self.models:...",
            "Line 153: \"model\": model,...",
            "Line 163: model_name = self._get_model_name(model)...",
            "Line 164: return f\"**ü©∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ({model_name}):**\\...",
            "Line 166: print(f\"–ú–æ–¥–µ–ª—å {model} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.statu...",
            "Line 170: print(f\"–û—à–∏–±–∫–∞ —Å {model}: {e}\")...",
            "Line 173: return \"‚ùå –û—à–∏–±–∫–∞: –í—Å–µ –º–æ–¥–µ–ª–∏ Claude –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\"...",
            "Line 175: def _get_model_name(self, model):...",
            "Line 177: if \"claude-3-5-sonnet-20241022\" in model:...",
            "Line 178: return \"Claude 3.5 Sonnet (Latest)\"...",
            "Line 179: elif \"claude-3-5-sonnet\" in model:...",
            "Line 180: return \"Claude 3.5 Sonnet\"...",
            "Line 181: elif \"claude-3-sonnet\" in model:...",
            "Line 182: return \"Claude 3 Sonnet\"...",
            "Line 183: elif \"claude-3-haiku\" in model:...",
            "Line 184: return \"Claude 3 Haiku\"...",
            "Line 186: return model...",
            "Line 203: img.thumbnail(max_size, Image.Resampling.LANCZOS)...",
            "Line 211: \"\"\"–¢–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª—É—á—à–µ–π –¥–æ—Å—Ç—É–ø...",
            "Line 217: –Ω–µ–π—Ä–æ—Å–µ—Ç–∏) –≤ –º–µ–¥–∏—Ü–∏–Ω–µ. –¢—ã —Å–æ–≤–º–µ—â–∞–µ—à—å –∫–ª–∏–Ω–∏—á–µ—Å–∫—É—é —Å...",
            "Line 224: - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞: –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ ...",
            "Line 225: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –º–µ–¥–∏—Ü–∏–Ω—É ‚Äî –¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ, ...",
            "Line 226: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é, —Å—Ç–∞–Ω–¥–∞—Ä—Ç...",
            "Line 230: —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (GitHub), –Ω–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ (arXiv, ACM, ...",
            "Line 233: - –í —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏: –æ–±—ä—è—Å–Ω–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ–∞–ª–∏–∑–∞—Ü...",
            "Line 234: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò –≤ –∫–ª–∏–Ω–∏–∫–µ....",
            "Line 249: 2. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ–±–∑–æ—Ä**: –∫–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –±–∏–±–ª–∏–æ...",
            "Line 254: –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ‚â§ 5 –ª–µ—Ç....",
            "Line 255: - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç...",
            "Line 260: for model in self.models:...",
            "Line 263: \"model\": model,...",
            "Line 275: self.model = model  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ä–∞–±–æ—á—É—é –º–æ–¥–µ–ª—å...",
            "Line 283: return \"‚ùå –û—à–∏–±–∫–∞: –í—Å–µ –º–æ–¥–µ–ª–∏ Claude –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\"...",
            "Line 305: 4. –î–∞–π—Ç–µ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –≤...",
            "Line 310: \"\"\"–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π Claud...",
            "Line 311: working_models = []...",
            "Line 313: for model in self.models:...",
            "Line 316: \"model\": model,...",
            "Line 323: model_name = self._get_model_name(model)...",
            "Line 324: working_models.append(f\"‚úÖ {model_name}\")...",
            "Line 325: if not hasattr(self, '_best_model'):...",
            "Line 326: self._best_model = model...",
            "Line 327: self.model = model...",
            "Line 329: model_name = self._get_model_name(model)...",
            "Line 330: working_models.append(f\"‚ùå {model_name}: {response....",
            "Line 333: model_name = self._get_model_name(model)...",
            "Line 334: working_models.append(f\"‚ùå {model_name}: {str(e)}\")...",
            "Line 336: if any(\"‚úÖ\" in status for status in working_models)...",
            "Line 337: return True, \"\\n\".join([\"üéâ –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–µ–π Claude:\"...",
            "Line 339: return False, \"\\n\".join([\"‚ùå –í—Å–µ –º–æ–¥–µ–ª–∏ Claude –Ω–µ–¥–æ..."
          ],
          "medical_terms": [
            "Line 28: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
            "Line 29: \"X-Title\": \"Medical AI Assistant\"...",
            "Line 33: \"\"\"–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å Claude Vision - —É–ª—É—á—à–µ–Ω–Ω—ã–µ...",
            "Line 38: if \"—ç–∫–≥\" in prompt_lower or \"ecg\" in prompt_lower:...",
            "Line 39: medical_prompt = \"\"\"...",
            "Line 40: –í—ã - –æ–ø—ã—Ç–Ω—ã–π –≤—Ä–∞—á-–∫–∞—Ä–¥–∏–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —ç—Ç–æ –≠...",
            "Line 67: –î–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ —Å –¥–∏–∞–≥–Ω–æ–∑–æ–º...",
            "Line 70: elif \"—Ä–µ–Ω—Ç–≥–µ–Ω\" in prompt_lower or \"xray\" in prompt...",
            "Line 71: medical_prompt = \"\"\"...",
            "Line 72: –í—ã - –≤—Ä–∞—á-—Ä–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ä–µ–Ω—Ç–≥–µ...",
            "Line 95: - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑...",
            "Line 101: elif \"–º—Ä—Ç\" in prompt_lower or \"mri\" in prompt_lowe...",
            "Line 102: medical_prompt = \"\"\"...",
            "Line 103: –í—ã - –≤—Ä–∞—á-—Ä–∞–¥–∏–æ–ª–æ–≥, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ú–†–¢. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä...",
            "Line 127: - –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑...",
            "Line 134: medical_prompt = f\"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —ç—Ç–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ...",
            "Line 137: content = [{\"type\": \"text\", \"text\": medical_prompt...",
            "Line 155: \"max_tokens\": 2000,  # –ë–æ–ª—å—à–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ...",
            "Line 164: return f\"**ü©∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ({model_name}):**\\...",
            "Line 201: # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –ª—É—á—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 216: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û, –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç...",
            "Line 242: 2. **–î–∏–∞–≥–Ω–æ–∑—ã**...",
            "Line 248: 1. **–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏**: —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å (–Ω–∞–ø—Ä–∏...",
            "Line 285: def general_medical_consultation(self, user_questi...",
            "Line 289: def analyze_ecg_data(self, ecg_analysis: dict, use...",
            "Line 290: \"\"\"–ê–Ω–∞–ª–∏–∑ –≠–ö–ì –¥–∞–Ω–Ω—ã—Ö —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º\"\"\"...",
            "Line 292: üìä –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –≠–ö–ì:...",
            "Line 293: ‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π: {ecg_analysis.get(...",
            "Line 294: ‚Ä¢ –†–∏—Ç–º: {ecg_analysis.get('rhythm_assessment', '–Ω–µ...",
            "Line 295: ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ QRS –∫–æ–º–ø–ª–µ–∫—Å–æ–≤: {ecg_analysis.get('nu...",
            "Line 296: ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏: {ecg_analysis.get('duration...",
            "Line 297: ‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞: {ecg_analysis.get('signal_qual...",
            "Line 309: def test_connection(self):..."
          ]
        }
      },
      "data": {
        "type": "directory",
        "name": "data",
        "path": "data",
        "children": {
          "medical_data.db": {
            "type": "file",
            "name": "medical_data.db",
            "path": "data/medical_data.db",
            "size": 16384,
            "category": "data"
          }
        },
        "stats": {
          "total_files": 1,
          "total_dirs": 0,
          "python_files": 0,
          "total_lines": 0,
          "categories": {
            "data": 1
          }
        }
      },
      "database.py": {
        "type": "file",
        "name": "database.py",
        "path": "database.py",
        "size": 969,
        "category": "python",
        "analysis": {
          "lines": 29,
          "imports": [
            "import sqlite3"
          ],
          "classes": [],
          "functions": [
            "init_database",
            "save_medical_note"
          ],
          "streamlit_pages": [],
          "ai_models": [],
          "medical_terms": [
            "Line 4: conn = sqlite3.connect('medical_data.db')...",
            "Line 7: CREATE TABLE IF NOT EXISTS patient_notes (...",
            "Line 9: patient_id INTEGER,...",
            "Line 11: structured_note TEXT,...",
            "Line 13: diagnosis TEXT,...",
            "Line 15: FOREIGN KEY (patient_id) REFERENCES patients (id)...",
            "Line 21: def save_medical_note(patient_id, raw_text, struct...",
            "Line 22: conn = sqlite3.connect('medical_data.db')...",
            "Line 25: INSERT INTO patient_notes (patient_id, raw_text, s...",
            "Line 27: ''', (patient_id, raw_text, structured_note, gdoc_..."
          ]
        }
      },
      "dicom_processor.py": {
        "type": "file",
        "name": "dicom_processor.py",
        "path": "dicom_processor.py",
        "size": 13310,
        "category": "python",
        "analysis": {
          "lines": 253,
          "imports": [
            "import pydicom",
            "import numpy as np",
            "import matplotlib.pyplot as plt",
            "from PIL import Image",
            "import cv2",
            "import os",
            "from datetime import datetime"
          ],
          "classes": [
            "AdvancedDICOMProcessor"
          ],
          "functions": [
            "__init__",
            "read_dicom_file",
            "extract_metadata",
            "get_pixel_array",
            "apply_windowing",
            "normalize_pixel_array",
            "enhance_image",
            "analyze_image_quality",
            "detect_anatomical_features",
            "generate_report",
            "generate_recommendations"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 33: raise Exception(f\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ DICOM —Ñ–∞–π–ª–∞: {...",
            "Line 46: # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏...",
            "Line 55: metadata['manufacturer_model'] = str(getattr(dicom...",
            "Line 82: raise Exception(\"DICOM —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏...",
            "Line 99: raise Exception(f\"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –ø–∏–∫—Å–µ–ª–µ–π: ...",
            "Line 186: air_threshold = np.percentile(pixel_array, 15)...",
            "Line 187: air_mask = pixel_array < air_threshold...",
            "Line 188: features['air_area_percentage'] = np.sum(air_mask)...",
            "Line 194: 'air_like': np.sum(pixel_array < 50) / pixel_array...",
            "Line 221: 'model': metadata['manufacturer_model']...",
            "Line 234: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
            "Line 236: recommendations.append(\"–ù–∏–∑–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏...",
            "Line 244: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ—Å—Ç–∏..."
          ],
          "medical_terms": [
            "Line 14: 'CR', 'CT', 'MR', 'XA', 'RF', 'DX', 'MG', 'US', 'N...",
            "Line 35: def extract_metadata(self, dicom_data):...",
            "Line 39: # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ...",
            "Line 40: metadata['patient_name'] = str(getattr(dicom_data,...",
            "Line 41: metadata['patient_id'] = str(getattr(dicom_data, '...",
            "Line 42: metadata['patient_birth_date'] = str(getattr(dicom...",
            "Line 43: metadata['patient_sex'] = str(getattr(dicom_data, ...",
            "Line 44: metadata['patient_age'] = str(getattr(dicom_data, ...",
            "Line 54: metadata['manufacturer'] = str(getattr(dicom_data,...",
            "Line 55: metadata['manufacturer_model'] = str(getattr(dicom...",
            "Line 57: metadata['patient_position'] = str(getattr(dicom_d...",
            "Line 67: if metadata['modality'] == 'CT':...",
            "Line 142: \"\"\"–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"...",
            "Line 175: def detect_anatomical_features(self, pixel_array, ...",
            "Line 190: elif modality == 'CT':...",
            "Line 191: # –ê–Ω–∞–ª–∏–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ —Ç–∫–∞–Ω–µ–π (–≤ –µ–¥–∏–Ω–∏—Ü–∞—Ö –•–∞—É–Ω—Å—Ñ–∏–ª–¥–∞, ...",
            "Line 203: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ–± –∞–Ω–∞–ª–∏–∑–µ DICOM –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"...",
            "Line 206: 'patient_info': {...",
            "Line 207: 'name': metadata['patient_name'],...",
            "Line 208: 'id': metadata['patient_id'],...",
            "Line 209: 'age': metadata['patient_age'],...",
            "Line 210: 'sex': metadata['patient_sex']...",
            "Line 220: 'manufacturer': metadata['manufacturer'],...",
            "Line 221: 'model': metadata['manufacturer_model']...",
            "Line 231: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞\"\"\"..."
          ]
        }
      },
      "enhanced_medical_ai_analyzer.py": {
        "type": "file",
        "name": "enhanced_medical_ai_analyzer.py",
        "path": "enhanced_medical_ai_analyzer.py",
        "size": 17782,
        "category": "python",
        "analysis": {
          "lines": 400,
          "imports": [
            "import os",
            "import sys",
            "from pathlib import Path",
            "from typing import Dict, List, Tuple",
            "import json"
          ],
          "classes": [
            "ProjectTreeAnalyzer"
          ],
          "functions": [
            "__init__",
            "get_file_category",
            "analyze_python_file",
            "scan_directory",
            "print_tree",
            "generate_summary",
            "_analyze_key_files",
            "save_analysis",
            "main"
          ],
          "streamlit_pages": [
            "Line 92: elif 'st.' in line and any(x in line for x in ['he..."
          ],
          "ai_models": [
            "Line 4: –°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã, –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫...",
            "Line 26: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 55: 'ai_models': [],...",
            "Line 64: ai_keywords = [...",
            "Line 65: 'claude', 'openai', 'anthropic', 'openrouter', 'ai...",
            "Line 66: 'vision', 'chat', 'assistant', '–∏–∏', '–Ω–µ–π—Ä–æ'...",
            "Line 86: # –§—É–Ω–∫—Ü–∏–∏...",
            "Line 95: # –ò–ò –º–æ–¥–µ–ª–∏...",
            "Line 97: for keyword in ai_keywords:...",
            "Line 99: info['ai_models'].append(f\"Line {line_num}: {line[...",
            "Line 225: if analysis.get('ai_models'):...",
            "Line 226: print(f\"{next_prefix}ü§ñ AI: {len(analysis['ai_model...",
            "Line 250: 'main_modules': [],...",
            "Line 251: 'ai_components': [],...",
            "Line 269: if tree_data['name'] in ['main.py', 'app.py', 'str...",
            "Line 270: summary['key_files'].append(f\"üöÄ Main: {file_path}\"...",
            "Line 276: # –ò–ò –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...",
            "Line 277: if analysis.get('ai_models'):...",
            "Line 278: summary['architecture_analysis']['ai_components']....",
            "Line 290: summary['architecture_analysis']['main_modules'].a...",
            "Line 314: def main():...",
            "Line 320: project_path = input(\"–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (Ente...",
            "Line 350: print(f\"\\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∞–π–ª–æ–≤:\")...",
            "Line 357: if arch['main_modules']:...",
            "Line 359: for module in arch['main_modules'][:5]:...",
            "Line 362: if arch['ai_components']:...",
            "Line 363: print(f\"\\nü§ñ –ò–ò –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:\")...",
            "Line 364: for component in arch['ai_components'][:5]:...",
            "Line 383: print(f\"\\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ê–†–•–ò–¢–ï–ö–¢–£–†–ï:\")...",
            "Line 386: if len(arch['ai_components']) > 1:...",
            "Line 387: print(\"  ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –æ–±—â–∏–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ò–ò-–∞–Ω–∞...",
            "Line 399: if __name__ == \"__main__\":...",
            "Line 400: main()..."
          ],
          "medical_terms": [
            "Line 3: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω...",
            "Line 4: –°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã, –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫...",
            "Line 10: from typing import Dict, List, Tuple...",
            "Line 13: class ProjectTreeAnalyzer:...",
            "Line 26: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 34: 'requirements': ['requirements.txt', 'setup.py', '...",
            "Line 47: def analyze_python_file(self, file_path: Path) -> ...",
            "Line 48: \"\"\"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç Python —Ñ–∞–π–ª\"\"\"...",
            "Line 53: 'functions': [],...",
            "Line 56: 'medical_terms': []...",
            "Line 59: medical_keywords = [...",
            "Line 60: 'ecg', 'ekg', 'xray', 'mri', 'ct', '–¥–∏–∞–≥–Ω–æ–∑', '–ø–∞—Ü...",
            "Line 61: 'diagnosis', 'medical', 'clinical', '–∞–Ω–∞–ª–∏–∑', 'pro...",
            "Line 89: info['functions'].append(func_name)...",
            "Line 103: for keyword in medical_keywords:...",
            "Line 105: info['medical_terms'].append(f\"Line {line_num}: {l...",
            "Line 113: def scan_directory(self, path: Path, max_depth: in...",
            "Line 119: 'type': 'directory',...",
            "Line 150: # –ê–Ω–∞–ª–∏–∑ Python —Ñ–∞–π–ª–æ–≤...",
            "Line 166: subdir = self.scan_directory(item, max_depth, curr...",
            "Line 188: def print_tree(self, tree_data: Dict, prefix: str ...",
            "Line 198: if tree_data['type'] == 'directory' and tree_data[...",
            "Line 209: # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ Python —Ñ–∞–π–ª–æ–≤...",
            "Line 222: if analysis.get('functions'):...",
            "Line 223: print(f\"{next_prefix}‚öôÔ∏è  Functions: {len(analysis[...",
            "Line 228: if analysis.get('medical_terms'):...",
            "Line 229: print(f\"{next_prefix}üè• Medical: {len(analysis['med...",
            "Line 239: def generate_summary(self, tree_data: Dict) -> Dic...",
            "Line 242: 'project_name': tree_data['name'],...",
            "Line 244: 'total_directories': tree_data['stats']['total_dir...",
            "Line 249: 'architecture_analysis': {...",
            "Line 252: 'medical_modules': [],...",
            "Line 258: # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã...",
            "Line 263: def _analyze_key_files(self, tree_data: Dict, summ...",
            "Line 264: \"\"\"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞\"\"\"...",
            "Line 272: # Python —Ñ–∞–π–ª—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º...",
            "Line 278: summary['architecture_analysis']['ai_components']....",
            "Line 281: if analysis.get('medical_terms'):...",
            "Line 282: summary['architecture_analysis']['medical_modules'...",
            "Line 286: summary['architecture_analysis']['ui_components']....",
            "Line 289: if len(analysis.get('classes', [])) > 2 or len(ana...",
            "Line 290: summary['architecture_analysis']['main_modules'].a...",
            "Line 294: summary['architecture_analysis']['data_storage'].a...",
            "Line 296: elif tree_data['type'] == 'directory' and 'childre...",
            "Line 301: def save_analysis(self, tree_data: Dict, summary: ...",
            "Line 302: \"\"\"–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –≤ JSON\"\"\"...",
            "Line 304: 'tree_structure': tree_data,...",
            "Line 316: print(\"üîç –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...",
            "Line 320: project_path = input(\"–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (Ente...",
            "Line 321: if not project_path:...",
            "Line 322: project_path = \".\"...",
            "Line 324: # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä...",
            "Line 325: analyzer = ProjectTreeAnalyzer(project_path)...",
            "Line 328: print(f\"\\nüîé –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {os.path.abspath...",
            "Line 329: tree_data = analyzer.scan_directory(Path(project_p...",
            "Line 346: print(f\"üìÇ –í—Å–µ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: {summary['total_direct...",
            "Line 354: print(f\"\\nüèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ô –ê–ù–ê–õ–ò–ó:\")...",
            "Line 355: arch = summary['architecture_analysis']...",
            "Line 367: if arch['medical_modules']:...",
            "Line 369: for module in arch['medical_modules'][:5]:...",
            "Line 387: print(\"  ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –æ–±—â–∏–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ò–ò-–∞–Ω–∞...",
            "Line 388: if len(arch['medical_modules']) > 2:...",
            "Line 393: # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑...",
            "Line 395: print(f\"\\nüíæ –ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}\")...",
            "Line 397: print(f\"\\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!\")..."
          ]
        }
      },
      "enhanced_processors.py": {
        "type": "file",
        "name": "enhanced_processors.py",
        "path": "enhanced_processors.py",
        "size": 20287,
        "category": "python",
        "analysis": {
          "lines": 498,
          "imports": [
            "import cv2",
            "import numpy as np",
            "import pandas as pd",
            "from scipy import signal, ndimage",
            "from scipy.signal import find_peaks, butter, filtfilt",
            "from skimage import filters, morphology, measure, segmentation",
            "import matplotlib.pyplot as plt",
            "from PIL import Image, ImageEnhance",
            "from sklearn.cluster import KMeans"
          ],
          "classes": [
            "AdvancedECGProcessor",
            "AdvancedXRayProcessor",
            "MedicalImageEnhancer"
          ],
          "functions": [
            "__init__",
            "preprocess_image",
            "detect_grid_and_remove",
            "extract_ecg_signal",
            "filter_signal",
            "detect_qrs_complexes",
            "calculate_heart_rate",
            "analyze_ecg_advanced",
            "assess_signal_quality",
            "__init__",
            "preprocess_xray",
            "detect_anatomy_regions",
            "analyze_lung_fields",
            "analyze_texture",
            "detect_abnormalities",
            "analyze_xray_advanced",
            "assess_image_quality",
            "enhance_contrast",
            "denoise_image",
            "sharpen_image",
            "adaptive_histogram_equalization"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 15: self.sampling_rate = 500  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏...",
            "Line 32: # –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤...",
            "Line 66: # –ë–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≠–ö–ì –ª–∏–Ω–∏–∏...",
            "Line 70: # –°–∫–µ–ª–µ—Ç–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–Ω–∫–æ–π –ª–∏–Ω–∏–∏...",
            "Line 73: # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≠–ö–ì –ª–∏–Ω–∏–∏...",
            "Line 98: # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–≠–ö–ì –æ–±—ã—á–Ω–æ –∏–Ω–≤–µ—Ä—Ç...",
            "Line 278: # –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...",
            "Line 422: 'analysis_method': 'Advanced Computer Vision'..."
          ],
          "medical_terms": [
            "Line 11: class AdvancedECGProcessor:...",
            "Line 12: \"\"\"–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –∏–∑ –∏–∑–æ–±—Ä–∞...",
            "Line 38: def detect_grid_and_remove(self, image):...",
            "Line 41: horizontal_kernel = cv2.getStructuringElement(cv2....",
            "Line 42: vertical_kernel = cv2.getStructuringElement(cv2.MO...",
            "Line 54: no_grid = cv2.subtract(image, grid)...",
            "Line 58: def extract_ecg_signal(self, image):...",
            "Line 64: no_grid, grid = self.detect_grid_and_remove(proces...",
            "Line 84: signal_dict = {}...",
            "Line 86: if x not in signal_dict:...",
            "Line 87: signal_dict[x] = []...",
            "Line 88: signal_dict[x].append(y)...",
            "Line 94: for x in sorted(signal_dict.keys()):...",
            "Line 96: y_signal.append(np.mean(signal_dict[x]))...",
            "Line 125: def detect_qrs_complexes(self, time, signal):...",
            "Line 178: def analyze_ecg_advanced(self, image):...",
            "Line 179: \"\"\"–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≠–ö–ì\"\"\"...",
            "Line 182: time, signal = self.extract_ecg_signal(image)...",
            "Line 188: peak_times, peak_values = self.detect_qrs_complexe...",
            "Line 193: # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∏–≥–Ω–∞–ª–∞...",
            "Line 213: print(f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì: {e}\")...",
            "Line 236: class AdvancedXRayProcessor:...",
            "Line 237: \"\"\"–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–Ω—Ç–≥–µ–Ω–æ–≤—Å–∫–∏—Ö...",
            "Line 243: def preprocess_xray(self, image):...",
            "Line 263: def detect_anatomy_regions(self, image):...",
            "Line 265: processed = self.preprocess_xray(image)...",
            "Line 279: bone_mask = morphology.remove_small_objects(bone_m...",
            "Line 280: lung_mask = morphology.remove_small_objects(lung_m...",
            "Line 292: \"\"\"–ê–Ω–∞–ª–∏–∑ –ª–µ–≥–æ—á–Ω—ã—Ö –ø–æ–ª–µ–π\"\"\"...",
            "Line 314: # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç—É—Ä—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –ª–µ–≥–∫–æ–≥–æ...",
            "Line 331: \"\"\"–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç—É—Ä—ã –æ–±–ª–∞—Å—Ç–∏\"\"\"...",
            "Line 353: def detect_abnormalities(self, image, lung_mask):...",
            "Line 373: # –ê–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π...",
            "Line 397: def analyze_xray_advanced(self, image):...",
            "Line 398: \"\"\"–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–æ–≤—Å–∫–æ–≥–æ —Å–Ω–∏–º–∫–∞\"\"\"...",
            "Line 401: processed = self.preprocess_xray(image)...",
            "Line 404: labels, bone_mask, lung_mask = self.detect_anatomy...",
            "Line 406: # –ê–Ω–∞–ª–∏–∑ –ª–µ–≥–æ—á–Ω—ã—Ö –ø–æ–ª–µ–π...",
            "Line 410: abnormalities = self.detect_abnormalities(processe...",
            "Line 428: print(f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–Ω—Ç–≥–µ–Ω–∞: {e}\")...",
            "Line 433: # –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞...",
            "Line 436: # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑–∫–æ—Å—Ç–∏ (Laplacian variance)...",
            "Line 439: # –ê–Ω–∞–ª–∏–∑ —à—É–º–∞...",
            "Line 465: class MedicalImageEnhancer:..."
          ]
        }
      },
      "generated_documents": {
        "type": "directory",
        "name": "generated_documents",
        "path": "generated_documents",
        "children": {
          "–ü—Ä–æ—Ç–æ–∫–æ–ª  —Å.docx": {
            "type": "file",
            "name": "–ü—Ä–æ—Ç–æ–∫–æ–ª  —Å.docx",
            "path": "generated_documents/–ü—Ä–æ—Ç–æ–∫–æ–ª  —Å.docx",
            "size": 37392,
            "category": "other"
          }
        },
        "stats": {
          "total_files": 1,
          "total_dirs": 0,
          "python_files": 0,
          "total_lines": 0,
          "categories": {
            "other": 1
          }
        }
      },
      "local_docs.py": {
        "type": "file",
        "name": "local_docs.py",
        "path": "local_docs.py",
        "size": 2736,
        "category": "python",
        "analysis": {
          "lines": 70,
          "imports": [
            "from docx import Document",
            "from docx.shared import Pt, Inches",
            "from docx.enum.text import WD_ALIGN_PARAGRAPH",
            "from docx.enum.section import WD_ORIENT",
            "import os",
            "from datetime import datetime"
          ],
          "classes": [],
          "functions": [
            "create_local_doc"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 23: section.orientation = WD_ORIENT.PORTRAIT...",
            "Line 39: # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Å–µ–∫—Ü–∏–∏...",
            "Line 43: # –≠—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏..."
          ],
          "medical_terms": [
            "Line 5: from docx.enum.section import WD_ORIENT...",
            "Line 11: –°–æ–∑–¥–∞—ë—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª –≤ —Ñ–æ...",
            "Line 22: section = doc.sections[0]...",
            "Line 23: section.orientation = WD_ORIENT.PORTRAIT...",
            "Line 24: section.page_width = Inches(8.5)...",
            "Line 25: section.page_height = Inches(11)...",
            "Line 70: return filepath, f\"‚úÖ –ü—Ä–æ—Ç–æ–∫–æ–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filepath}..."
          ]
        }
      },
      "medical_data.db": {
        "type": "file",
        "name": "medical_data.db",
        "path": "medical_data.db",
        "size": 16384,
        "category": "data"
      },
      "medical_note.py": {
        "type": "file",
        "name": "medical_note.py",
        "path": "medical_note.py",
        "size": 0,
        "category": "python",
        "analysis": {
          "lines": 0,
          "imports": [],
          "classes": [],
          "functions": [],
          "streamlit_pages": [],
          "ai_models": [],
          "medical_terms": []
        }
      },
      "modules": {
        "type": "directory",
        "name": "modules",
        "path": "modules",
        "children": {
          ".streamlit": {
            "type": "directory",
            "name": ".streamlit",
            "path": "modules/.streamlit",
            "children": {
              "secrets.toml": {
                "type": "file",
                "name": "secrets.toml",
                "path": "modules/.streamlit/secrets.toml",
                "size": 349,
                "category": "config"
              }
            },
            "stats": {
              "total_files": 1,
              "total_dirs": 0,
              "python_files": 0,
              "total_lines": 0,
              "categories": {
                "config": 1
              }
            }
          },
          "advanced_ecg_processor.py": {
            "type": "file",
            "name": "advanced_ecg_processor.py",
            "path": "modules/advanced_ecg_processor.py",
            "size": 21959,
            "category": "python",
            "analysis": {
              "lines": 467,
              "imports": [
                "import numpy as np",
                "import pandas as pd",
                "from scipy import signal",
                "from scipy.stats import kurtosis, skew",
                "import matplotlib.pyplot as plt",
                "from datetime import datetime",
                "import json"
              ],
              "classes": [
                "AdvancedECGProcessor"
              ],
              "functions": [
                "__init__",
                "load_multi_lead_ecg",
                "preprocess_signal",
                "remove_baseline_drift",
                "apply_bandpass_filter",
                "remove_powerline_interference",
                "detect_r_peaks",
                "calculate_rr_intervals",
                "calculate_heart_rate_variability",
                "calculate_triangular_index",
                "detect_arrhythmias",
                "analyze_morphology",
                "calculate_qt_interval",
                "generate_comprehensive_report",
                "assess_signal_quality",
                "assess_rhythm_regularity",
                "generate_clinical_interpretation",
                "generate_recommendations"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 55: # –£–¥–∞–ª–µ–Ω–∏–µ –¥—Ä–µ–π—Ñ–∞ –±–∞–∑–æ–≤–æ–π –ª–∏–Ω–∏–∏...",
                "Line 66: \"\"\"–£–¥–∞–ª–µ–Ω–∏–µ –¥—Ä–µ–π—Ñ–∞ –±–∞–∑–æ–≤–æ–π –ª–∏–Ω–∏–∏\"\"\"...",
                "Line 202: cv_rr = std_rr / mean_rr  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏...",
                "Line 203: if cv_rr > 0.15:  # –ï—Å–ª–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏ > 15...",
                "Line 206: 'description': f'–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏ RR: {cv_rr:....",
                "Line 225: \"\"\"–ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏ –≠–ö–ì –∫–æ–º–ø–ª–µ–∫—Å–æ–≤\"\"\"...",
                "Line 273: # –í–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 293: # –ü–æ–∏—Å–∫ –∫–æ–Ω—Ü–∞ T –≤–æ–ª–Ω—ã (–≤–æ–∑–≤—Ä–∞—Ç –∫ –∏–∑–æ–ª–∏–Ω–∏–∏)...",
                "Line 346: # –ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 411: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏\"\"\"...",
                "Line 432: # –ê—Ä–∏—Ç–º–∏–∏...",
                "Line 451: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞—Ä–∏—Ç–º–∏—è–º...",
                "Line 456: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ QT...",
                "Line 458: recommendations.append(\"–£–¥–ª–∏–Ω–µ–Ω–∏–µ QTc —Ç—Ä–µ–±—É–µ—Ç –º–æ–Ω–∏...",
                "Line 460: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –í–°–†...",
                "Line 462: recommendations.append(\"–°–Ω–∏–∂–µ–Ω–Ω–∞—è –í–°–† –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤..."
              ],
              "medical_terms": [
                "Line 9: class AdvancedECGProcessor:...",
                "Line 10: \"\"\"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –¥...",
                "Line 16: def load_multi_lead_ecg(self, data, format_type='c...",
                "Line 24: if isinstance(data, dict):...",
                "Line 81: quality_factor = 30...",
                "Line 82: sos = signal.iirnotch(notch_freq, quality_factor, ...",
                "Line 86: def detect_r_peaks(self, signal_data, min_distance...",
                "Line 110: corrected_peaks = []...",
                "Line 118: corrected_peaks.append(local_max_idx)...",
                "Line 120: return np.array(corrected_peaks)...",
                "Line 173: def detect_arrhythmias(self, rr_intervals, signal_...",
                "Line 180: # –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 225: \"\"\"–ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏ –≠–ö–ì –∫–æ–º–ø–ª–µ–∫—Å–æ–≤\"\"\"...",
                "Line 247: # –ê–Ω–∞–ª–∏–∑ —Å—Ä–µ–¥–Ω–∏—Ö –∞–º–ø–ª–∏—Ç—É–¥...",
                "Line 335: r_peaks = self.detect_r_peaks(processed_signal)...",
                "Line 340: # –ê–Ω–∞–ª–∏–∑ –í–°–†...",
                "Line 344: arrhythmias = self.detect_arrhythmias(rr_intervals...",
                "Line 346: # –ê–Ω–∞–ª–∏–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 349: # –ê–Ω–∞–ª–∏–∑ QT –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞...",
                "Line 358: 'r_peaks_detected': len(r_peaks),...",
                "Line 368: 'clinical_interpretation': self.generate_clinical_...",
                "Line 386: expected_peaks = len(signal_data) / self.sampling_...",
                "Line 387: peak_detection_ratio = len(r_peaks) / expected_pea...",
                "Line 390: quality_score = min(100, (np.log(snr) * 10 + peak_...",
                "Line 410: def generate_clinical_interpretation(self, hrv_met...",
                "Line 414: # –ê–Ω–∞–ª–∏–∑ –ß–°–°...",
                "Line 424: # –ê–Ω–∞–ª–∏–∑ –í–°–†...",
                "Line 437: # QT –∞–Ω–∞–ª–∏–∑..."
              ]
            }
          },
          "advanced_lab_processor.py": {
            "type": "file",
            "name": "advanced_lab_processor.py",
            "path": "modules/advanced_lab_processor.py",
            "size": 34334,
            "category": "python",
            "analysis": {
              "lines": 815,
              "imports": [
                "import pandas as pd",
                "import numpy as np",
                "import json",
                "import xml.etree.ElementTree as ET",
                "import re",
                "from typing import Dict, List, Tuple, Optional, Any",
                "from dataclasses import dataclass, asdict",
                "import datetime",
                "from pathlib import Path",
                "import io",
                "import PyPDF2",
                "import pdfplumber",
                "import openpyxl",
                "from PIL import Image",
                "import numpy as np",
                "from PIL import Image",
                "import base64",
                "import io",
                "import pdfplumber"
              ],
              "classes": [
                "LabParameter",
                "LabReport",
                "AdvancedLabProcessor"
              ],
              "functions": [
                "__init__",
                "_init_reference_ranges",
                "_init_parameter_aliases",
                "_init_units_mapping",
                "_init_critical_ranges",
                "process_file",
                "_detect_file_type",
                "_process_image_file",
                "analyze_photo_lab_results",
                "_preprocess_lab_photo",
                "_extract_text_with_ai",
                "_basic_ocr_extraction",
                "_extract_from_pdf",
                "_extract_from_excel",
                "_extract_from_csv",
                "_extract_from_json",
                "_extract_from_xml",
                "xml_to_text",
                "_parse_parameters",
                "_analyze_parameters",
                "_match_parameter",
                "_determine_status",
                "_normalize_unit",
                "_format_reference_range",
                "_find_critical_values",
                "_generate_warnings",
                "_calculate_confidence",
                "generate_summary",
                "to_dataframe",
                "example_usage"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 4: –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å –ò–ò –¥–ª—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...",
                "Line 22: PDF_AVAILABLE = True...",
                "Line 24: PDF_AVAILABLE = False...",
                "Line 29: EXCEL_AVAILABLE = True...",
                "Line 31: EXCEL_AVAILABLE = False...",
                "Line 244: \"hemoglobin_critical_low\": \"–¢—è–∂–µ–ª–∞—è –∞–Ω–µ–º–∏—è - —Ä–∏—Å–∫ ...",
                "Line 250: def process_file(self, file_path: str, file_type: ...",
                "Line 258: return self._process_image_file(file_path, ai_assi...",
                "Line 273: raise ValueError(f\"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {fi...",
                "Line 328: def _process_image_file(self, file_path: str, ai_a...",
                "Line 339: return self.analyze_photo_lab_results(image_array,...",
                "Line 353: def analyze_photo_lab_results(self, image_array: n...",
                "Line 354: \"\"\"–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ...",
                "Line 360: # –ï—Å–ª–∏ –µ—Å—Ç—å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è –∏–∑–≤–ª–µ...",
                "Line 361: if ai_assistant:...",
                "Line 362: extracted_text = self._extract_text_with_ai(proces...",
                "Line 364: # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –±–µ–∑ –ò–ò (–±–∞–∑–æ–≤–æ–µ OCR)...",
                "Line 387: warnings=warnings + [\"–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏...",
                "Line 399: warnings=[f\"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {str(e)}\"...",
                "Line 406: # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –≥—Ä–∞–¥–∞—Ü–∏–∏ —Å–µ—Ä–æ–≥–æ –µ—Å–ª–∏ —Ü–≤–µ—Ç–Ω–æ–µ...",
                "Line 422: def _extract_text_with_ai(self, image_array: np.nd...",
                "Line 423: \"\"\"–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò\"\"\"...",
                "Line 435: 6. –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏...",
                "Line 444: –ò–∑–≤–ª–µ–∫–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —á–µ—Ç–∫–æ –≤–∏–¥–Ω–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω...",
                "Line 448: # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64 –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ò–ò...",
                "Line 458: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π...",
                "Line 459: response = ai_assistant.send_vision_request(prompt...",
                "Line 463: return f\"–û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {str(e)}\"...",
                "Line 466: \"\"\"–ë–∞–∑–æ–≤–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ –ò–ò (–∑–∞–≥–ª—É—à–∫–∞)\"\"\"...",
                "Line 474: 2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞...",
                "Line 481: if not PDF_AVAILABLE:...",
                "Line 482: raise ImportError(\"–î–ª—è —Ä–∞–±–æ—Ç—ã —Å PDF —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pi...",
                "Line 513: if not EXCEL_AVAILABLE:...",
                "Line 514: raise ImportError(\"–î–ª—è —Ä–∞–±–æ—Ç—ã —Å Excel —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: ...",
                "Line 527: raise Exception(f\"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞: {e}\")...",
                "Line 539: raise Exception(f\"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è CSV —Ñ–∞–π–ª–∞: {e}\")...",
                "Line 548: raise Exception(f\"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON —Ñ–∞–π–ª–∞: {e}\")...",
                "Line 564: raise Exception(f\"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è XML —Ñ–∞–π–ª–∞: {e}\")...",
                "Line 720: warnings.append(f\"–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ –∫–∞—Ç–µ–≥–æ...",
                "Line 814: if __name__ == \"__main__\":..."
              ],
              "medical_terms": [
                "Line 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...",
                "Line 12: from typing import Dict, List, Tuple, Optional, An...",
                "Line 13: from dataclasses import dataclass, asdict...",
                "Line 47: patient_id: Optional[str]...",
                "Line 65: def _init_reference_ranges(self) -> Dict[str, Dict...",
                "Line 199: def _init_parameter_aliases(self) -> Dict[str, Lis...",
                "Line 224: def _init_units_mapping(self) -> Dict[str, List[st...",
                "Line 238: def _init_critical_ranges(self) -> Dict[str, str]:...",
                "Line 254: file_type = self._detect_file_type(file_path)...",
                "Line 263: raw_text = self._extract_from_pdf(file_path)...",
                "Line 265: raw_text = self._extract_from_excel(file_path)...",
                "Line 267: raw_text = self._extract_from_csv(file_path)...",
                "Line 269: raw_text = self._extract_from_json(file_path)...",
                "Line 271: raw_text = self._extract_from_xml(file_path)...",
                "Line 283: patient_id=None,...",
                "Line 295: patient_id=None,...",
                "Line 305: def _detect_file_type(self, file_path: str) -> str...",
                "Line 338: # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...",
                "Line 343: patient_id=None,...",
                "Line 354: \"\"\"–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ...",
                "Line 362: extracted_text = self._extract_text_with_ai(proces...",
                "Line 365: extracted_text = self._basic_ocr_extraction(proces...",
                "Line 368: parameters = self._parse_parameters(extracted_text...",
                "Line 370: # –ê–Ω–∞–ª–∏–∑ –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è...",
                "Line 378: confidence = self._calculate_confidence(analyzed_p...",
                "Line 381: patient_id=None,...",
                "Line 385: raw_text=extracted_text,...",
                "Line 387: warnings=warnings + [\"–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏...",
                "Line 393: patient_id=None,...",
                "Line 397: raw_text=f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ: {str(e)}\",...",
                "Line 422: def _extract_text_with_ai(self, image_array: np.nd...",
                "Line 426: –í—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ª–∞–±–æ—Ä–∞—Ç–æ...",
                "Line 434: 5. –î–∞—Ç—É –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 463: return f\"–û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {str(e)}\"...",
                "Line 465: def _basic_ocr_extraction(self, image_array: np.nd...",
                "Line 468: # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å OCR –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Ç–∏–ø–∞ pytesse...",
                "Line 472: –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç—Ä...",
                "Line 473: 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pytesseract: pip install pytesseract...",
                "Line 474: 2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞...",
                "Line 479: def _extract_from_pdf(self, file_path: str) -> str...",
                "Line 491: page_text = page.extract_text()...",
                "Line 496: tables = page.extract_tables()...",
                "Line 507: text += page.extract_text() + \"\\n\"...",
                "Line 511: def _extract_from_excel(self, file_path: str) -> s...",
                "Line 529: def _extract_from_csv(self, file_path: str) -> str...",
                "Line 541: def _extract_from_json(self, file_path: str) -> st...",
                "Line 550: def _extract_from_xml(self, file_path: str) -> str...",
                "Line 566: def _parse_parameters(self, text: str) -> List[Dic...",
                "Line 611: def _analyze_parameters(self, raw_parameters: List...",
                "Line 612: \"\"\"–ê–Ω–∞–ª–∏–∑ –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\"\"\"...",
                "Line 652: def _determine_status(self, value: float, ref_data...",
                "Line 683: def _format_reference_range(self, ref_data: Dict) ...",
                "Line 714: # –ê–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º...",
                "Line 725: \"\"\"–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 740: def generate_summary(self, lab_report: LabReport) ...",
                "Line 743: return {\"error\": \"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞\"}...",
                "Line 774: \"\"\"–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ DataFrame –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞\"\"\"..."
              ]
            }
          },
          "claude_assistant.py": {
            "type": "file",
            "name": "claude_assistant.py",
            "path": "modules/claude_assistant.py",
            "size": 17801,
            "category": "python",
            "analysis": {
              "lines": 339,
              "imports": [
                "import requests",
                "import base64",
                "import io",
                "from PIL import Image",
                "import streamlit as st",
                "import os",
                "import numpy as np"
              ],
              "classes": [
                "OpenRouterAssistant"
              ],
              "functions": [
                "__init__",
                "send_vision_request",
                "_get_model_name",
                "encode_image",
                "get_response",
                "general_medical_consultation",
                "analyze_ecg_data",
                "test_connection"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 9: class OpenRouterAssistant:...",
                "Line 13: self.base_url = \"https://openrouter.ai/api/v1/chat...",
                "Line 15: # –ú–æ–¥–µ–ª–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º Claude Sonnet 4...",
                "Line 16: self.models = [...",
                "Line 17: \"anthropic/claude-3-5-sonnet-20241022\",  # Claude ...",
                "Line 18: \"anthropic/claude-3-5-sonnet\",           # Claude ...",
                "Line 19: \"anthropic/claude-3-sonnet-20240229\",    # Claude ...",
                "Line 20: \"anthropic/claude-3-haiku\"               # Claude ...",
                "Line 23: self.model = self.models[0]  # Claude 3.5 Sonnet l...",
                "Line 28: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
                "Line 29: \"X-Title\": \"Medical AI Assistant\"...",
                "Line 32: def send_vision_request(self, prompt: str, image_a...",
                "Line 33: \"\"\"–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å Claude Vision - —É–ª—É—á—à–µ–Ω–Ω—ã–µ...",
                "Line 59: - –ü—Ä–∏–∑–Ω–∞–∫–∏ –∏—à–µ–º–∏–∏...",
                "Line 65: - –ê—Ä–∏—Ç–º–∏–∏...",
                "Line 76: - –ö–∞—á–µ—Å—Ç–≤–æ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏...",
                "Line 91: - –î–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏...",
                "Line 96: - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é...",
                "Line 107: - –¢–∏–ø –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (T1, T2, FLAIR –∏ –¥—Ä.)...",
                "Line 128: - –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 130: –ë—É–¥—å—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏....",
                "Line 150: for model in self.models:...",
                "Line 153: \"model\": model,...",
                "Line 163: model_name = self._get_model_name(model)...",
                "Line 164: return f\"**ü©∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ({model_name}):**\\...",
                "Line 166: print(f\"–ú–æ–¥–µ–ª—å {model} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.statu...",
                "Line 170: print(f\"–û—à–∏–±–∫–∞ —Å {model}: {e}\")...",
                "Line 173: return \"‚ùå –û—à–∏–±–∫–∞: –í—Å–µ –º–æ–¥–µ–ª–∏ Claude –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\"...",
                "Line 175: def _get_model_name(self, model):...",
                "Line 177: if \"claude-3-5-sonnet-20241022\" in model:...",
                "Line 178: return \"Claude 3.5 Sonnet (Latest)\"...",
                "Line 179: elif \"claude-3-5-sonnet\" in model:...",
                "Line 180: return \"Claude 3.5 Sonnet\"...",
                "Line 181: elif \"claude-3-sonnet\" in model:...",
                "Line 182: return \"Claude 3 Sonnet\"...",
                "Line 183: elif \"claude-3-haiku\" in model:...",
                "Line 184: return \"Claude 3 Haiku\"...",
                "Line 186: return model...",
                "Line 203: img.thumbnail(max_size, Image.Resampling.LANCZOS)...",
                "Line 211: \"\"\"–¢–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª—É—á—à–µ–π –¥–æ—Å—Ç—É–ø...",
                "Line 217: –Ω–µ–π—Ä–æ—Å–µ—Ç–∏) –≤ –º–µ–¥–∏—Ü–∏–Ω–µ. –¢—ã —Å–æ–≤–º–µ—â–∞–µ—à—å –∫–ª–∏–Ω–∏—á–µ—Å–∫—É—é —Å...",
                "Line 224: - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞: –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ ...",
                "Line 225: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –º–µ–¥–∏—Ü–∏–Ω—É ‚Äî –¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ, ...",
                "Line 226: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é, —Å—Ç–∞–Ω–¥–∞—Ä—Ç...",
                "Line 230: —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (GitHub), –Ω–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ (arXiv, ACM, ...",
                "Line 233: - –í —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏: –æ–±—ä—è—Å–Ω–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ–∞–ª–∏–∑–∞—Ü...",
                "Line 234: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò –≤ –∫–ª–∏–Ω–∏–∫–µ....",
                "Line 249: 2. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ–±–∑–æ—Ä**: –∫–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –±–∏–±–ª–∏–æ...",
                "Line 254: –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ‚â§ 5 –ª–µ—Ç....",
                "Line 255: - –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç...",
                "Line 260: for model in self.models:...",
                "Line 263: \"model\": model,...",
                "Line 275: self.model = model  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ä–∞–±–æ—á—É—é –º–æ–¥–µ–ª—å...",
                "Line 283: return \"‚ùå –û—à–∏–±–∫–∞: –í—Å–µ –º–æ–¥–µ–ª–∏ Claude –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\"...",
                "Line 305: 4. –î–∞–π—Ç–µ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –≤...",
                "Line 310: \"\"\"–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π Claud...",
                "Line 311: working_models = []...",
                "Line 313: for model in self.models:...",
                "Line 316: \"model\": model,...",
                "Line 323: model_name = self._get_model_name(model)...",
                "Line 324: working_models.append(f\"‚úÖ {model_name}\")...",
                "Line 325: if not hasattr(self, '_best_model'):...",
                "Line 326: self._best_model = model...",
                "Line 327: self.model = model...",
                "Line 329: model_name = self._get_model_name(model)...",
                "Line 330: working_models.append(f\"‚ùå {model_name}: {response....",
                "Line 333: model_name = self._get_model_name(model)...",
                "Line 334: working_models.append(f\"‚ùå {model_name}: {str(e)}\")...",
                "Line 336: if any(\"‚úÖ\" in status for status in working_models)...",
                "Line 337: return True, \"\\n\".join([\"üéâ –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–µ–π Claude:\"...",
                "Line 339: return False, \"\\n\".join([\"‚ùå –í—Å–µ –º–æ–¥–µ–ª–∏ Claude –Ω–µ–¥–æ..."
              ],
              "medical_terms": [
                "Line 28: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
                "Line 29: \"X-Title\": \"Medical AI Assistant\"...",
                "Line 33: \"\"\"–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å Claude Vision - —É–ª—É—á—à–µ–Ω–Ω—ã–µ...",
                "Line 38: if \"—ç–∫–≥\" in prompt_lower or \"ecg\" in prompt_lower:...",
                "Line 39: medical_prompt = \"\"\"...",
                "Line 40: –í—ã - –æ–ø—ã—Ç–Ω—ã–π –≤—Ä–∞—á-–∫–∞—Ä–¥–∏–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —ç—Ç–æ –≠...",
                "Line 67: –î–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ —Å –¥–∏–∞–≥–Ω–æ–∑–æ–º...",
                "Line 70: elif \"—Ä–µ–Ω—Ç–≥–µ–Ω\" in prompt_lower or \"xray\" in prompt...",
                "Line 71: medical_prompt = \"\"\"...",
                "Line 72: –í—ã - –≤—Ä–∞—á-—Ä–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ä–µ–Ω—Ç–≥–µ...",
                "Line 95: - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑...",
                "Line 101: elif \"–º—Ä—Ç\" in prompt_lower or \"mri\" in prompt_lowe...",
                "Line 102: medical_prompt = \"\"\"...",
                "Line 103: –í—ã - –≤—Ä–∞—á-—Ä–∞–¥–∏–æ–ª–æ–≥, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ú–†–¢. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä...",
                "Line 127: - –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–∏–∞–≥–Ω–æ–∑...",
                "Line 134: medical_prompt = f\"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —ç—Ç–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ...",
                "Line 137: content = [{\"type\": \"text\", \"text\": medical_prompt...",
                "Line 155: \"max_tokens\": 2000,  # –ë–æ–ª—å—à–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ...",
                "Line 164: return f\"**ü©∫ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ({model_name}):**\\...",
                "Line 201: # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –ª—É—á—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 216: —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û, –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç...",
                "Line 242: 2. **–î–∏–∞–≥–Ω–æ–∑—ã**...",
                "Line 248: 1. **–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏**: —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å (–Ω–∞–ø—Ä–∏...",
                "Line 285: def general_medical_consultation(self, user_questi...",
                "Line 289: def analyze_ecg_data(self, ecg_analysis: dict, use...",
                "Line 290: \"\"\"–ê–Ω–∞–ª–∏–∑ –≠–ö–ì –¥–∞–Ω–Ω—ã—Ö —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º\"\"\"...",
                "Line 292: üìä –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –≠–ö–ì:...",
                "Line 293: ‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π: {ecg_analysis.get(...",
                "Line 294: ‚Ä¢ –†–∏—Ç–º: {ecg_analysis.get('rhythm_assessment', '–Ω–µ...",
                "Line 295: ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ QRS –∫–æ–º–ø–ª–µ–∫—Å–æ–≤: {ecg_analysis.get('nu...",
                "Line 296: ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏: {ecg_analysis.get('duration...",
                "Line 297: ‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–∞: {ecg_analysis.get('signal_qual...",
                "Line 309: def test_connection(self):..."
              ]
            }
          },
          "dicom_processor.py": {
            "type": "file",
            "name": "dicom_processor.py",
            "path": "modules/dicom_processor.py",
            "size": 13310,
            "category": "python",
            "analysis": {
              "lines": 253,
              "imports": [
                "import pydicom",
                "import numpy as np",
                "import matplotlib.pyplot as plt",
                "from PIL import Image",
                "import cv2",
                "import os",
                "from datetime import datetime"
              ],
              "classes": [
                "AdvancedDICOMProcessor"
              ],
              "functions": [
                "__init__",
                "read_dicom_file",
                "extract_metadata",
                "get_pixel_array",
                "apply_windowing",
                "normalize_pixel_array",
                "enhance_image",
                "analyze_image_quality",
                "detect_anatomical_features",
                "generate_report",
                "generate_recommendations"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 33: raise Exception(f\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ DICOM —Ñ–∞–π–ª–∞: {...",
                "Line 46: # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏...",
                "Line 55: metadata['manufacturer_model'] = str(getattr(dicom...",
                "Line 82: raise Exception(\"DICOM —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏...",
                "Line 99: raise Exception(f\"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –ø–∏–∫—Å–µ–ª–µ–π: ...",
                "Line 186: air_threshold = np.percentile(pixel_array, 15)...",
                "Line 187: air_mask = pixel_array < air_threshold...",
                "Line 188: features['air_area_percentage'] = np.sum(air_mask)...",
                "Line 194: 'air_like': np.sum(pixel_array < 50) / pixel_array...",
                "Line 221: 'model': metadata['manufacturer_model']...",
                "Line 234: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
                "Line 236: recommendations.append(\"–ù–∏–∑–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏...",
                "Line 244: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ—Å—Ç–∏..."
              ],
              "medical_terms": [
                "Line 14: 'CR', 'CT', 'MR', 'XA', 'RF', 'DX', 'MG', 'US', 'N...",
                "Line 35: def extract_metadata(self, dicom_data):...",
                "Line 39: # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ...",
                "Line 40: metadata['patient_name'] = str(getattr(dicom_data,...",
                "Line 41: metadata['patient_id'] = str(getattr(dicom_data, '...",
                "Line 42: metadata['patient_birth_date'] = str(getattr(dicom...",
                "Line 43: metadata['patient_sex'] = str(getattr(dicom_data, ...",
                "Line 44: metadata['patient_age'] = str(getattr(dicom_data, ...",
                "Line 54: metadata['manufacturer'] = str(getattr(dicom_data,...",
                "Line 55: metadata['manufacturer_model'] = str(getattr(dicom...",
                "Line 57: metadata['patient_position'] = str(getattr(dicom_d...",
                "Line 67: if metadata['modality'] == 'CT':...",
                "Line 142: \"\"\"–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"...",
                "Line 175: def detect_anatomical_features(self, pixel_array, ...",
                "Line 190: elif modality == 'CT':...",
                "Line 191: # –ê–Ω–∞–ª–∏–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ —Ç–∫–∞–Ω–µ–π (–≤ –µ–¥–∏–Ω–∏—Ü–∞—Ö –•–∞—É–Ω—Å—Ñ–∏–ª–¥–∞, ...",
                "Line 203: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ–± –∞–Ω–∞–ª–∏–∑–µ DICOM –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"...",
                "Line 206: 'patient_info': {...",
                "Line 207: 'name': metadata['patient_name'],...",
                "Line 208: 'id': metadata['patient_id'],...",
                "Line 209: 'age': metadata['patient_age'],...",
                "Line 210: 'sex': metadata['patient_sex']...",
                "Line 220: 'manufacturer': metadata['manufacturer'],...",
                "Line 221: 'model': metadata['manufacturer_model']...",
                "Line 231: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞\"\"\"..."
              ]
            }
          },
          "enhanced_medical_ai_analyzer.py": {
            "type": "file",
            "name": "enhanced_medical_ai_analyzer.py",
            "path": "modules/enhanced_medical_ai_analyzer.py",
            "size": 33711,
            "category": "python",
            "analysis": {
              "lines": 824,
              "imports": [
                "import json",
                "import base64",
                "import io",
                "from PIL import Image",
                "import numpy as np",
                "from typing import Dict, List, Tuple, Optional, Any",
                "from dataclasses import dataclass",
                "from enum import Enum",
                "import datetime",
                "from skimage import exposure",
                "import requests"
              ],
              "classes": [
                "ImageType",
                "AnalysisResult",
                "EnhancedMedicalAIAnalyzer"
              ],
              "functions": [
                "__init__",
                "_init_specialized_prompts",
                "_init_response_templates",
                "detect_image_type",
                "preprocess_image",
                "extract_metadata",
                "encode_image_optimized",
                "analyze_image",
                "_send_ai_request",
                "batch_analyze",
                "generate_report",
                "example_usage"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 2: –£–ª—É—á—à–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...",
                "Line 42: class EnhancedMedicalAIAnalyzer:...",
                "Line 47: self.base_url = \"https://openrouter.ai/api/v1/chat...",
                "Line 48: self.models = [...",
                "Line 49: \"anthropic/claude-3-5-sonnet-20241022\",...",
                "Line 50: \"anthropic/claude-3-5-sonnet\",...",
                "Line 51: \"anthropic/claude-3-sonnet-20240229\",...",
                "Line 57: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
                "Line 58: \"X-Title\": \"Enhanced Medical AI Assistant\"...",
                "Line 96: - –ü—Ä–∏–∑–Ω–∞–∫–∏ –∏—à–µ–º–∏–∏/–∏–Ω—Ñ–∞—Ä–∫—Ç–∞...",
                "Line 103: - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∞–∫—Ç–∏–∫–µ...",
                "Line 147: –í—ã ‚Äî –Ω–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –î–µ—Ç–∞–ª—å–Ω–æ –ø—Ä...",
                "Line 151: - –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (T1/T2/FLAIR/DWI)...",
                "Line 159: - –ë–∞–∑–∞–ª—å–Ω—ã–µ –≥–∞–Ω–≥–ª–∏–∏...",
                "Line 185: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏–∏. –ü—Ä–æ–≤–µ–¥...",
                "Line 212: 5. –°–¢–ê–î–ò–†–û–í–ê–ù–ò–ï (–ø—Ä–∏ –æ–Ω–∫–æ–ª–æ–≥–∏–∏):...",
                "Line 253: –í—ã ‚Äî –≤—Ä–∞—á-—ç–Ω–¥–æ—Å–∫–æ–ø–∏—Å—Ç –≤—ã—Å—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –û—Ü–µ–Ω–∏—Ç–µ —ç–Ω...",
                "Line 256: 1. –ö–ê–ß–ï–°–¢–í–û –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–ò:...",
                "Line 274: - –≠—Ä–æ–∑–∏–∏/—è–∑–≤—ã...",
                "Line 279: - –ü–æ–∫–∞–∑–∞–Ω–∏—è –∫ –±–∏–æ–ø—Å–∏–∏...",
                "Line 297: - –ü–æ–ª–æ—Å—ã –∏ –ª–∏–Ω–∏–∏...",
                "Line 298: - –°—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–≥—Ä–µ—Å—Å–∏–∏...",
                "Line 321: –í—ã ‚Äî –ø–∞—Ç–æ–ª–æ–≥–æ–∞–Ω–∞—Ç–æ–º —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ –æ–Ω–∫–æ–º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 347: 5. –û–ù–ö–û–õ–û–ì–ò–ß–ï–°–ö–ò–ï –ö–†–ò–¢–ï–†–ò–ò:...",
                "Line 373: - –ê—Ä—Ç–µ—Ä–∏–∏ (–∫–∞–ª–∏–±—Ä, —Ä–µ—Ñ–ª–µ–∫—Å)...",
                "Line 387: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞–º–º–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π BI-RADS....",
                "Line 553: # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 555: img.thumbnail(max_size, Image.Resampling.LANCZOS)...",
                "Line 628: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò...",
                "Line 629: ai_response = self._send_ai_request(full_prompt, p...",
                "Line 633: response_data = json.loads(ai_response)...",
                "Line 650: clinical_interpretation=ai_response,...",
                "Line 660: def _send_ai_request(self, prompt: str, image_arra...",
                "Line 661: \"\"\"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò\"\"\"...",
                "Line 675: for model in self.models:...",
                "Line 678: \"model\": model,...",
                "Line 694: return '{\"error\": \"–í—Å–µ –º–æ–¥–µ–ª–∏ –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\"}'...",
                "Line 728: report_parts.append(\"–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú –ò–ò-...",
                "Line 770: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 772: report_parts.append(\"‚ö†Ô∏è –°–†–û–ß–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\")...",
                "Line 777: report_parts.append(\"–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\")...",
                "Line 789: report_parts.append(\"–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ò–ò-—Å–∏—Å—Ç–µ–º–æ–π. ...",
                "Line 799: analyzer = EnhancedMedicalAIAnalyzer(\"your-api-key...",
                "Line 823: if __name__ == \"__main__\":..."
              ],
              "medical_terms": [
                "Line 2: –£–ª—É—á—à–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...",
                "Line 11: from typing import Dict, List, Tuple, Optional, An...",
                "Line 18: ECG = \"ecg\"...",
                "Line 19: XRAY = \"xray\"...",
                "Line 20: MRI = \"mri\"...",
                "Line 21: CT = \"ct\"...",
                "Line 31: \"\"\"–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"...",
                "Line 34: structured_findings: Dict[str, Any]...",
                "Line 35: clinical_interpretation: str...",
                "Line 40: metadata: Dict[str, Any]...",
                "Line 42: class EnhancedMedicalAIAnalyzer:...",
                "Line 43: \"\"\"–£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\"\"...",
                "Line 57: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
                "Line 58: \"X-Title\": \"Enhanced Medical AI Assistant\"...",
                "Line 67: def _init_specialized_prompts(self) -> Dict[ImageT...",
                "Line 70: ImageType.ECG: \"\"\"...",
                "Line 71: –í—ã ‚Äî –≤–µ–¥—É—â–∏–π –∫–∞—Ä–¥–∏–æ–ª–æ–≥-—ç–ª–µ–∫—Ç—Ä–æ—Ñ–∏–∑–∏–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏...",
                "Line 73: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ê–ù–ê–õ–ò–ó–ê:...",
                "Line 101: - –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑...",
                "Line 109: ImageType.XRAY: \"\"\"...",
                "Line 110: –í—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ä–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥. –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑...",
                "Line 112: –ü–†–û–¢–û–ö–û–õ –ê–ù–ê–õ–ò–ó–ê:...",
                "Line 135: - –í–µ—Ä–æ—è—Ç–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã...",
                "Line 146: ImageType.MRI: \"\"\"...",
                "Line 147: –í—ã ‚Äî –Ω–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –î–µ—Ç–∞–ª—å–Ω–æ –ø—Ä...",
                "Line 149: –°–ò–°–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:...",
                "Line 184: ImageType.CT: \"\"\"...",
                "Line 185: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏–∏. –ü—Ä–æ–≤–µ–¥...",
                "Line 187: –ü–†–û–¢–û–ö–û–õ –ö–¢-–ê–ù–ê–õ–ò–ó–ê:...",
                "Line 222: –£–ó–ò –ü–†–û–¢–û–ö–û–õ:...",
                "Line 255: –≠–ù–î–û–°–ö–û–ü–ò–ß–ï–°–ö–ò–ô –ü–†–û–¢–û–ö–û–õ:...",
                "Line 286: –í—ã ‚Äî –¥–µ—Ä–º–∞—Ç–æ–æ–Ω–∫–æ–ª–æ–≥. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –¥–µ—Ä–º–∞—Ç–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏–π ...",
                "Line 288: –î–ï–†–ú–ê–¢–û–°–ö–û–ü–ò–Ø –ü–†–û–¢–û–ö–û–õ:...",
                "Line 321: –í—ã ‚Äî –ø–∞—Ç–æ–ª–æ–≥–æ–∞–Ω–∞—Ç–æ–º —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ –æ–Ω–∫–æ–º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 323: –ì–ò–°–¢–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:...",
                "Line 359: –û–§–¢–ê–õ–¨–ú–û–°–ö–û–ü–ò–Ø –ü–†–û–¢–û–ö–û–õ:...",
                "Line 387: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞–º–º–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π BI-RADS....",
                "Line 389: –ú–ê–ú–ú–û–ì–†–ê–§–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:...",
                "Line 421: def _init_response_templates(self) -> Dict[ImageTy...",
                "Line 424: ImageType.ECG: {...",
                "Line 430: \"diagnosis\": \"\",...",
                "Line 436: ImageType.XRAY: {...",
                "Line 438: \"anatomical_structures\": {...",
                "Line 443: \"differential_diagnosis\": [],...",
                "Line 452: def detect_image_type(self, image_array: np.ndarra...",
                "Line 456: aspect_ratio = width / height...",
                "Line 458: # –ê–Ω–∞–ª–∏–∑ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫...",
                "Line 466: # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç—É—Ä–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π...",
                "Line 472: if aspect_ratio > 2.0 and not is_color:...",
                "Line 473: return ImageType.ECG, 0.8...",
                "Line 474: elif aspect_ratio < 1.5 and not is_color and edge_...",
                "Line 475: return ImageType.XRAY, 0.7...",
                "Line 481: return ImageType.MRI, 0.5  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é...",
                "Line 485: if image_type == ImageType.ECG:...",
                "Line 494: elif image_type == ImageType.XRAY:...",
                "Line 514: def extract_metadata(self, image_array: np.ndarray...",
                "Line 518: \"image_type_detected\": image_type.value,...",
                "Line 527: if image_type == ImageType.ECG:...",
                "Line 534: elif image_type == ImageType.XRAY:...",
                "Line 536: \"estimated_kvp\": \"auto-detected\",...",
                "Line 537: \"estimated_mas\": \"auto-detected\",...",
                "Line 553: # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 565: \"\"\"–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"...",
                "Line 569: image_type, confidence = self.detect_image_type(im...",
                "Line 577: metadata = self.extract_metadata(processed_image, ...",
                "Line 580: base_prompt = self.specialized_prompts.get(image_t...",
                "Line 586: json_instruction = \"\"\"...",
                "Line 592: \"artifacts\": [\"—Å–ø–∏—Å–æ–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤\"],...",
                "Line 595: \"clinical_findings\": {...",
                "Line 596: \"normal_structures\": [\"—Å–ø–∏—Å–æ–∫ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä\"...",
                "Line 606: \"diagnosis\": {...",
                "Line 607: \"primary_diagnosis\": \"–æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑\",...",
                "Line 608: \"differential_diagnosis\": [\"—Å–ø–∏—Å–æ–∫ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã...",
                "Line 612: \"urgent_actions\": [\"—ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\"],...",
                "Line 618: \"risk_factors\": [\"—Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞\"],...",
                "Line 626: full_prompt = base_prompt + \"\\n\\n\" + json_instruct...",
                "Line 638: \"technical_assessment\": {\"quality\": \"–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ\"...",
                "Line 639: \"clinical_findings\": {\"normal_structures\": [], \"pa...",
                "Line 640: \"diagnosis\": {\"primary_diagnosis\": \"–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ...",
                "Line 641: \"recommendations\": {\"urgent_actions\": [], \"follow_...",
                "Line 642: \"risk_assessment\": {\"urgency_level\": \"–ø–ª–∞–Ω–æ–≤–æ\", \"r...",
                "Line 649: structured_findings=response_data,...",
                "Line 650: clinical_interpretation=ai_response,...",
                "Line 652: urgent_flags=response_data.get(\"recommendations\", ...",
                "Line 653: icd10_codes=response_data.get(\"diagnosis\", {}).get...",
                "Line 660: def _send_ai_request(self, prompt: str, image_arra...",
                "Line 698: \"\"\"–ü–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\"\"\"...",
                "Line 708: image_type=image_type or ImageType.ECG,...",
                "Line 710: structured_findings={\"error\": str(e)},...",
                "Line 711: clinical_interpretation=f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {str(e)}...",
                "Line 722: def generate_report(self, results: List[AnalysisRe...",
                "Line 728: report_parts.append(\"–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú –ò–ò-...",
                "Line 731: if patient_data:...",
                "Line 732: report_parts.append(f\"–ü–∞—Ü–∏–µ–Ω—Ç: {patient_data.get('...",
                "Line 733: report_parts.append(f\"–í–æ–∑—Ä–∞—Å—Ç: {patient_data.get('...",
                "Line 734: report_parts.append(f\"–ü–æ–ª: {patient_data.get('sex'...",
                "Line 737: # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
                "Line 741: report_parts.append(f\"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: {resu...",
                "Line 743: findings = result.structured_findings...",
                "Line 751: if \"clinical_findings\" in findings:...",
                "Line 752: clinical = findings[\"clinical_findings\"]...",
                "Line 754: if clinical.get(\"pathological_findings\"):...",
                "Line 756: for finding in clinical[\"pathological_findings\"]:...",
                "Line 761: # –î–∏–∞–≥–Ω–æ–∑...",
                "Line 762: if \"diagnosis\" in findings:...",
                "Line 763: diag = findings[\"diagnosis\"]...",
                "Line 764: report_parts.append(f\"–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: {diag.get('prima...",
                "Line 788: report_parts.append(f\"–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {datetime.date...",
                "Line 789: report_parts.append(\"–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ò–ò-—Å–∏—Å—Ç–µ–º–æ–π. ...",
                "Line 796: \"\"\"–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞\"\"\"...",
                "Line 799: analyzer = EnhancedMedicalAIAnalyzer(\"your-api-key...",
                "Line 802: image_path = \"ecg_sample.jpg\"...",
                "Line 806: # –ê–Ω–∞–ª–∏–∑...",
                "Line 809: ImageType.ECG,...",
                "Line 810: \"–ü–∞—Ü–∏–µ–Ω—Ç –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ –±–æ–ª–∏ –≤ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–µ\"...",
                "Line 816: print(f\"–î–∏–∞–≥–Ω–æ–∑: {result.structured_findings.get('...",
                "Line 819: patient_data = {\"name\": \"–ò–≤–∞–Ω–æ–≤ –ò.–ò.\", \"age\": 45, ...",
                "Line 820: report = analyzer.generate_report([result], patien..."
              ]
            }
          },
          "genetic_analyzer.py": {
            "type": "file",
            "name": "genetic_analyzer.py",
            "path": "modules/genetic_analyzer.py",
            "size": 81742,
            "category": "python",
            "analysis": {
              "lines": 1693,
              "imports": [
                "import json",
                "import gzip",
                "import re",
                "import datetime",
                "from typing import List, Dict, Any, Tuple, Optional",
                "from dataclasses import dataclass, asdict",
                "from enum import Enum",
                "import os"
              ],
              "classes": [
                "GeneticDataType",
                "VariantPathogenicity",
                "VCFVariant",
                "ClinicalVariant",
                "PharmacogeneticVariant",
                "GeneticRiskAssessment",
                "GeneticAnalysisResult",
                "GeneticDatabase",
                "VCFParser",
                "GeneticAnalyzer",
                "GeneticAnalyzerIntegration"
              ],
              "functions": [
                "to_dict",
                "variant_key",
                "is_snv",
                "is_indel",
                "to_dict",
                "to_dict",
                "to_dict",
                "to_dict",
                "__init__",
                "_load_pathogenic_variants",
                "_load_pharmacogenetic_variants",
                "_load_trait_variants",
                "_load_gene_disease_associations",
                "__init__",
                "parse_file",
                "_parse_header",
                "_parse_meta_line",
                "_parse_variant_line",
                "_parse_info_field",
                "validate_format",
                "__init__",
                "analyze_vcf_file",
                "_classify_variants",
                "_extract_population_frequency",
                "_get_clinical_interpretations",
                "_get_pharmacogenetic_interpretations",
                "_assess_genetic_risks",
                "_generate_lifestyle_recommendations",
                "_generate_recommendations",
                "_determine_urgent_flags",
                "_assign_icd10_codes",
                "_calculate_confidence_score",
                "generate_report",
                "export_results",
                "__init__",
                "analyze_genetic_data_for_medical_ai",
                "_generate_primary_genetic_diagnosis",
                "_get_genetic_counseling_recommendations",
                "_get_ai_interpretation",
                "create_test_vcf_file",
                "run_genetic_analysis_example"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 5: –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Enhanced Me...",
                "Line 29: UNCERTAIN_SIGNIFICANCE = \"uncertain_significance\"...",
                "Line 35: \"\"\"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—Ä–∏–∞–Ω—Ç–µ –∏–∑...",
                "Line 120: trait_variants: List[VCFVariant]...",
                "Line 131: \"\"\"–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è JSON —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏\"\"\"...",
                "Line 139: 'trait_variants': [v.to_dict() for v in self.trait...",
                "Line 156: self.trait_variants = self._load_trait_variants()...",
                "Line 284: clinical_annotation=\"–ø–æ–ª–Ω–∞—è –ø–æ—Ç–µ—Ä—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–µ—Ä–º–µ–Ω—Ç...",
                "Line 305: clinical_annotation=\"–ø–æ–ª–Ω–∞—è –ø–æ—Ç–µ—Ä—è —Ñ—É–Ω–∫—Ü–∏–∏\"...",
                "Line 353: def _load_trait_variants(self) -> Dict[str, Dict[s...",
                "Line 360: \"trait\": \"–∏—à–µ–º–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞\",...",
                "Line 370: \"trait\": \"—É—Ä–æ–≤–µ–Ω—å —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–∞ –õ–ü–ù–ü\",...",
                "Line 381: \"trait\": \"—Å–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç 2 —Ç–∏–ø–∞\",...",
                "Line 393: \"trait\": \"–±–æ–ª–µ–∑–Ω—å –ê–ª—å—Ü–≥–µ–π–º–µ—Ä–∞\",...",
                "Line 405: \"trait\": \"–≤–µ–Ω–æ–∑–Ω–∞—è —Ç—Ä–æ–º–±–æ—ç–º–±–æ–ª–∏—è\",...",
                "Line 431: \"prevention\": [\"–∏–∑–±–µ–≥–∞–Ω–∏–µ —Ä–∞–¥–∏–∞—Ü–∏–∏\", \"—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ...",
                "Line 449: raise FileNotFoundError(f\"VCF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {fil...",
                "Line 454: raise ValueError(f\"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π VCF —Ñ–æ—Ä–º–∞—Ç: {'; '....",
                "Line 492: raise Exception(f\"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ VCF —Ñ–∞–π–ª–∞: {...",
                "Line 685: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏...",
                "Line 741: raise ValueError(\"–í–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ\")...",
                "Line 796: trait_variants=classified_variants['trait'],...",
                "Line 830: trait_variants=[],...",
                "Line 856: 'trait': [],...",
                "Line 857: 'uncertain': [],...",
                "Line 879: if variant_key in self.database.trait_variants:...",
                "Line 880: classified['trait'].append(variant)...",
                "Line 887: # –ß–∞—Å—Ç–æ—Ç–∞ –≤ –ø–æ–ø—É–ª—è—Ü–∏–∏ –∏–∑ INFO –ø–æ–ª—è...",
                "Line 892: classified['uncertain'].append(variant)...",
                "Line 897: \"\"\"–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –≤ –ø–æ–ø—É–ª—è—Ü–∏–∏ –∏–∑ INFO –ø–æ–ª—è\"\"\"...",
                "Line 992: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—é...",
                "Line 1001: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏...",
                "Line 1054: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –ø–∞—Ç–æ–≥–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö...",
                "Line 1063: # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≥–µ–Ω–∞–º...",
                "Line 1068: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ –ø–∞—Ç–æ–≥–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö...",
                "Line 1076: # –§–∞—Ä–º–∞–∫–æ–≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 1088: # –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 1158: # –ü–æ–≤—ã—à–∞–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏ –∑–Ω–∞—á...",
                "Line 1180: include_technical_details: bool = True) -> str:...",
                "Line 1212: report_parts.append(f\"  –°–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏: {l...",
                "Line 1236: report_parts.append(f\"   –ß–∞—Å—Ç–æ—Ç–∞ –≤ –ø–æ–ø—É–ª—è—Ü–∏–∏: {int...",
                "Line 1273: report_parts.append(\"\\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—é:...",
                "Line 1278: report_parts.append(\"\\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω...",
                "Line 1284: # –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 1286: report_parts.append(\"üí° –ö–õ–ò–ù–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\")...",
                "Line 1298: if include_technical_details and analysis_result.m...",
                "Line 1331: report_parts.append(\"‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≤—Ä...",
                "Line 1353: raise ValueError(f\"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: {forma...",
                "Line 1364: \"\"\"–ö–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ ...",
                "Line 1370: def analyze_genetic_data_for_medical_ai(self, vcf_...",
                "Line 1373: \"\"\"–ê–Ω–∞–ª–∏–∑ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–µ–¥...",
                "Line 1382: medical_ai_format = {...",
                "Line 1431: # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ò–ò - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–ø–æ–ª...",
                "Line 1433: ai_interpretation = self._get_ai_interpretation(ge...",
                "Line 1434: medical_ai_format[\"ai_interpretation\"] = ai_interp...",
                "Line 1436: return medical_ai_format...",
                "Line 1470: \"\"\"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–º—É –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é\"...",
                "Line 1485: recommendations.append(\"–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑...",
                "Line 1489: def _get_ai_interpretation(self, genetic_result: G...",
                "Line 1491: \"\"\"–ü–æ–ª—É—á–µ–Ω–∏–µ –ò–ò-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑—É–ª—å—Ç...",
                "Line 1494: return \"–ò–ò-–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\"...",
                "Line 1496: # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò...",
                "Line 1513: 2. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –≤ –≤–µ–¥–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞...",
                "Line 1524: \"model\": self.medical_analyzer.models[0],...",
                "Line 1540: return \"–ò–ò-–∞–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\"...",
                "Line 1543: return f\"–û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {str(e)}\"...",
                "Line 1644: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 1646: print(f\"\\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\")...",
                "Line 1691: if __name__ == \"__main__\":...",
                "Line 1692: # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–æ–¥—É–ª—è..."
              ],
              "medical_terms": [
                "Line 5: –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Enhanced Me...",
                "Line 13: from typing import List, Dict, Any, Tuple, Optiona...",
                "Line 14: from dataclasses import dataclass, asdict...",
                "Line 43: info: Dict[str, Any]...",
                "Line 45: samples: Dict[str, Dict[str, Any]]...",
                "Line 47: def to_dict(self) -> Dict[str, Any]:...",
                "Line 49: return asdict(self)...",
                "Line 67: class ClinicalVariant:...",
                "Line 76: clinical_action: str...",
                "Line 80: def to_dict(self) -> Dict[str, Any]:...",
                "Line 81: return asdict(self)...",
                "Line 92: clinical_annotation: str...",
                "Line 94: def to_dict(self) -> Dict[str, Any]:...",
                "Line 95: return asdict(self)...",
                "Line 101: high_penetrance_diseases: List[Dict[str, Any]]...",
                "Line 102: moderate_risk_conditions: List[Dict[str, Any]]...",
                "Line 103: pharmacogenetic_considerations: List[Dict[str, Any...",
                "Line 104: reproductive_risks: List[Dict[str, Any]]...",
                "Line 108: def to_dict(self) -> Dict[str, Any]:...",
                "Line 109: return asdict(self)...",
                "Line 113: \"\"\"–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 121: clinical_interpretations: List[ClinicalVariant]...",
                "Line 128: metadata: Dict[str, Any]...",
                "Line 130: def to_dict(self) -> Dict[str, Any]:...",
                "Line 136: 'pathogenic_variants': [v.to_dict() for v in self....",
                "Line 137: 'likely_pathogenic_variants': [v.to_dict() for v i...",
                "Line 138: 'pharmacogenetic_variants': [v.to_dict() for v in ...",
                "Line 139: 'trait_variants': [v.to_dict() for v in self.trait...",
                "Line 140: 'clinical_interpretations': [c.to_dict() for c in ...",
                "Line 141: 'pharmacogenetic_interpretations': [p.to_dict() fo...",
                "Line 142: 'risk_assessment': self.risk_assessment.to_dict(),...",
                "Line 159: def _load_pathogenic_variants(self) -> Dict[str, C...",
                "Line 164: variants[\"17:43094464:C:T\"] = ClinicalVariant(...",
                "Line 172: clinical_action=\"—É—Å–∏–ª–µ–Ω–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ, –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á...",
                "Line 177: variants[\"17:43091434:A:G\"] = ClinicalVariant(...",
                "Line 185: clinical_action=\"—É—Å–∏–ª–µ–Ω–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ, –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á...",
                "Line 191: variants[\"13:32890665:A:G\"] = ClinicalVariant(...",
                "Line 199: clinical_action=\"—É—Å–∏–ª–µ–Ω–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ, –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á...",
                "Line 205: variants[\"7:117230206:CTT:C\"] = ClinicalVariant(...",
                "Line 207: variant_name=\"c.1521_1523delCTT\",...",
                "Line 213: clinical_action=\"–≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–æ...",
                "Line 219: variants[\"6:26090951:G:A\"] = ClinicalVariant(...",
                "Line 227: clinical_action=\"–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∂–µ–ª–µ–∑–∞, —Ñ–ª–µ–±–æ—Ç–æ–º–∏—è –ø—Ä–∏...",
                "Line 233: variants[\"19:45051059:T:C\"] = ClinicalVariant(...",
                "Line 241: clinical_action=\"–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –ª–∏–ø–∏–¥—Å–Ω–∏–∂–∞—é—â–∞—è —Ç–µ—Ä–∞–ø–∏...",
                "Line 247: variants[\"17:7673803:G:A\"] = ClinicalVariant(...",
                "Line 255: clinical_action=\"–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ –æ–Ω–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –Ω–∞–±–ª—é–¥...",
                "Line 262: def _load_pharmacogenetic_variants(self) -> Dict[s...",
                "Line 274: clinical_annotation=\"–ø–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ...",
                "Line 284: clinical_annotation=\"–ø–æ–ª–Ω–∞—è –ø–æ—Ç–µ—Ä—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–µ—Ä–º–µ–Ω—Ç...",
                "Line 295: clinical_annotation=\"—Å–Ω–∏–∂–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª–æ–ø–∏–¥...",
                "Line 305: clinical_annotation=\"–ø–æ–ª–Ω–∞—è –ø–æ—Ç–µ—Ä—è —Ñ—É–Ω–∫—Ü–∏–∏\"...",
                "Line 316: clinical_annotation=\"—Ä–∏—Å–∫ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞ –ø—Ä–∏ —Å—Ç...",
                "Line 327: clinical_annotation=\"–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä...",
                "Line 337: clinical_annotation=\"—Ä–∏—Å–∫ —Å–∏–Ω–¥—Ä–æ–º–∞ –°—Ç–∏–≤–µ–Ω—Å–∞-–î–∂–æ–Ω—Å–æ...",
                "Line 348: clinical_annotation=\"—Ç—Ä–µ–±—É–µ—Ç—Å—è —á–∞—Å—Ç—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú...",
                "Line 353: def _load_trait_variants(self) -> Dict[str, Dict[s...",
                "Line 364: \"effect_size\": \"—É–º–µ—Ä–µ–Ω–Ω—ã–π\",...",
                "Line 374: \"effect_size\": \"–±–æ–ª—å—à–æ–π\",...",
                "Line 385: \"effect_size\": \"—É–º–µ—Ä–µ–Ω–Ω—ã–π\",...",
                "Line 397: \"effect_size\": \"–±–æ–ª—å—à–æ–π\",...",
                "Line 409: \"effect_size\": \"–±–æ–ª—å—à–æ–π\",...",
                "Line 415: def _load_gene_disease_associations(self) -> Dict[...",
                "Line 446: def parse_file(self, file_path: str) -> Tuple[Dict...",
                "Line 494: def _parse_header(self, file_handle) -> Dict[str, ...",
                "Line 544: def _parse_meta_line(self, line: str) -> Optional[...",
                "Line 553: meta_dict = {}...",
                "Line 571: meta_dict[current_key] = current_value.strip(' \"')...",
                "Line 583: meta_dict[current_key] = current_value.strip(' \"')...",
                "Line 585: return meta_dict...",
                "Line 615: info_dict = self._parse_info_field(info_field)...",
                "Line 626: sample_dict = {}...",
                "Line 629: sample_dict[key] = value...",
                "Line 630: sample_data[sample_name] = sample_dict...",
                "Line 640: info=info_dict,...",
                "Line 649: def _parse_info_field(self, info_field: str) -> Di...",
                "Line 721: \"\"\"–û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö\"\"\"...",
                "Line 729: patient_info: Optional[Dict[str, Any]] = None,...",
                "Line 730: clinical_context: str = \"\") -> GeneticAnalysisResu...",
                "Line 731: \"\"\"–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ VCF —Ñ–∞–π–ª–∞\"\"\"...",
                "Line 749: clinical_interpretations = self._get_clinical_inte...",
                "Line 760: classified_variants, clinical_interpretations, pat...",
                "Line 765: classified_variants, clinical_interpretations, pha...",
                "Line 770: classified_variants, clinical_interpretations...",
                "Line 774: icd10_codes = self._assign_icd10_codes(clinical_in...",
                "Line 784: 'patient_info': patient_info or {},...",
                "Line 785: 'clinical_context': clinical_context,...",
                "Line 797: clinical_interpretations=clinical_interpretations,...",
                "Line 810: print(f\"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. ID: {analysis_id}\")...",
                "Line 814: print(f\"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}\")...",
                "Line 831: clinical_interpretations=[],...",
                "Line 838: reproductive_risks=[],...",
                "Line 843: urgent_flags=[\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö\"...",
                "Line 849: def _classify_variants(self, variants: List[VCFVar...",
                "Line 866: clinical_var = self.database.pathogenic_variants[v...",
                "Line 867: if clinical_var.pathogenicity == VariantPathogenic...",
                "Line 869: elif clinical_var.pathogenicity == VariantPathogen...",
                "Line 888: population_freq = self._extract_population_frequen...",
                "Line 896: def _extract_population_frequency(self, variant: V...",
                "Line 913: def _get_clinical_interpretations(self, variants: ...",
                "Line 935: def _assess_genetic_risks(self, classified_variant...",
                "Line 936: clinical_interpretations: List[ClinicalVariant],...",
                "Line 937: patient_info: Optional[Dict[str, Any]]) -> Genetic...",
                "Line 952: for interp in clinical_interpretations:...",
                "Line 959: \"clinical_action\": interp.clinical_action...",
                "Line 976: reproductive_risks = []...",
                "Line 977: for interp in clinical_interpretations:...",
                "Line 979: reproductive_risks.append({...",
                "Line 986: reproductive_risks.append({...",
                "Line 994: affected_genes = [interp.gene for interp in clinic...",
                "Line 996: for gene in set(affected_genes):...",
                "Line 1003: clinical_interpretations, patient_info...",
                "Line 1011: reproductive_risks=reproductive_risks,...",
                "Line 1016: def _generate_lifestyle_recommendations(self, clin...",
                "Line 1017: patient_info: Optional[Dict[str, Any]]) -> List[st...",
                "Line 1021: diseases = [interp.disease.lower() for interp in c...",
                "Line 1048: def _generate_recommendations(self, classified_var...",
                "Line 1049: clinical_interpretations: List[ClinicalVariant],...",
                "Line 1064: for interp in clinical_interpretations:...",
                "Line 1066: recommendations.append(f\"–ì–µ–Ω {interp.gene}: {inter...",
                "Line 1099: def _determine_urgent_flags(self, classified_varia...",
                "Line 1100: clinical_interpretations: List[ClinicalVariant]) -...",
                "Line 1113: for interp in clinical_interpretations:...",
                "Line 1129: def _assign_icd10_codes(self, clinical_interpretat...",
                "Line 1144: for interp in clinical_interpretations:...",
                "Line 1152: def _calculate_confidence_score(self, classified_v...",
                "Line 1154: \"\"\"–†–∞—Å—á–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 1179: patient_info: Optional[Dict[str, Any]] = None,...",
                "Line 1187: report_parts.append(\"–û–¢–ß–ï–¢ –ü–û –ì–ï–ù–ï–¢–ò–ß–ï–°–ö–û–ú–£ –ê–ù–ê–õ–ò–ó...",
                "Line 1190: # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ...",
                "Line 1191: if patient_info:...",
                "Line 1192: report_parts.append(\"–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–ê–¶–ò–ï–ù–¢–ï:\")...",
                "Line 1193: report_parts.append(f\"  –§–ò–û: {patient_info.get('na...",
                "Line 1194: report_parts.append(f\"  –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {patient_in...",
                "Line 1195: report_parts.append(f\"  –ü–æ–ª: {patient_info.get('ge...",
                "Line 1196: report_parts.append(f\"  ID –ø–∞—Ü–∏–µ–Ω—Ç–∞: {patient_info...",
                "Line 1199: # –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 1200: report_parts.append(\"–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ê–ù–ê–õ–ò–ó–ï:\")...",
                "Line 1201: report_parts.append(f\"  ID –∞–Ω–∞–ª–∏–∑–∞: {analysis_resu...",
                "Line 1203: report_parts.append(f\"  –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: {anal...",
                "Line 1223: if analysis_result.clinical_interpretations:...",
                "Line 1227: for i, interp in enumerate(analysis_result.clinica...",
                "Line 1235: report_parts.append(f\"   –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è: {in...",
                "Line 1264: report_parts.append(f\"    –î–µ–π—Å—Ç–≤–∏–µ: {disease['clin...",
                "Line 1266: if risk.reproductive_risks:...",
                "Line 1268: for rep_risk in risk.reproductive_risks:...",
                "Line 1329: report_parts.append(\"‚Ä¢ –î–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Å–æ...",
                "Line 1341: \"\"\"–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 1345: json.dump(analysis_result.to_dict(), f, ensure_asc...",
                "Line 1362: # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–≤—è–∑–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∞–Ω–∞–ª–∏–∑...",
                "Line 1364: \"\"\"–ö–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ ...",
                "Line 1366: def __init__(self, medical_analyzer_instance=None)...",
                "Line 1368: self.medical_analyzer = medical_analyzer_instance...",
                "Line 1370: def analyze_genetic_data_for_medical_ai(self, vcf_...",
                "Line 1371: clinical_context: str = \"\",...",
                "Line 1372: patient_info: Optional[Dict[str, Any]] = None) -> ...",
                "Line 1373: \"\"\"–ê–Ω–∞–ª–∏–∑ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–µ–¥...",
                "Line 1376: # –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑...",
                "Line 1378: vcf_file_path, patient_info, clinical_context...",
                "Line 1381: # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 1382: medical_ai_format = {...",
                "Line 1391: \"clinical_findings\": {...",
                "Line 1398: \"clinical_significance\": interp.clinical_action...",
                "Line 1399: } for interp in genetic_result.clinical_interpreta...",
                "Line 1404: \"drugs_affected\": pg.drugs,...",
                "Line 1410: \"diagnosis\": {...",
                "Line 1411: \"primary_diagnosis\": self._generate_primary_geneti...",
                "Line 1417: \"urgent_actions\": genetic_result.urgent_flags,...",
                "Line 1426: \"reproductive_implications\": len(genetic_result.ri...",
                "Line 1432: if self.medical_analyzer:...",
                "Line 1433: ai_interpretation = self._get_ai_interpretation(ge...",
                "Line 1434: medical_ai_format[\"ai_interpretation\"] = ai_interp...",
                "Line 1436: return medical_ai_format...",
                "Line 1444: \"urgent_actions\": [\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞...",
                "Line 1452: def _generate_primary_genetic_diagnosis(self, gene...",
                "Line 1453: \"\"\"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞\"\"\"...",
                "Line 1456: diseases = [interp.disease for interp in genetic_r...",
                "Line 1481: if genetic_result.risk_assessment.reproductive_ris...",
                "Line 1490: clinical_context: str) -> str:...",
                "Line 1493: if not self.medical_analyzer:...",
                "Line 1498: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞...",
                "Line 1500: –ö–õ–ò–ù–ò–ß–ï–°–ö–ò–ô –ö–û–ù–¢–ï–ö–°–¢: {clinical_context}...",
                "Line 1509: for interp in genetic_result.clinical_interpretati...",
                "Line 1513: 2. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –≤ –≤–µ–¥–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞...",
                "Line 1521: # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –¥–ª—è –æ—Ç...",
                "Line 1524: \"model\": self.medical_analyzer.models[0],...",
                "Line 1531: self.medical_analyzer.base_url,...",
                "Line 1532: headers=self.medical_analyzer.headers,...",
                "Line 1540: return \"–ò–ò-–∞–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\"...",
                "Line 1543: return f\"–û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {str(e)}\"...",
                "Line 1560: #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tPATI...",
                "Line 1562: 7\t117230206\trs113993960\tCTT\tC\t95\tPASS\tDP=45;AF=1.0...",
                "Line 1582: \"\"\"–ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 1584: print(\"üß¨ –ü–†–ò–ú–ï–† –ê–ù–ê–õ–ò–ó–ê –ì–ï–ù–ï–¢–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–•\")...",
                "Line 1594: # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä...",
                "Line 1597: # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ...",
                "Line 1598: patient_info = {...",
                "Line 1602: \"patient_id\": \"P001\"...",
                "Line 1606: # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑...",
                "Line 1607: print(\"üîÑ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...\")...",
                "Line 1610: patient_info,...",
                "Line 1615: print(f\"\\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:\")...",
                "Line 1616: print(f\"ID –∞–Ω–∞–ª–∏–∑–∞: {result.analysis_id}\")...",
                "Line 1629: if result.clinical_interpretations:...",
                "Line 1631: for interp in result.clinical_interpretations:...",
                "Line 1634: print(f\"    –î–µ–π—Å—Ç–≤–∏–µ: {interp.clinical_action}\")...",
                "Line 1658: print(f\"\\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\")...",
                "Line 1665: print(f\"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}\")...",
                "Line 1685: 'ClinicalVariant',..."
              ]
            }
          },
          "medical_ai_analyzer.py": {
            "type": "file",
            "name": "medical_ai_analyzer.py",
            "path": "modules/medical_ai_analyzer.py",
            "size": 75511,
            "category": "python",
            "analysis": {
              "lines": 1589,
              "imports": [
                "import json",
                "import base64",
                "import io",
                "from PIL import Image",
                "import numpy as np",
                "from typing import Dict, List, Tuple, Optional, Any",
                "from dataclasses import dataclass",
                "from enum import Enum",
                "import datetime",
                "import requests",
                "from PIL import Image, ImageDraw",
                "import random",
                "import os"
              ],
              "classes": [
                "ImageType",
                "AnalysisResult",
                "EnhancedMedicalAIAnalyzer"
              ],
              "functions": [
                "__init__",
                "_init_specialized_prompts",
                "detect_image_type",
                "analyze_periodic_patterns",
                "analyze_bone_structures",
                "analyze_brain_structures",
                "analyze_ultrasound_patterns",
                "preprocess_image",
                "extract_metadata",
                "encode_image_optimized",
                "analyze_image",
                "_send_ai_request",
                "batch_analyze",
                "generate_report",
                "save_analysis_results",
                "load_analysis_results",
                "validate_api_connection",
                "create_analyzer",
                "analyze_single_image",
                "analyze_multiple_images",
                "example_usage",
                "create_test_images"
              ],
              "streamlit_pages": [],
              "ai_models": [
                "Line 4: –£–ª—É—á—à–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...",
                "Line 44: class EnhancedMedicalAIAnalyzer:...",
                "Line 49: self.base_url = \"https://openrouter.ai/api/v1/chat...",
                "Line 50: self.models = [...",
                "Line 51: \"anthropic/claude-3-5-sonnet-20241022\",...",
                "Line 52: \"anthropic/claude-3-5-sonnet\",...",
                "Line 53: \"anthropic/claude-3-sonnet-20240229\",...",
                "Line 59: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
                "Line 60: \"X-Title\": \"Enhanced Medical AI Assistant\"...",
                "Line 95: - –ü—Ä–∏–∑–Ω–∞–∫–∏ –∏—à–µ–º–∏–∏/–∏–Ω—Ñ–∞—Ä–∫—Ç–∞...",
                "Line 102: - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∞–∫—Ç–∏–∫–µ...",
                "Line 131: - –ö–æ—Å—Ç–Ω—ã–µ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏/–ø–µ—Ä–µ–ª–æ–º—ã...",
                "Line 148: –í—ã ‚Äî –Ω–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –î–µ—Ç–∞–ª—å–Ω–æ –ø—Ä...",
                "Line 152: - –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (T1/T2/FLAIR/DWI)...",
                "Line 160: - –ë–∞–∑–∞–ª—å–Ω—ã–µ –≥–∞–Ω–≥–ª–∏–∏...",
                "Line 186: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏–∏. –ü—Ä–æ–≤–µ–¥...",
                "Line 213: 5. –°–¢–ê–î–ò–†–û–í–ê–ù–ò–ï (–ø—Ä–∏ –æ–Ω–∫–æ–ª–æ–≥–∏–∏):...",
                "Line 265: - –ü–æ–ª–æ—Å—ã –∏ –ª–∏–Ω–∏–∏...",
                "Line 266: - –°—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–≥—Ä–µ—Å—Å–∏–∏...",
                "Line 289: –í—ã ‚Äî –ø–∞—Ç–æ–ª–æ–≥–æ–∞–Ω–∞—Ç–æ–º —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ –æ–Ω–∫–æ–º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 315: 5. –û–ù–ö–û–õ–û–ì–ò–ß–ï–°–ö–ò–ï –ö–†–ò–¢–ï–†–ò–ò:...",
                "Line 341: - –ê—Ä—Ç–µ—Ä–∏–∏ (–∫–∞–ª–∏–±—Ä, —Ä–µ—Ñ–ª–µ–∫—Å)...",
                "Line 355: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞–º–º–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π BI-RADS....",
                "Line 486: def analyze_brain_structures():...",
                "Line 503: # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å–∏–º–º–µ—Ç—Ä–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω—Ç—Ä–∞...",
                "Line 515: brain_score = (symmetry_score + min(center_std/50,...",
                "Line 516: return brain_score > 0.4, brain_score...",
                "Line 535: # –£–ó–ò —á–∞—Å—Ç–æ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã (—Ä–µ–≤–µ—Ä–±–µ...",
                "Line 542: has_brain, brain_score = analyze_brain_structures(...",
                "Line 568: if not is_color and has_brain and mean_intensity >...",
                "Line 569: scores[ImageType.MRI] = 0.75 + brain_score * 0.2...",
                "Line 746: # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞ (–±–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç...",
                "Line 748: img.thumbnail(max_size, Image.Resampling.LANCZOS)...",
                "Line 767: raise ValueError(\"image_array –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å numpy.nd...",
                "Line 770: raise ValueError(\"–ü—É—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\")...",
                "Line 830: \"consultation\": [\"–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤\"],...",
                "Line 831: \"treatment\": [\"—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª–µ—á–µ–Ω–∏—é\"]...",
                "Line 846: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò...",
                "Line 847: print(\"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò...\")...",
                "Line 848: ai_response = self._send_ai_request(full_prompt, p...",
                "Line 853: clean_response = ai_response.strip()...",
                "Line 865: print(f\"–û—Ç–≤–µ—Ç –ò–ò: {ai_response[:500]}...\")...",
                "Line 873: \"technical_notes\": \"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä...",
                "Line 917: clinical_interpretation=ai_response,...",
                "Line 944: def _send_ai_request(self, prompt: str, image_arra...",
                "Line 945: \"\"\"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ...",
                "Line 964: for i, model in enumerate(self.models):...",
                "Line 966: print(f\"–ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª—å {i+1}/{len(self.models)}: {...",
                "Line 969: \"model\": model,...",
                "Line 987: print(f\"–£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏: {model}\")...",
                "Line 990: print(f\"–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏: {model}\")...",
                "Line 993: print(f\"HTTP –æ—à–∏–±–∫–∞ {response.status_code} –¥–ª—è –º–æ–¥...",
                "Line 998: print(f\"–¢–∞–π–º–∞—É—Ç –¥–ª—è –º–æ–¥–µ–ª–∏: {model}\")...",
                "Line 1002: print(f\"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è –º–æ–¥–µ–ª–∏ {model}: {e}\"...",
                "Line 1006: print(f\"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –º–æ–¥–µ–ª–∏ {model}: {e}...",
                "Line 1015: \"artifacts\": [\"–æ—à–∏–±–∫–∞ –ò–ò-—Å–µ—Ä–≤–∏—Å–∞\"],...",
                "Line 1016: \"technical_notes\": f\"–í—Å–µ –º–æ–¥–µ–ª–∏ –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ—Å...",
                "Line 1026: \"primary_diagnosis\": \"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å - –æ—à–∏–±...",
                "Line 1049: print(f\"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ _send_ai_request: {e}...",
                "Line 1050: return '{\"error\": \"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞\"}...",
                "Line 1094: report_parts.append(\"–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú –ò–ò-...",
                "Line 1187: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 1190: report_parts.append(\"\\n–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\")...",
                "Line 1208: report_parts.append(\"  –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:\"...",
                "Line 1213: report_parts.append(\"  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª–µ—á–µ–Ω–∏—é:\")...",
                "Line 1257: report_parts.append(\"–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ò–ò-—Å–∏—Å—Ç–µ–º–æ–π E...",
                "Line 1258: report_parts.append(\"‚ö†Ô∏è –í–ê–ñ–ù–û: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ ...",
                "Line 1275: \"analyzer_version\": \"Enhanced Medical AI Analyzer ...",
                "Line 1336: \"model\": self.models[0],...",
                "Line 1354: # –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è...",
                "Line 1355: def create_analyzer(api_key: str) -> EnhancedMedic...",
                "Line 1357: analyzer = EnhancedMedicalAIAnalyzer(api_key)...",
                "Line 1367: def analyze_single_image(analyzer: EnhancedMedical...",
                "Line 1400: def analyze_multiple_images(analyzer: EnhancedMedi...",
                "Line 1453: # –°—Ä–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 1471: \"brain_mri.jpg\"...",
                "Line 1530: \"\"\"–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏\"...",
                "Line 1581: if __name__ == \"__main__\":...",
                "Line 1582: print(\"Enhanced Medical AI Analyzer v2.0\")..."
              ],
              "medical_terms": [
                "Line 4: –£–ª—É—á—à–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...",
                "Line 13: from typing import Dict, List, Tuple, Optional, An...",
                "Line 21: ECG = \"ecg\"...",
                "Line 22: XRAY = \"xray\"...",
                "Line 23: MRI = \"mri\"...",
                "Line 24: CT = \"ct\"...",
                "Line 33: \"\"\"–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"...",
                "Line 36: structured_findings: Dict[str, Any]...",
                "Line 37: clinical_interpretation: str...",
                "Line 42: metadata: Dict[str, Any]...",
                "Line 44: class EnhancedMedicalAIAnalyzer:...",
                "Line 45: \"\"\"–£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\"\"...",
                "Line 59: \"HTTP-Referer\": \"https://github.com/vasiliys961/me...",
                "Line 60: \"X-Title\": \"Enhanced Medical AI Assistant\"...",
                "Line 66: def _init_specialized_prompts(self) -> Dict[ImageT...",
                "Line 69: ImageType.ECG: \"\"\"...",
                "Line 70: –í—ã ‚Äî –≤–µ–¥—É—â–∏–π –∫–∞—Ä–¥–∏–æ–ª–æ–≥-—ç–ª–µ–∫—Ç—Ä–æ—Ñ–∏–∑–∏–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏...",
                "Line 72: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ê–ù–ê–õ–ò–ó–ê:...",
                "Line 100: - –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑...",
                "Line 108: ImageType.XRAY: \"\"\"...",
                "Line 109: –í—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ä–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥. –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑...",
                "Line 111: –ü–†–û–¢–û–ö–û–õ –ê–ù–ê–õ–ò–ó–ê:...",
                "Line 136: - –í–µ—Ä–æ—è—Ç–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã...",
                "Line 147: ImageType.MRI: \"\"\"...",
                "Line 148: –í—ã ‚Äî –Ω–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –î–µ—Ç–∞–ª—å–Ω–æ –ø—Ä...",
                "Line 150: –°–ò–°–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:...",
                "Line 185: ImageType.CT: \"\"\"...",
                "Line 186: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏–∏. –ü—Ä–æ–≤–µ–¥...",
                "Line 188: –ü–†–û–¢–û–ö–û–õ –ö–¢-–ê–ù–ê–õ–ò–ó–ê:...",
                "Line 223: –£–ó–ò –ü–†–û–¢–û–ö–û–õ:...",
                "Line 254: –í—ã ‚Äî –¥–µ—Ä–º–∞—Ç–æ–æ–Ω–∫–æ–ª–æ–≥. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –¥–µ—Ä–º–∞—Ç–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∏–π ...",
                "Line 256: –î–ï–†–ú–ê–¢–û–°–ö–û–ü–ò–Ø –ü–†–û–¢–û–ö–û–õ:...",
                "Line 289: –í—ã ‚Äî –ø–∞—Ç–æ–ª–æ–≥–æ–∞–Ω–∞—Ç–æ–º —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ –æ–Ω–∫–æ–º–æ—Ä—Ñ–æ–ª–æ–≥–∏–∏...",
                "Line 291: –ì–ò–°–¢–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:...",
                "Line 327: –û–§–¢–ê–õ–¨–ú–û–°–ö–û–ü–ò–Ø –ü–†–û–¢–û–ö–û–õ:...",
                "Line 355: –í—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞–º–º–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π BI-RADS....",
                "Line 357: –ú–ê–ú–ú–û–ì–†–ê–§–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:...",
                "Line 389: def detect_image_type(self, image_array: np.ndarra...",
                "Line 392: aspect_ratio = width / height...",
                "Line 394: # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ grayscale –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 410: # –ê–Ω–∞–ª–∏–∑ –∫—Ä–∞–µ–≤ –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã...",
                "Line 416: # –ê–Ω–∞–ª–∏–∑ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã...",
                "Line 424: \"\"\"–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ (–¥–ª—è –≠–ö–ì)\"\"\"...",
                "Line 460: def analyze_bone_structures():...",
                "Line 461: \"\"\"–ê–Ω–∞–ª–∏–∑ –∫–æ—Å—Ç–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä (–¥–ª—è —Ä–µ–Ω—Ç–≥–µ–Ω–∞)\"\"\"...",
                "Line 467: # –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏ - –∫–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω—ã —Å–∏–ª—å–Ω–æ –∫–æ–Ω—Ç—Ä...",
                "Line 480: # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏ - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ...",
                "Line 486: def analyze_brain_structures():...",
                "Line 487: \"\"\"–ê–Ω–∞–ª–∏–∑ –º–æ–∑–≥–æ–≤—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä (–¥–ª—è –ú–†–¢/–ö–¢)\"\"\"...",
                "Line 491: # –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏...",
                "Line 503: # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å–∏–º–º–µ—Ç—Ä–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω—Ç—Ä–∞...",
                "Line 521: \"\"\"–ê–Ω–∞–ª–∏–∑ –£–ó–ò –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤\"\"\"...",
                "Line 539: # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑—ã...",
                "Line 541: has_bones, bone_score = analyze_bone_structures()...",
                "Line 542: has_brain, brain_score = analyze_brain_structures(...",
                "Line 549: if (aspect_ratio > 1.5 and not is_color and has_pe...",
                "Line 551: scores[ImageType.ECG] = 0.85 + periodic_score * 0....",
                "Line 552: elif aspect_ratio > 2.0 and not is_color and edge_...",
                "Line 553: scores[ImageType.ECG] = 0.6...",
                "Line 561: if aspect_ratio < 2.0:  # —Ä–µ–Ω—Ç–≥–µ–Ω –æ–±—ã—á–Ω–æ –Ω–µ –æ—á–µ–Ω—å ...",
                "Line 563: scores[ImageType.XRAY] = min(base_score, 0.95)...",
                "Line 565: scores[ImageType.XRAY] = 0.5...",
                "Line 569: scores[ImageType.MRI] = 0.75 + brain_score * 0.2...",
                "Line 570: elif not is_color and aspect_ratio < 1.5 and mean_...",
                "Line 571: scores[ImageType.CT] = 0.6...",
                "Line 589: if aspect_ratio > 0.8 and aspect_ratio < 1.3:...",
                "Line 609: if aspect_ratio > 2.0:...",
                "Line 610: return ImageType.ECG, 0.3...",
                "Line 612: return ImageType.XRAY, 0.4...",
                "Line 623: if image_type == ImageType.ECG:...",
                "Line 635: elif image_type == ImageType.XRAY:...",
                "Line 645: elif image_type in [ImageType.MRI, ImageType.CT]:...",
                "Line 675: def extract_metadata(self, image_array: np.ndarray...",
                "Line 679: \"image_type_detected\": image_type.value,...",
                "Line 686: \"aspect_ratio\": float(image_array.shape[1] / image...",
                "Line 690: if image_type == ImageType.ECG:...",
                "Line 695: \"detection_confidence\": \"–≤—ã—Å–æ–∫–∞—è\" if metadata[\"asp...",
                "Line 698: elif image_type == ImageType.XRAY:...",
                "Line 709: elif image_type in [ImageType.MRI, ImageType.CT]:...",
                "Line 711: \"estimated_sequence\": \"T1/T2 (–∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ)\" if...",
                "Line 746: # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞ (–±–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç...",
                "Line 762: \"\"\"–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"...",
                "Line 774: image_type, confidence = self.detect_image_type(im...",
                "Line 784: metadata = self.extract_metadata(processed_image, ...",
                "Line 788: \"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å...",
                "Line 794: json_instruction = \"\"\"...",
                "Line 801: \"artifacts\": [\"—Å–ø–∏—Å–æ–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤\"],...",
                "Line 806: \"clinical_findings\": {...",
                "Line 807: \"normal_structures\": [\"—Å–ø–∏—Å–æ–∫ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä\"...",
                "Line 815: \"characteristics\": \"–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\"...",
                "Line 820: \"diagnosis\": {...",
                "Line 821: \"primary_diagnosis\": \"–æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑\",...",
                "Line 822: \"differential_diagnosis\": [\"—Å–ø–∏—Å–æ–∫ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã...",
                "Line 827: \"urgent_actions\": [\"—ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\"],...",
                "Line 835: \"risk_factors\": [\"–≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞\"],...",
                "Line 844: full_prompt = base_prompt + json_instruction...",
                "Line 872: \"artifacts\": [\"–æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞\"],...",
                "Line 877: \"clinical_findings\": {...",
                "Line 878: \"normal_structures\": [],...",
                "Line 881: \"finding\": \"–ê–Ω–∞–ª–∏–∑ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω\",...",
                "Line 884: \"description\": \"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
                "Line 886: \"characteristics\": \"–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ\"...",
                "Line 891: \"diagnosis\": {...",
                "Line 892: \"primary_diagnosis\": \"–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞...",
                "Line 893: \"differential_diagnosis\": [],...",
                "Line 898: \"urgent_actions\": [\"–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∞–Ω–∞–ª–∏–∑\"],...",
                "Line 906: \"risk_factors\": [],...",
                "Line 916: structured_findings=response_data,...",
                "Line 917: clinical_interpretation=ai_response,...",
                "Line 919: urgent_flags=response_data.get(\"recommendations\", ...",
                "Line 920: icd10_codes=response_data.get(\"diagnosis\", {}).get...",
                "Line 925: print(f\"–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ. –¢–∏–ø: {image_type....",
                "Line 932: image_type=image_type or ImageType.XRAY,...",
                "Line 934: structured_findings={\"error\": str(e)},...",
                "Line 935: clinical_interpretation=f\"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏...",
                "Line 944: def _send_ai_request(self, prompt: str, image_arra...",
                "Line 1015: \"artifacts\": [\"–æ—à–∏–±–∫–∞ –ò–ò-—Å–µ—Ä–≤–∏—Å–∞\"],...",
                "Line 1020: \"clinical_findings\": {...",
                "Line 1021: \"normal_structures\": [],...",
                "Line 1025: \"diagnosis\": {...",
                "Line 1026: \"primary_diagnosis\": \"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å - –æ—à–∏–±...",
                "Line 1027: \"differential_diagnosis\": [],...",
                "Line 1032: \"urgent_actions\": [\"–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ...",
                "Line 1033: \"follow_up\": [\"–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–æ–∑–∂–µ\"],...",
                "Line 1040: \"risk_factors\": [],...",
                "Line 1050: return '{\"error\": \"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞\"}...",
                "Line 1054: \"\"\"–ü–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ...",
                "Line 1056: print(f\"–ù–∞—á–∏–Ω–∞–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ {len(images)} –∏–∑–æ...",
                "Line 1060: print(f\"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {i+1}/{len(images)...",
                "Line 1067: print(f\"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {i+1} –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ...",
                "Line 1070: print(f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {i+1}: {e}\")...",
                "Line 1073: image_type=image_type or ImageType.XRAY,...",
                "Line 1075: structured_findings={\"error\": str(e)},...",
                "Line 1076: clinical_interpretation=f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω...",
                "Line 1078: urgent_flags=[f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {i+1}\"]...",
                "Line 1085: print(f\"–ü–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –£—Å–ø–µ—à–Ω–æ: {len([r...",
                "Line 1088: def generate_report(self, results: List[AnalysisRe...",
                "Line 1094: report_parts.append(\"–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú –ò–ò-...",
                "Line 1097: # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ...",
                "Line 1098: if patient_data:...",
                "Line 1099: report_parts.append(\"–î–ê–ù–ù–´–ï –ü–ê–¶–ò–ï–ù–¢–ê:\")...",
                "Line 1100: report_parts.append(f\"–§–ò–û: {patient_data.get('name...",
                "Line 1101: report_parts.append(f\"–í–æ–∑—Ä–∞—Å—Ç: {patient_data.get('...",
                "Line 1102: report_parts.append(f\"–ü–æ–ª: {patient_data.get('sex'...",
                "Line 1103: report_parts.append(f\"ID –ø–∞—Ü–∏–µ–Ω—Ç–∞: {patient_data.g...",
                "Line 1112: report_parts.append(f\"–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏...",
                "Line 1113: report_parts.append(f\"–£—Å–ø–µ—à–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤: {successf...",
                "Line 1117: # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
                "Line 1121: report_parts.append(f\"–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: {result.times...",
                "Line 1122: report_parts.append(f\"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: {resu...",
                "Line 1124: findings = result.structured_findings...",
                "Line 1134: if tech.get('artifacts'):...",
                "Line 1136: for artifact in tech['artifacts']:...",
                "Line 1137: report_parts.append(f\"    ‚Ä¢ {artifact}\")...",
                "Line 1140: if \"clinical_findings\" in findings:...",
                "Line 1141: clinical = findings[\"clinical_findings\"]...",
                "Line 1146: if clinical.get(\"normal_structures\"):...",
                "Line 1148: for structure in clinical[\"normal_structures\"]:...",
                "Line 1149: report_parts.append(f\"    ‚Ä¢ {structure}\")...",
                "Line 1152: if clinical.get(\"pathological_findings\"):...",
                "Line 1154: for finding in clinical[\"pathological_findings\"]:...",
                "Line 1161: if finding.get('characteristics'):...",
                "Line 1162: report_parts.append(f\"      –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {findi...",
                "Line 1168: if clinical.get(\"measurements\") and clinical[\"meas...",
                "Line 1169: report_parts.append(f\"  –ö–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è: {clini...",
                "Line 1171: # –î–∏–∞–≥–Ω–æ–∑...",
                "Line 1172: if \"diagnosis\" in findings:...",
                "Line 1173: diag = findings[\"diagnosis\"]...",
                "Line 1175: report_parts.append(f\"  –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑: {diag.ge...",
                "Line 1176: report_parts.append(f\"  –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –¥–∏–∞–≥–Ω–æ–∑–µ: {d...",
                "Line 1178: if diag.get(\"differential_diagnosis\"):...",
                "Line 1180: for diff_diag in diag[\"differential_diagnosis\"]:...",
                "Line 1192: if rec.get(\"urgent_actions\"):...",
                "Line 1194: for action in rec[\"urgent_actions\"]:...",
                "Line 1195: report_parts.append(f\"    ‚Ä¢ {action}\")...",
                "Line 1224: if risk.get(\"risk_factors\"):...",
                "Line 1226: for factor in risk[\"risk_factors\"]:...",
                "Line 1227: report_parts.append(f\"    ‚Ä¢ {factor}\")...",
                "Line 1256: report_parts.append(f\"\\n–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: {dat...",
                "Line 1257: report_parts.append(\"–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –ò–ò-—Å–∏—Å—Ç–µ–º–æ–π E...",
                "Line 1258: report_parts.append(\"‚ö†Ô∏è –í–ê–ñ–ù–û: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ ...",
                "Line 1259: report_parts.append(\"–î–∞–Ω–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç —Å–ª...",
                "Line 1266: \"\"\"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –≤ JSON —Ñ–∞–π–ª\"\"\"...",
                "Line 1269: filename = f\"medical_analysis_{timestamp}.json\"...",
                "Line 1275: \"analyzer_version\": \"Enhanced Medical AI Analyzer ...",
                "Line 1286: \"structured_findings\": result.structured_findings,...",
                "Line 1304: \"\"\"–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 1314: structured_findings=result_data[\"structured_findin...",
                "Line 1315: clinical_interpretation=json.dumps(result_data[\"st...",
                "Line 1331: def validate_api_connection(self) -> bool:...",
                "Line 1355: def create_analyzer(api_key: str) -> EnhancedMedic...",
                "Line 1356: \"\"\"–°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞\"\"\"...",
                "Line 1357: analyzer = EnhancedMedicalAIAnalyzer(api_key)...",
                "Line 1360: if analyzer.validate_api_connection():...",
                "Line 1367: def analyze_single_image(analyzer: EnhancedMedical...",
                "Line 1371: \"\"\"–ê–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞\"\"\"...",
                "Line 1380: # –ê–Ω–∞–ª–∏–∑...",
                "Line 1386: print(f\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {i...",
                "Line 1389: image_type=image_type or ImageType.XRAY,...",
                "Line 1391: structured_findings={\"error\": str(e)},...",
                "Line 1392: clinical_interpretation=f\"–û—à–∏–±–∫–∞: {str(e)}\",...",
                "Line 1400: def analyze_multiple_images(analyzer: EnhancedMedi...",
                "Line 1404: \"\"\"–ê–Ω–∞–ª–∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\"\"\"...",
                "Line 1424: \"\"\"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞\"\"\"...",
                "Line 1430: # –ü—Ä–∏–º–µ—Ä 1: –ê–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
                "Line 1432: print(\"–ü–†–ò–ú–ï–† 1: –ê–Ω–∞–ª–∏–∑ —Ä–µ–Ω—Ç–≥–µ–Ω–æ–≥—Ä–∞–º–º—ã\")...",
                "Line 1437: image_path = \"chest_xray.jpg\"...",
                "Line 1441: ImageType.XRAY,...",
                "Line 1442: \"–ü–∞—Ü–∏–µ–Ω—Ç 45 –ª–µ—Ç, –∂–∞–ª–æ–±—ã –Ω–∞ –∫–∞—à–µ–ª—å –∏ –æ–¥—ã—à–∫—É\"...",
                "Line 1449: if result.structured_findings.get(\"diagnosis\"):...",
                "Line 1450: diagnosis = result.structured_findings[\"diagnosis\"...",
                "Line 1451: print(f\"–î–∏–∞–≥–Ω–æ–∑: {diagnosis.get('primary_diagnosis...",
                "Line 1462: # –ü—Ä–∏–º–µ—Ä 2: –ü–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑...",
                "Line 1464: print(\"–ü–†–ò–ú–ï–† 2: –ü–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑\")...",
                "Line 1469: \"ecg_sample.jpg\",...",
                "Line 1470: \"chest_xray.jpg\",...",
                "Line 1471: \"brain_mri.jpg\"...",
                "Line 1475: ImageType.ECG,...",
                "Line 1476: ImageType.XRAY,...",
                "Line 1477: ImageType.MRI...",
                "Line 1485: \"–ü–ª–∞–Ω–æ–≤–æ–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞\"...",
                "Line 1489: patient_data = {...",
                "Line 1493: \"patient_id\": \"P001234\"...",
                "Line 1496: report = analyzer.generate_report(results, patient...",
                "Line 1505: print(f\"–û—à–∏–±–∫–∞ –≤ –ø–∞–∫–µ—Ç–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ: {e}\")...",
                "Line 1514: image = Image.open(\"unknown_medical_image.jpg\")...",
                "Line 1518: detected_type, confidence = analyzer.detect_image_...",
                "Line 1519: print(f\"–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø: {detected_type.value}\")...",
                "Line 1522: # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–∏–ø–æ–º...",
                "Line 1524: print(f\"–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ª—É—á–µ–Ω —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é: ...",
                "Line 1541: ecg_img = Image.new('L', (800, 200), color=240)...",
                "Line 1542: draw = ImageDraw.Draw(ecg_img)...",
                "Line 1552: ecg_img.save(\"test_images/test_ecg.jpg\")...",
                "Line 1555: xray_img = Image.new('L', (400, 400), color=50)...",
                "Line 1556: draw = ImageDraw.Draw(xray_img)...",
                "Line 1560: draw.rectangle([50, 50+i*60, 350, 55+i*60], fill=2...",
                "Line 1561: draw.rectangle([190, 50, 210, 350], fill=220)  # –ø...",
                "Line 1563: xray_img.save(\"test_images/test_xray.jpg\")...",
                "Line 1582: print(\"Enhanced Medical AI Analyzer v2.0\")..."
              ]
            }
          },
          "streamlit_enhanced_pages.py": {
            "type": "file",
            "name": "streamlit_enhanced_pages.py",
            "path": "modules/streamlit_enhanced_pages.py",
            "size": 41120,
            "category": "python",
            "analysis": {
              "lines": 832,
              "imports": [
                "import streamlit as st",
                "import numpy as np",
                "from PIL import Image",
                "import pandas as pd",
                "import json",
                "import plotly.graph_objects as go",
                "import plotly.express as px",
                "from typing import Dict, List, Optional",
                "import io",
                "import base64",
                "from .medical_ai_analyzer import EnhancedMedicalAIAnalyzer, ImageType, AnalysisResult"
              ],
              "classes": [],
              "functions": [
                "show_enhanced_analysis_page",
                "show_analysis_summary",
                "show_detailed_analysis_result",
                "show_comparative_analysis_page",
                "show_ai_training_page",
                "show_medical_protocols_page",
                "integrate_with_main_app"
              ],
              "streamlit_pages": [
                "Line 22: st.header(\"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–ê–Ω–∞–ª–∏–∑\")...",
                "Line 149: st.subheader(\"üìã –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ—Ç—á–µ—Ç\")...",
                "Line 164: st.subheader(\"üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞\")...",
                "Line 249: st.subheader(\"üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞\")...",
                "Line 268: st.subheader(\"üè• –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ö–æ–¥–∫–∏\")...",
                "Line 294: st.subheader(\"üéØ –î–∏–∞–≥–Ω–æ–∑\")...",
                "Line 312: st.subheader(\"üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\")...",
                "Line 335: st.subheader(\"‚ö° –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞\")...",
                "Line 352: st.subheader(\"üîç –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\")...",
                "Line 363: st.header(\"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\")...",
                "Line 394: st.subheader(\"üì∏ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä\")...",
                "Line 478: st.subheader(\"üñºÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞\")...",
                "Line 506: st.subheader(\"üìã –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞\")...",
                "Line 527: st.subheader(\"üìà –ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏\")...",
                "Line 562: st.subheader(\"ü§ñ –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∞–Ω...",
                "Line 647: st.header(\"üéì –û–±—É—á–µ–Ω–∏–µ –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –ò–ò\")...",
                "Line 672: st.subheader(\"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\"...",
                "Line 686: st.header(\"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã\")...",
                "Line 778: st.subheader(\"‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª\")...",
                "Line 816: st.set_page_config(page_title=\"Enhanced Medical AI..."
              ],
              "ai_models": [
                "Line 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å Streamlit...",
                "Line 17: from .medical_ai_analyzer import EnhancedMedicalAI...",
                "Line 21: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 22: st.header(\"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–ê–Ω–∞–ª–∏–∑\")...",
                "Line 27: st.session_state.enhanced_analyzer = EnhancedMedic...",
                "Line 143: show_detailed_analysis_result(result, show_metadat...",
                "Line 157: mime=\"text/plain\"...",
                "Line 200: st.plotly_chart(fig_pie, use_container_width=True)...",
                "Line 219: st.plotly_chart(fig_bar, use_container_width=True)...",
                "Line 222: def show_detailed_analysis_result(result: Analysis...",
                "Line 281: with st.container():...",
                "Line 310: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
                "Line 312: st.subheader(\"üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\")...",
                "Line 358: st.dataframe(metadata_df, use_container_width=True...",
                "Line 370: [\"–í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞\", \"–†–∞–∑–Ω—ã–µ –ø—Ä–æ–µ–∫—Ü–∏–∏\", \"–î–æ/–ø–æ—Å–ª...",
                "Line 401: st.image(image, caption=uploaded_file.name, use_co...",
                "Line 411: st.session_state.enhanced_analyzer = EnhancedMedic...",
                "Line 487: st.image(image_array, caption=result.filename, use...",
                "Line 523: st.dataframe(comparison_df, use_container_width=Tr...",
                "Line 550: st.plotly_chart(fig, use_container_width=True)...",
                "Line 561: # –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é...",
                "Line 562: st.subheader(\"ü§ñ –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∞–Ω...",
                "Line 603: 4. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:...",
                "Line 616: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 617: comparative_analysis = analyzer._send_ai_request(...",
                "Line 630: mime=\"text/plain\"...",
                "Line 634: st.error(f\"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 645: def show_ai_training_page():...",
                "Line 646: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ –ò–ò\"\"\"...",
                "Line 647: st.header(\"üéì –û–±—É—á–µ–Ω–∏–µ –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –ò–ò\")...",
                "Line 663: - –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò...",
                "Line 688: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤...",
                "Line 694: \"–ù–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥–∏—è (–ú–†–¢/–ö–¢)\",...",
                "Line 706: \"–æ–ø–∏—Å–∞–Ω–∏–µ\": \"–ü—Ä–æ—Ç–æ–∫–æ–ª –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω...",
                "Line 731: \"–æ–ø–∏—Å–∞–Ω–∏–µ\": \"–†–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø–Ω–µ–≤–º–æ–Ω–∏–∏...",
                "Line 771: st.markdown(\"**–ö–ª—é—á–µ–≤—ã–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:*...",
                "Line 783: custom_criteria = st.text_area(\"–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä...",
                "Line 795: def integrate_with_main_app():...",
                "Line 796: \"\"\"–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º Streamlit –ø—Ä–∏...",
                "Line 799: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\",...",
                "Line 801: \"üéì –û–±—É—á–µ–Ω–∏–µ –ò–ò\",...",
                "Line 806: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\": show_enhanced_analysis_...",
                "Line 808: \"üéì –û–±—É—á–µ–Ω–∏–µ –ò–ò\": show_ai_training_page,...",
                "Line 815: if __name__ == \"__main__\":...",
                "Line 816: st.set_page_config(page_title=\"Enhanced Medical AI...",
                "Line 821: \"–û–±—É—á–µ–Ω–∏–µ –ò–ò\",...",
                "Line 829: elif test_page == \"–û–±—É—á–µ–Ω–∏–µ –ò–ò\":...",
                "Line 830: show_ai_training_page()..."
              ],
              "medical_terms": [
                "Line 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å Streamlit...",
                "Line 12: import plotly.graph_objects as go...",
                "Line 14: from typing import Dict, List, Optional...",
                "Line 17: from .medical_ai_analyzer import EnhancedMedicalAI...",
                "Line 21: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 22: st.header(\"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–ê–Ω–∞–ª–∏–∑\")...",
                "Line 24: # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...",
                "Line 27: st.session_state.enhanced_analyzer = EnhancedMedic...",
                "Line 31: # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 35: auto_detect = st.checkbox(\"–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞\", ...",
                "Line 36: if not auto_detect:...",
                "Line 37: selected_type = st.selectbox(...",
                "Line 41: 'ecg': 'üìà –≠–ö–ì',...",
                "Line 42: 'xray': 'ü©ª –†–µ–Ω—Ç–≥–µ–Ω',...",
                "Line 43: 'mri': 'üß† –ú–†–¢',...",
                "Line 44: 'ct': 'üîç –ö–¢',...",
                "Line 79: placeholder=\"–í–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–º–Ω–µ–∑, –∂–∞–ª–æ–±—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞, –ø—Ä–µ...",
                "Line 82: if uploaded_files and st.button(\"üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—à–∏...",
                "Line 98: if auto_detect:...",
                "Line 101: image_type = ImageType(selected_type)...",
                "Line 116: status_text.text(f\"–ê–Ω–∞–ª–∏–∑ {filename}...\")...",
                "Line 129: st.error(f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ {filename}: {e}\")...",
                "Line 136: st.success(f\"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂...",
                "Line 156: file_name=f\"medical_report_{len(results)}_images.t...",
                "Line 162: \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 164: st.subheader(\"üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞\")...",
                "Line 215: title=\"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º\"...",
                "Line 223: \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 227: with st.expander(f\"üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑: {filename}\"...",
                "Line 244: if result.structured_findings:...",
                "Line 245: findings = result.structured_findings...",
                "Line 260: artifacts = tech.get(\"artifacts\", [])...",
                "Line 261: if artifacts:...",
                "Line 262: st.warning(f\"–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: {', '.join(artifacts)}\")...",
                "Line 267: if \"clinical_findings\" in findings:...",
                "Line 269: clinical = findings[\"clinical_findings\"]...",
                "Line 272: normal = clinical.get(\"normal_structures\", [])...",
                "Line 277: pathological = clinical.get(\"pathological_findings...",
                "Line 292: # –î–∏–∞–≥–Ω–æ–∑...",
                "Line 293: if \"diagnosis\" in findings:...",
                "Line 294: st.subheader(\"üéØ –î–∏–∞–≥–Ω–æ–∑\")...",
                "Line 295: diagnosis = findings[\"diagnosis\"]...",
                "Line 297: primary = diagnosis.get(\"primary_diagnosis\", \"–ù–µ –æ...",
                "Line 298: st.markdown(f\"**–û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑:** {primary}\")...",
                "Line 300: differential = diagnosis.get(\"differential_diagnos...",
                "Line 306: icd10 = diagnosis.get(\"icd10_codes\", [])...",
                "Line 315: urgent = recommendations.get(\"urgent_actions\", [])...",
                "Line 318: for action in urgent:...",
                "Line 319: st.markdown(f\"‚Ä¢ {action}\")...",
                "Line 342: risk_factors = risk.get(\"risk_factors\", [])...",
                "Line 343: if risk_factors:...",
                "Line 344: st.warning(f\"**–§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞:** {', '.join(risk_fa...",
                "Line 362: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
                "Line 363: st.header(\"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\")...",
                "Line 368: comparison_type = st.selectbox(...",
                "Line 370: [\"–í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞\", \"–†–∞–∑–Ω—ã–µ –ø—Ä–æ–µ–∫—Ü–∏–∏\", \"–î–æ/–ø–æ—Å–ª...",
                "Line 377: help=\"–í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –æ–¥...",
                "Line 406: if st.button(\"üîÑ –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\"):...",
                "Line 408: # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...",
                "Line 411: st.session_state.enhanced_analyzer = EnhancedMedic...",
                "Line 415: # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
                "Line 418: detected_types = []...",
                "Line 424: status_text.text(f\"–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {i+1}/{len(u...",
                "Line 437: detected_type, type_confidence = analyzer.detect_i...",
                "Line 438: detected_types.append((detected_type, type_confide...",
                "Line 441: st.write(f\"üîç {uploaded_file.name}: {detected_type....",
                "Line 443: # –ê–Ω–∞–ª–∏–∑ —Å —É—á–µ—Ç–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫...",
                "Line 446: analysis_type = detected_types[0][0]...",
                "Line 448: analysis_type = detected_type...",
                "Line 450: # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑...",
                "Line 454: additional_context=f\"–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ({compar...",
                "Line 457: result.detected_type = detected_type...",
                "Line 469: st.success(f\"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂...",
                "Line 472: unique_types = list(set([r.detected_type.value for...",
                "Line 477: # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 478: st.subheader(\"üñºÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞\")...",
                "Line 489: # –ú–µ—Ç—Ä–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 494: 'ecg': 'üìà', 'xray': 'ü©ª', 'mri': 'üß†', 'ct': 'üîç',...",
                "Line 498: emoji = type_emoji.get(result.detected_type.value,...",
                "Line 499: st.caption(f\"{emoji} {result.detected_type.value} ...",
                "Line 510: findings = result.structured_findings...",
                "Line 514: \"–¢–∏–ø\": result.detected_type.value,...",
                "Line 516: \"–û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑\": findings.get(\"diagnosis\", {})....",
                "Line 519: \"–ü–∞—Ç–æ–ª–æ–≥–∏—è\": \"–î–∞\" if findings.get(\"clinical_findin...",
                "Line 525: # –ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)...",
                "Line 527: st.subheader(\"üìà –ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏\")...",
                "Line 537: name='–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞',...",
                "Line 538: line=dict(color='blue', width=3),...",
                "Line 539: marker=dict(size=8)...",
                "Line 543: title=\"–î–∏–Ω–∞–º–∏–∫–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞\",...",
                "Line 546: yaxis=dict(range=[0, 1]),...",
                "Line 552: # –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –¥–∏–∞–≥–Ω–æ–∑–∞—Ö...",
                "Line 553: diagnoses = [r.structured_findings.get(\"diagnosis\"...",
                "Line 557: st.success(\"‚úÖ –î–∏–∞–≥–Ω–æ–∑ —Å—Ç–∞–±–∏–ª–µ–Ω –≤–æ –≤—Å–µ—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏...",
                "Line 559: st.warning(f\"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–∏–∞–≥–Ω–æ–∑–∞—Ö (...",
                "Line 562: st.subheader(\"ü§ñ –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∞–Ω...",
                "Line 568: # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 570: –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ {len(resu...",
                "Line 573: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:...",
                "Line 579: - –¢–∏–ø: {result.detected_type.value}...",
                "Line 580: - –î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: {result.confidence:.1%}...",
                "Line 581: - –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Ö–æ–¥–∫–∏: {json.dumps(result.structured_...",
                "Line 599: - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∏–∞–≥–Ω–æ–∑–∞...",
                "Line 606: - –¢–∞–∫—Ç–∏–∫–∞ –≤–µ–¥–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞...",
                "Line 616: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 634: st.error(f\"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
                "Line 639: st.warning(\"‚ö†Ô∏è –î–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏...",
                "Line 642: st.info(\"üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å—Ä–∞–≤–Ω–∏...",
                "Line 664: - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤...",
                "Line 681: st.info(\"–ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –ø—É—Å—Ç–∞\")...",
                "Line 684: def show_medical_protocols_page():...",
                "Line 685: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤\"\"\"...",
                "Line 686: st.header(\"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã\")...",
                "Line 688: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤...",
                "Line 689: protocol_category = st.selectbox(...",
                "Line 702: # –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã...",
                "Line 703: protocols = {...",
                "Line 705: \"–ê–Ω–∞–ª–∏–∑ –≠–ö–ì –ø—Ä–∏ –û–ö–°\": {...",
                "Line 706: \"–æ–ø–∏—Å–∞–Ω–∏–µ\": \"–ü—Ä–æ—Ç–æ–∫–æ–ª –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω...",
                "Line 755: if protocol_category in protocols:...",
                "Line 756: selected_protocols = protocols[protocol_category]...",
                "Line 758: for protocol_name, protocol_data in selected_proto...",
                "Line 759: with st.expander(f\"üìã {protocol_name}\", expanded=Fa...",
                "Line 761: st.markdown(f\"**–û–ø–∏—Å–∞–Ω–∏–µ:** {protocol_data['–æ–ø–∏—Å–∞–Ω...",
                "Line 767: }.get(protocol_data['—Å—Ä–æ—á–Ω–æ—Å—Ç—å'], \"gray\")...",
                "Line 769: st.markdown(f\"**–°—Ä–æ—á–Ω–æ—Å—Ç—å:** :{urgency_color}[{pro...",
                "Line 772: for point in protocol_data['–∫–ª—é—á–µ–≤—ã–µ_—Ç–æ—á–∫–∏']:...",
                "Line 775: st.markdown(f\"**–ö–æ–¥—ã –ú–ö–ë-10:** {', '.join(protocol...",
                "Line 777: # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã...",
                "Line 778: st.subheader(\"‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª\")...",
                "Line 780: with st.form(\"custom_protocol\"):...",
                "Line 781: custom_name = st.text_input(\"–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞\")...",
                "Line 785: custom_urgency = st.selectbox(\"–£—Ä–æ–≤–µ–Ω—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏\",...",
                "Line 787: if st.form_submit_button(\"üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª\"):...",
                "Line 789: st.success(f\"‚úÖ –ü—Ä–æ—Ç–æ–∫–æ–ª '{custom_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\"...",
                "Line 799: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\",...",
                "Line 800: \"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
                "Line 802: \"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\"...",
                "Line 805: page_functions = {...",
                "Line 806: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\": show_enhanced_analysis_...",
                "Line 807: \"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\": show_comparative_analysi...",
                "Line 809: \"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\": show_medical_protocols_...",
                "Line 812: return enhanced_pages, page_functions...",
                "Line 816: st.set_page_config(page_title=\"Enhanced Medical AI...",
                "Line 818: test_page = st.sidebar.selectbox(\"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—É...",
                "Line 819: \"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
                "Line 820: \"–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
                "Line 822: \"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\"...",
                "Line 825: if test_page == \"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑\":...",
                "Line 827: elif test_page == \"–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\":...",
                "Line 831: elif test_page == \"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\":...",
                "Line 832: show_medical_protocols_page()..."
              ]
            }
          }
        },
        "stats": {
          "total_files": 9,
          "total_dirs": 1,
          "python_files": 8,
          "total_lines": 6812,
          "categories": {
            "config": 1,
            "python": 8
          }
        }
      },
      "project_analysis.json": {
        "type": "file",
        "name": "project_analysis.json",
        "path": "project_analysis.json",
        "size": 150025,
        "category": "config"
      },
      "python project_tree_analyzer.py": {
        "type": "file",
        "name": "python project_tree_analyzer.py",
        "path": "python project_tree_analyzer.py",
        "size": 17782,
        "category": "python",
        "analysis": {
          "lines": 400,
          "imports": [
            "import os",
            "import sys",
            "from pathlib import Path",
            "from typing import Dict, List, Tuple",
            "import json"
          ],
          "classes": [
            "ProjectTreeAnalyzer"
          ],
          "functions": [
            "__init__",
            "get_file_category",
            "analyze_python_file",
            "scan_directory",
            "print_tree",
            "generate_summary",
            "_analyze_key_files",
            "save_analysis",
            "main"
          ],
          "streamlit_pages": [
            "Line 92: elif 'st.' in line and any(x in line for x in ['he..."
          ],
          "ai_models": [
            "Line 4: –°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã, –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫...",
            "Line 26: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 55: 'ai_models': [],...",
            "Line 64: ai_keywords = [...",
            "Line 65: 'claude', 'openai', 'anthropic', 'openrouter', 'ai...",
            "Line 66: 'vision', 'chat', 'assistant', '–∏–∏', '–Ω–µ–π—Ä–æ'...",
            "Line 86: # –§—É–Ω–∫—Ü–∏–∏...",
            "Line 95: # –ò–ò –º–æ–¥–µ–ª–∏...",
            "Line 97: for keyword in ai_keywords:...",
            "Line 99: info['ai_models'].append(f\"Line {line_num}: {line[...",
            "Line 225: if analysis.get('ai_models'):...",
            "Line 226: print(f\"{next_prefix}ü§ñ AI: {len(analysis['ai_model...",
            "Line 250: 'main_modules': [],...",
            "Line 251: 'ai_components': [],...",
            "Line 269: if tree_data['name'] in ['main.py', 'app.py', 'str...",
            "Line 270: summary['key_files'].append(f\"üöÄ Main: {file_path}\"...",
            "Line 276: # –ò–ò –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...",
            "Line 277: if analysis.get('ai_models'):...",
            "Line 278: summary['architecture_analysis']['ai_components']....",
            "Line 290: summary['architecture_analysis']['main_modules'].a...",
            "Line 314: def main():...",
            "Line 320: project_path = input(\"–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (Ente...",
            "Line 350: print(f\"\\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∞–π–ª–æ–≤:\")...",
            "Line 357: if arch['main_modules']:...",
            "Line 359: for module in arch['main_modules'][:5]:...",
            "Line 362: if arch['ai_components']:...",
            "Line 363: print(f\"\\nü§ñ –ò–ò –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:\")...",
            "Line 364: for component in arch['ai_components'][:5]:...",
            "Line 383: print(f\"\\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ê–†–•–ò–¢–ï–ö–¢–£–†–ï:\")...",
            "Line 386: if len(arch['ai_components']) > 1:...",
            "Line 387: print(\"  ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –æ–±—â–∏–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ò–ò-–∞–Ω–∞...",
            "Line 399: if __name__ == \"__main__\":...",
            "Line 400: main()..."
          ],
          "medical_terms": [
            "Line 3: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω...",
            "Line 4: –°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã, –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫...",
            "Line 10: from typing import Dict, List, Tuple...",
            "Line 13: class ProjectTreeAnalyzer:...",
            "Line 26: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 34: 'requirements': ['requirements.txt', 'setup.py', '...",
            "Line 47: def analyze_python_file(self, file_path: Path) -> ...",
            "Line 48: \"\"\"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç Python —Ñ–∞–π–ª\"\"\"...",
            "Line 53: 'functions': [],...",
            "Line 56: 'medical_terms': []...",
            "Line 59: medical_keywords = [...",
            "Line 60: 'ecg', 'ekg', 'xray', 'mri', 'ct', '–¥–∏–∞–≥–Ω–æ–∑', '–ø–∞—Ü...",
            "Line 61: 'diagnosis', 'medical', 'clinical', '–∞–Ω–∞–ª–∏–∑', 'pro...",
            "Line 89: info['functions'].append(func_name)...",
            "Line 103: for keyword in medical_keywords:...",
            "Line 105: info['medical_terms'].append(f\"Line {line_num}: {l...",
            "Line 113: def scan_directory(self, path: Path, max_depth: in...",
            "Line 119: 'type': 'directory',...",
            "Line 150: # –ê–Ω–∞–ª–∏–∑ Python —Ñ–∞–π–ª–æ–≤...",
            "Line 166: subdir = self.scan_directory(item, max_depth, curr...",
            "Line 188: def print_tree(self, tree_data: Dict, prefix: str ...",
            "Line 198: if tree_data['type'] == 'directory' and tree_data[...",
            "Line 209: # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ Python —Ñ–∞–π–ª–æ–≤...",
            "Line 222: if analysis.get('functions'):...",
            "Line 223: print(f\"{next_prefix}‚öôÔ∏è  Functions: {len(analysis[...",
            "Line 228: if analysis.get('medical_terms'):...",
            "Line 229: print(f\"{next_prefix}üè• Medical: {len(analysis['med...",
            "Line 239: def generate_summary(self, tree_data: Dict) -> Dic...",
            "Line 242: 'project_name': tree_data['name'],...",
            "Line 244: 'total_directories': tree_data['stats']['total_dir...",
            "Line 249: 'architecture_analysis': {...",
            "Line 252: 'medical_modules': [],...",
            "Line 258: # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã...",
            "Line 263: def _analyze_key_files(self, tree_data: Dict, summ...",
            "Line 264: \"\"\"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞\"\"\"...",
            "Line 272: # Python —Ñ–∞–π–ª—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º...",
            "Line 278: summary['architecture_analysis']['ai_components']....",
            "Line 281: if analysis.get('medical_terms'):...",
            "Line 282: summary['architecture_analysis']['medical_modules'...",
            "Line 286: summary['architecture_analysis']['ui_components']....",
            "Line 289: if len(analysis.get('classes', [])) > 2 or len(ana...",
            "Line 290: summary['architecture_analysis']['main_modules'].a...",
            "Line 294: summary['architecture_analysis']['data_storage'].a...",
            "Line 296: elif tree_data['type'] == 'directory' and 'childre...",
            "Line 301: def save_analysis(self, tree_data: Dict, summary: ...",
            "Line 302: \"\"\"–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –≤ JSON\"\"\"...",
            "Line 304: 'tree_structure': tree_data,...",
            "Line 316: print(\"üîç –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...",
            "Line 320: project_path = input(\"–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (Ente...",
            "Line 321: if not project_path:...",
            "Line 322: project_path = \".\"...",
            "Line 324: # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä...",
            "Line 325: analyzer = ProjectTreeAnalyzer(project_path)...",
            "Line 328: print(f\"\\nüîé –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {os.path.abspath...",
            "Line 329: tree_data = analyzer.scan_directory(Path(project_p...",
            "Line 346: print(f\"üìÇ –í—Å–µ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: {summary['total_direct...",
            "Line 354: print(f\"\\nüèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ô –ê–ù–ê–õ–ò–ó:\")...",
            "Line 355: arch = summary['architecture_analysis']...",
            "Line 367: if arch['medical_modules']:...",
            "Line 369: for module in arch['medical_modules'][:5]:...",
            "Line 387: print(\"  ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –æ–±—â–∏–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ò–ò-–∞–Ω–∞...",
            "Line 388: if len(arch['medical_modules']) > 2:...",
            "Line 393: # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑...",
            "Line 395: print(f\"\\nüíæ –ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}\")...",
            "Line 397: print(f\"\\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!\")..."
          ]
        }
      },
      "requirements.txt": {
        "type": "file",
        "name": "requirements.txt",
        "path": "requirements.txt",
        "size": 2271,
        "category": "docs"
      },
      "run_app.py": {
        "type": "file",
        "name": "run_app.py",
        "path": "run_app.py",
        "size": 11237,
        "category": "python",
        "analysis": {
          "lines": 320,
          "imports": [
            "import os",
            "import sys",
            "import subprocess",
            "import importlib.util",
            "from pathlib import Path",
            "from dotenv import load_dotenv",
            "import argparse"
          ],
          "classes": [],
          "functions": [
            "check_python_version",
            "check_requirements",
            "check_environment",
            "create_directories",
            "check_streamlit_config",
            "install_requirements",
            "run_application",
            "show_help",
            "main"
          ],
          "streamlit_pages": [],
          "ai_models": [
            "Line 3: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ò–ò...",
            "Line 15: \"\"\"–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python\"\"\"...",
            "Line 42: \"anthropic\"...",
            "Line 65: print(\"\\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\")...",
            "Line 76: print(\"‚ÑπÔ∏è  –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\")...",
            "Line 77: print(\"ü§ñ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\")...",
            "Line 85: api_key = os.getenv('ANTHROPIC_API_KEY')...",
            "Line 87: print(\"‚úÖ API –∫–ª—é—á Anthropic –Ω–∞–π–¥–µ–Ω\")...",
            "Line 90: print(\"‚ö†Ô∏è  API –∫–ª—é—á Anthropic –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\")...",
            "Line 91: print(\"ü§ñ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\")...",
            "Line 121: \"\"\"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Streamlit\"\"\"...",
            "Line 125: print(\"üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Streamlit...\")...",
            "Line 188: üè• –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –ê–°–°–ò–°–¢–ï–ù–¢ –° –ò–ò...",
            "Line 191: python run_app.py [–æ–ø—Ü–∏–∏]...",
            "Line 193: –û–ø—Ü–∏–∏:...",
            "Line 210: - API –∫–ª—é—á Anthropic (–¥–ª—è –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π)...",
            "Line 214: 2. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à API –∫–ª—é—á Anthropic...",
            "Line 218: GitHub: https://github.com/vasiliys961/medical-ass...",
            "Line 219: Email: vasiliys961@example.com...",
            "Line 223: def main():...",
            "Line 227: parser = argparse.ArgumentParser(description=\"–ú–µ–¥–∏...",
            "Line 246: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python...",
            "Line 284: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Streamlit...",
            "Line 299: print(\"\\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ò–ò –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç...",
            "Line 313: if __name__ == \"__main__\":...",
            "Line 315: main()..."
          ],
          "medical_terms": [
            "Line 99: def create_directories():...",
            "Line 101: directories = [...",
            "Line 112: for directory in directories:...",
            "Line 113: path = Path(directory)...",
            "Line 116: print(f\"‚úÖ –°–æ–∑–¥–∞–Ω–∞: {directory}\")...",
            "Line 118: print(f\"‚ÑπÔ∏è  –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {directory}\")...",
            "Line 170: print(\"‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\")...",
            "Line 218: GitHub: https://github.com/vasiliys961/medical-ass...",
            "Line 228: parser.add_argument(\"--help\", \"-h\", action=\"store_...",
            "Line 229: parser.add_argument(\"--check\", action=\"store_true\"...",
            "Line 230: parser.add_argument(\"--install\", action=\"store_tru...",
            "Line 231: parser.add_argument(\"--setup\", action=\"store_true\"...",
            "Line 232: parser.add_argument(\"--dev\", action=\"store_true\", ...",
            "Line 262: create_directories()...",
            "Line 282: create_directories()..."
          ]
        }
      },
      "streamlit_enhanced_pages.py": {
        "type": "file",
        "name": "streamlit_enhanced_pages.py",
        "path": "streamlit_enhanced_pages.py",
        "size": 33950,
        "category": "python",
        "analysis": {
          "lines": 700,
          "imports": [
            "import streamlit as st",
            "import numpy as np",
            "from PIL import Image",
            "import pandas as pd",
            "import json",
            "import plotly.graph_objects as go",
            "import plotly.express as px",
            "from typing import Dict, List, Optional",
            "import io",
            "import base64",
            "from .medical_ai_analyzer import EnhancedMedicalAIAnalyzer, ImageType, AnalysisResult"
          ],
          "classes": [],
          "functions": [
            "show_enhanced_analysis_page",
            "show_analysis_summary",
            "show_detailed_analysis_result",
            "show_comparative_analysis_page",
            "show_ai_training_page",
            "show_medical_protocols_page",
            "integrate_with_main_app"
          ],
          "streamlit_pages": [
            "Line 21: st.header(\"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–ê–Ω–∞–ª–∏–∑\")...",
            "Line 148: st.subheader(\"üìã –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ—Ç—á–µ—Ç\")...",
            "Line 162: st.subheader(\"üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞\")...",
            "Line 246: st.subheader(\"üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞\")...",
            "Line 265: st.subheader(\"üè• –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ö–æ–¥–∫–∏\")...",
            "Line 291: st.subheader(\"üéØ –î–∏–∞–≥–Ω–æ–∑\")...",
            "Line 309: st.subheader(\"üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\")...",
            "Line 332: st.subheader(\"‚ö° –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞\")...",
            "Line 349: st.subheader(\"üîç –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\")...",
            "Line 359: st.header(\"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\")...",
            "Line 414: st.subheader(\"üñºÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\")...",
            "Line 423: st.subheader(\"üìã –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞\")...",
            "Line 444: st.subheader(\"üìà –ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏\")...",
            "Line 469: st.subheader(\"ü§ñ –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∞–Ω...",
            "Line 514: st.header(\"üéì –û–±—É—á–µ–Ω–∏–µ –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –ò–ò\")...",
            "Line 539: st.subheader(\"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\"...",
            "Line 552: st.header(\"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã\")...",
            "Line 644: st.subheader(\"‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª\")...",
            "Line 684: st.set_page_config(page_title=\"Enhanced Medical AI..."
          ],
          "ai_models": [
            "Line 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å Streamlit...",
            "Line 17: from .medical_ai_analyzer import EnhancedMedicalAI...",
            "Line 20: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
            "Line 21: st.header(\"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–ê–Ω–∞–ª–∏–∑\")...",
            "Line 25: api_key = st.secrets.get(\"OPENROUTER_API_KEY\", \"sk...",
            "Line 26: st.session_state.enhanced_analyzer = EnhancedMedic...",
            "Line 142: show_detailed_analysis_result(result, show_metadat...",
            "Line 156: mime=\"text/plain\"...",
            "Line 198: st.plotly_chart(fig_pie, use_container_width=True)...",
            "Line 217: st.plotly_chart(fig_bar, use_container_width=True)...",
            "Line 219: def show_detailed_analysis_result(result: Analysis...",
            "Line 278: with st.container():...",
            "Line 307: # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...",
            "Line 309: st.subheader(\"üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\")...",
            "Line 355: st.dataframe(metadata_df, use_container_width=True...",
            "Line 366: [\"–í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞\", \"–†–∞–∑–Ω—ã–µ –ø—Ä–æ–µ–∫—Ü–∏–∏\", \"–î–æ/–ø–æ—Å–ª...",
            "Line 383: api_key = st.secrets.get(\"OPENROUTER_API_KEY\", \"sk...",
            "Line 384: st.session_state.enhanced_analyzer = EnhancedMedic...",
            "Line 419: st.image(image, caption=result.filename, use_conta...",
            "Line 440: st.dataframe(comparison_df, use_container_width=Tr...",
            "Line 466: st.plotly_chart(fig, use_container_width=True)...",
            "Line 468: # –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é...",
            "Line 469: st.subheader(\"ü§ñ –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∞–Ω...",
            "Line 493: 3. –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...",
            "Line 500: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 501: comparative_analysis = analyzer._send_ai_request(...",
            "Line 510: st.error(f\"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 512: def show_ai_training_page():...",
            "Line 513: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ –ò–ò\"\"\"...",
            "Line 514: st.header(\"üéì –û–±—É—á–µ–Ω–∏–µ –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –ò–ò\")...",
            "Line 530: - –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò...",
            "Line 554: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤...",
            "Line 560: \"–ù–µ–π—Ä–æ—Ä–∞–¥–∏–æ–ª–æ–≥–∏—è (–ú–†–¢/–ö–¢)\",...",
            "Line 572: \"–æ–ø–∏—Å–∞–Ω–∏–µ\": \"–ü—Ä–æ—Ç–æ–∫–æ–ª –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω...",
            "Line 597: \"–æ–ø–∏—Å–∞–Ω–∏–µ\": \"–†–µ–Ω—Ç–≥–µ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø–Ω–µ–≤–º–æ–Ω–∏–∏...",
            "Line 637: st.markdown(\"**–ö–ª—é—á–µ–≤—ã–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:*...",
            "Line 649: custom_criteria = st.text_area(\"–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä...",
            "Line 661: def integrate_with_main_app():...",
            "Line 662: \"\"\"–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º Streamlit –ø—Ä–∏...",
            "Line 666: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\",...",
            "Line 668: \"üéì –û–±—É—á–µ–Ω–∏–µ –ò–ò\",...",
            "Line 672: # –í —Ñ—É–Ω–∫—Ü–∏–∏ main() –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏...",
            "Line 674: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\": show_enhanced_analysis_...",
            "Line 676: \"üéì –û–±—É—á–µ–Ω–∏–µ –ò–ò\": show_ai_training_page,...",
            "Line 682: if __name__ == \"__main__\":...",
            "Line 684: st.set_page_config(page_title=\"Enhanced Medical AI...",
            "Line 689: \"–û–±—É—á–µ–Ω–∏–µ –ò–ò\",...",
            "Line 697: elif test_page == \"–û–±—É—á–µ–Ω–∏–µ –ò–ò\":...",
            "Line 698: show_ai_training_page()..."
          ],
          "medical_terms": [
            "Line 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å Streamlit...",
            "Line 11: import plotly.graph_objects as go...",
            "Line 13: from typing import Dict, List, Optional...",
            "Line 17: from .medical_ai_analyzer import EnhancedMedicalAI...",
            "Line 20: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
            "Line 21: st.header(\"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–ê–Ω–∞–ª–∏–∑\")...",
            "Line 23: # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...",
            "Line 26: st.session_state.enhanced_analyzer = EnhancedMedic...",
            "Line 30: # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 34: auto_detect = st.checkbox(\"–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞\", ...",
            "Line 35: if not auto_detect:...",
            "Line 36: selected_type = st.selectbox(...",
            "Line 40: 'ecg': 'üìà –≠–ö–ì',...",
            "Line 41: 'xray': 'ü©ª –†–µ–Ω—Ç–≥–µ–Ω',...",
            "Line 42: 'mri': 'üß† –ú–†–¢',...",
            "Line 43: 'ct': 'üîç –ö–¢',...",
            "Line 78: placeholder=\"–í–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–º–Ω–µ–∑, –∂–∞–ª–æ–±—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞, –ø—Ä–µ...",
            "Line 81: if uploaded_files and st.button(\"üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—à–∏...",
            "Line 97: if auto_detect:...",
            "Line 100: image_type = ImageType(selected_type)...",
            "Line 115: status_text.text(f\"–ê–Ω–∞–ª–∏–∑ {filename}...\")...",
            "Line 128: st.error(f\"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ {filename}: {e}\")...",
            "Line 135: st.success(f\"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂...",
            "Line 155: file_name=f\"medical_report_{len(results)}_images.t...",
            "Line 160: \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
            "Line 162: st.subheader(\"üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞\")...",
            "Line 213: title=\"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º\"...",
            "Line 220: \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
            "Line 224: with st.expander(f\"üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑: {filename}\"...",
            "Line 241: if result.structured_findings:...",
            "Line 242: findings = result.structured_findings...",
            "Line 257: artifacts = tech.get(\"artifacts\", [])...",
            "Line 258: if artifacts:...",
            "Line 259: st.warning(f\"–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: {', '.join(artifacts)}\")...",
            "Line 264: if \"clinical_findings\" in findings:...",
            "Line 266: clinical = findings[\"clinical_findings\"]...",
            "Line 269: normal = clinical.get(\"normal_structures\", [])...",
            "Line 274: pathological = clinical.get(\"pathological_findings...",
            "Line 289: # –î–∏–∞–≥–Ω–æ–∑...",
            "Line 290: if \"diagnosis\" in findings:...",
            "Line 291: st.subheader(\"üéØ –î–∏–∞–≥–Ω–æ–∑\")...",
            "Line 292: diagnosis = findings[\"diagnosis\"]...",
            "Line 294: primary = diagnosis.get(\"primary_diagnosis\", \"–ù–µ –æ...",
            "Line 295: st.markdown(f\"**–û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑:** {primary}\")...",
            "Line 297: differential = diagnosis.get(\"differential_diagnos...",
            "Line 303: icd10 = diagnosis.get(\"icd10_codes\", [])...",
            "Line 312: urgent = recommendations.get(\"urgent_actions\", [])...",
            "Line 315: for action in urgent:...",
            "Line 316: st.markdown(f\"‚Ä¢ {action}\")...",
            "Line 339: risk_factors = risk.get(\"risk_factors\", [])...",
            "Line 340: if risk_factors:...",
            "Line 341: st.warning(f\"**–§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞:** {', '.join(risk_fa...",
            "Line 358: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\"\"\"...",
            "Line 359: st.header(\"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\")...",
            "Line 364: comparison_type = st.selectbox(...",
            "Line 366: [\"–í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞\", \"–†–∞–∑–Ω—ã–µ –ø—Ä–æ–µ–∫—Ü–∏–∏\", \"–î–æ/–ø–æ—Å–ª...",
            "Line 379: if st.button(\"üîÑ –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\"):...",
            "Line 381: # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...",
            "Line 384: st.session_state.enhanced_analyzer = EnhancedMedic...",
            "Line 388: # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...",
            "Line 401: # –ê–Ω–∞–ª–∏–∑...",
            "Line 404: additional_context=f\"–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ({compar...",
            "Line 414: st.subheader(\"üñºÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\")...",
            "Line 427: findings = result.structured_findings...",
            "Line 433: \"–û—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–≥–Ω–æ–∑\": findings.get(\"diagnosis\", {})....",
            "Line 436: \"–ü–∞—Ç–æ–ª–æ–≥–∏—è\": \"–î–∞\" if findings.get(\"clinical_findin...",
            "Line 442: # –ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏...",
            "Line 444: st.subheader(\"üìà –ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏\")...",
            "Line 454: name='–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞',...",
            "Line 455: line=dict(color='blue', width=3),...",
            "Line 456: marker=dict(size=8)...",
            "Line 460: title=\"–î–∏–Ω–∞–º–∏–∫–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞\",...",
            "Line 463: yaxis=dict(range=[0, 1])...",
            "Line 469: st.subheader(\"ü§ñ –ò–ò-–∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º—É –∞–Ω...",
            "Line 473: # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 475: –ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ {len(results)} –º–µ–¥–∏...",
            "Line 478: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:...",
            "Line 486: - –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Ö–æ–¥–∫–∏: {json.dumps(result.structured_...",
            "Line 491: 1. –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—ã—è–≤–ª–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π...",
            "Line 500: # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 510: st.error(f\"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...",
            "Line 531: - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤...",
            "Line 548: st.info(\"–ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –ø—É—Å—Ç–∞\")...",
            "Line 550: def show_medical_protocols_page():...",
            "Line 551: \"\"\"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤\"\"\"...",
            "Line 552: st.header(\"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã\")...",
            "Line 554: # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤...",
            "Line 555: protocol_category = st.selectbox(...",
            "Line 568: # –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã...",
            "Line 569: protocols = {...",
            "Line 571: \"–ê–Ω–∞–ª–∏–∑ –≠–ö–ì –ø—Ä–∏ –û–ö–°\": {...",
            "Line 572: \"–æ–ø–∏—Å–∞–Ω–∏–µ\": \"–ü—Ä–æ—Ç–æ–∫–æ–ª –∞–Ω–∞–ª–∏–∑–∞ –≠–ö–ì –ø—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω...",
            "Line 621: if protocol_category in protocols:...",
            "Line 622: selected_protocols = protocols[protocol_category]...",
            "Line 624: for protocol_name, protocol_data in selected_proto...",
            "Line 625: with st.expander(f\"üìã {protocol_name}\", expanded=Fa...",
            "Line 627: st.markdown(f\"**–û–ø–∏—Å–∞–Ω–∏–µ:** {protocol_data['–æ–ø–∏—Å–∞–Ω...",
            "Line 633: }.get(protocol_data['—Å—Ä–æ—á–Ω–æ—Å—Ç—å'], \"gray\")...",
            "Line 635: st.markdown(f\"**–°—Ä–æ—á–Ω–æ—Å—Ç—å:** :{urgency_color}[{pro...",
            "Line 638: for point in protocol_data['–∫–ª—é—á–µ–≤—ã–µ_—Ç–æ—á–∫–∏']:...",
            "Line 641: st.markdown(f\"**–ö–æ–¥—ã –ú–ö–ë-10:** {', '.join(protocol...",
            "Line 643: # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã...",
            "Line 644: st.subheader(\"‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª\")...",
            "Line 646: with st.form(\"custom_protocol\"):...",
            "Line 647: custom_name = st.text_input(\"–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞\")...",
            "Line 651: custom_urgency = st.selectbox(\"–£—Ä–æ–≤–µ–Ω—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏\",...",
            "Line 653: if st.form_submit_button(\"üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª\"):...",
            "Line 655: st.success(f\"‚úÖ –ü—Ä–æ—Ç–æ–∫–æ–ª '{custom_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\"...",
            "Line 666: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\",...",
            "Line 667: \"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
            "Line 669: \"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\"...",
            "Line 673: page_functions = {...",
            "Line 674: \"üî¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ò–ò-–∞–Ω–∞–ª–∏–∑\": show_enhanced_analysis_...",
            "Line 675: \"üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\": show_comparative_analysi...",
            "Line 677: \"üìö –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\": show_medical_protocols_...",
            "Line 680: return enhanced_pages, page_functions...",
            "Line 684: st.set_page_config(page_title=\"Enhanced Medical AI...",
            "Line 686: test_page = st.sidebar.selectbox(\"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—É...",
            "Line 687: \"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
            "Line 688: \"–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\",...",
            "Line 690: \"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\"...",
            "Line 693: if test_page == \"–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑\":...",
            "Line 695: elif test_page == \"–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑\":...",
            "Line 699: elif test_page == \"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\":...",
            "Line 700: show_medical_protocols_page()..."
          ]
        }
      },
      "uploads": {
        "type": "directory",
        "name": "uploads",
        "path": "uploads",
        "children": {
          "backups": {
            "type": "file",
            "name": "backups",
            "path": "uploads/backups",
            "size": 0,
            "category": "other"
          },
          "temp": {
            "type": "file",
            "name": "temp",
            "path": "uploads/temp",
            "size": 0,
            "category": "other"
          }
        },
        "stats": {
          "total_files": 2,
          "total_dirs": 0,
          "python_files": 0,
          "total_lines": 0,
          "categories": {
            "other": 2
          }
        }
      },
      "utils.py": {
        "type": "file",
        "name": "utils.py",
        "path": "utils.py",
        "size": 0,
        "category": "python",
        "analysis": {
          "lines": 0,
          "imports": [],
          "classes": [],
          "functions": [],
          "streamlit_pages": [],
          "ai_models": [],
          "medical_terms": []
        }
      }
    },
    "stats": {
      "total_files": 32,
      "total_dirs": 6,
      "python_files": 22,
      "total_lines": 11040,
      "categories": {
        "config": 3,
        "docs": 2,
        "python": 22,
        "data": 2,
        "other": 3
      }
    }
  },
  "summary": {
    "project_name": "",
    "total_files": 32,
    "total_directories": 6,
    "python_files": 22,
    "total_lines_of_code": 11040,
    "file_categories": {
      "config": 3,
      "docs": 2,
      "python": 22,
      "data": 2,
      "other": 3
    },
    "key_files": [
      "üöÄ Main: app.py"
    ],
    "architecture_analysis": {
      "main_modules": [
        "advanced_ecg_processor.py",
        "app.py",
        "claude_assistant.py",
        "dicom_processor.py",
        "enhanced_medical_ai_analyzer.py",
        "enhanced_processors.py",
        "modules/advanced_ecg_processor.py",
        "modules/advanced_lab_processor.py",
        "modules/claude_assistant.py",
        "modules/dicom_processor.py",
        "modules/enhanced_medical_ai_analyzer.py",
        "modules/genetic_analyzer.py",
        "modules/medical_ai_analyzer.py",
        "modules/streamlit_enhanced_pages.py",
        "python project_tree_analyzer.py",
        "run_app.py",
        "streamlit_enhanced_pages.py"
      ],
      "ai_components": [
        "advanced_ecg_processor.py",
        "app.py",
        "assemblyai_transcriber.py",
        "claude_assistant.py",
        "dicom_processor.py",
        "enhanced_medical_ai_analyzer.py",
        "enhanced_processors.py",
        "local_docs.py",
        "modules/advanced_ecg_processor.py",
        "modules/advanced_lab_processor.py",
        "modules/claude_assistant.py",
        "modules/dicom_processor.py",
        "modules/enhanced_medical_ai_analyzer.py",
        "modules/genetic_analyzer.py",
        "modules/medical_ai_analyzer.py",
        "modules/streamlit_enhanced_pages.py",
        "python project_tree_analyzer.py",
        "run_app.py",
        "streamlit_enhanced_pages.py"
      ],
      "medical_modules": [
        "advanced_ecg_processor.py",
        "app.py",
        "assemblyai_transcriber.py",
        "claude_assistant.py",
        "database.py",
        "dicom_processor.py",
        "enhanced_medical_ai_analyzer.py",
        "enhanced_processors.py",
        "local_docs.py",
        "modules/advanced_ecg_processor.py",
        "modules/advanced_lab_processor.py",
        "modules/claude_assistant.py",
        "modules/dicom_processor.py",
        "modules/enhanced_medical_ai_analyzer.py",
        "modules/genetic_analyzer.py",
        "modules/medical_ai_analyzer.py",
        "modules/streamlit_enhanced_pages.py",
        "python project_tree_analyzer.py",
        "run_app.py",
        "streamlit_enhanced_pages.py"
      ],
      "ui_components": [
        "app.py",
        "enhanced_medical_ai_analyzer.py",
        "modules/streamlit_enhanced_pages.py",
        "python project_tree_analyzer.py",
        "streamlit_enhanced_pages.py"
      ],
      "data_storage": [
        ".streamlit/secrets.toml",
        "data/medical_data.db",
        "medical_data.db",
        "modules/.streamlit/secrets.toml",
        "project_analysis.json"
      ]
    }
  },
  "timestamp": "2025-08-20T09:20:55.435135"
}